var N=null,E="",T="t",U="u",searchIndex={};
var R=["rand_core","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","usize","Implement `fill_bytes` by reading chunks from the output…","try_from","borrow_mut","try_into","result","rand_core::block","to_owned","clone_into","type_id","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","blockrng","blockrng64","formatter","description","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","Retrieves an element at a given index, returning `None` if…","Retrieves a mutable element at a given index, returning…","Returns the number of items in this vector.","is_empty","Returns whether this vector is empty.","Returns an iterator over CVec.","into_iter","option","View the stored data as a slice.","CVecIter","CSliceIter","borrow","typeid","bitflags","lazy_static","Random number generation traits","Error type of random number generators","The error kind","The error message","Error kind which can be matched over.","Unavailable","Feature is not available; not recoverable.","Unexpected","General failure; there may be a chance of recovery on retry.","Transient","A transient failure which likely can be resolved or worked…","NotReady","Not ready yet: recommended to try again a little later.","should_retry","True if this kind of error may resolve itself on retry.","should_wait","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","with_cause","Create a new instance, with specified kind, message, and a…","take_cause","Take the cause, if any. This allows the embedded cause to…","The `BlockRngCore` trait and implementation helpers","A trait for RNGs which do not generate random numbers…","Results element type, e.g. `u32`.","Results type. This is the 'block' an RNG implementing…","generate","Generate a new block of results.","Helper functions for implementing `RngCore` functions.","next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.","fill_bytes_via_next","Implement `fill_bytes` via `next_u64` and `next_u32`,…","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","Implement `next_u32` via `fill_bytes`, little-endian order.","next_u64_via_fill","Implement `next_u64` via `fill_bytes`, little-endian order.","Little-Endian utilities","read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…","read_u64_into","Reads unsigned 64 bit integers from `src` into `dst`.…","RngCore","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","CryptoRng","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","to_string","cpusubtype","sizeofcmds","sin_family","sigaction","if_nameindex","mach_timebase_info","ipv6_mreq","itimerval","sockaddr_in6","sockaddr_un","pthread_mutexattr_t","pthread_condattr_t","pthread_rwlockattr_t","siginfo_t","radvisory","sockaddr_in","kevent64_s","if_msghdr","proc_taskinfo","proc_bsdinfo","proc_taskallinfo","xsw_usage","mach_header","mach_header_64","segment_command","segment_command_64","load_command","sockaddr_dl","sockaddr_inarp","sockaddr_ctl","in_pktinfo","in6_pktinfo","proc_threadinfo","pthread_rwlock_t","pthread_mutex_t","pthread_cond_t","sockaddr_storage","timeval32","pthread_attr_t","timespec","protoent","sockaddr","addrinfo","fstore_t","sigevent","ipc_perm","semid_ds","shmid_ds","in6_addr","locale_t","timezone","num_traits","min_value","max_value","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","Lcg64Xsh32","Mcg128Xsl64","rand_xorshift","XorShiftRng","rand_chacha","chachacore","ChaChaRng","ChaChaCore","Hc128Core","A cryptographically secure random number generator that…","rand_isaac","new_from_u64","Create an ISAAC-64 random number generator using an `u64`…","rand_isaac::isaac","rand_isaac::isaac64","Create an ISAAC random number generator using an `u64` as…","Refills the output buffer, `results`. See also the…","isaacarray","Isaac64Rng","Isaac64Core","IsaacCore","rand_jitter","timererror","jitterrng","TimerError","JitterRng","num_integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_floor","mod_floor","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","< Read-only","< Read-write","refcount","timestamp","< In milliseconds, populated using SDL_GetTicks()","< event dependent data","padding2","padding3","windowID","< The window with keyboard focus, if any","< The window with mouse focus, if any","< The mouse instance id, or SDL_TOUCH_MOUSEID","< ::SDL_PRESSED or ::SDL_RELEASED","padding1","< X coordinate, relative to window","< Y coordinate, relative to window","< The joystick instance id","< The relative motion in the X direction","< The relative motion in the Y direction","< The axis value (range: -32768 to 32767)","< The joystick device index for the ADDED event, instance…","< Normalized in the range 0...1","< Normalized in the range -1...1","< The touch device id","numFingers","< Normalized center of gesture","< ::SDL_QUIT","< User defined data pointer","direction","< Direction of the effect.","< Duration of the effect.","< Delay before starting the effect.","< Button that triggers the effect.","< How soon it can be triggered again after button.","attack_length","< Duration of the attack.","attack_level","< Level at the start of the attack.","fade_length","< Duration of the fade.","fade_level","< Level at the end of the fade.","interval","ext_data","bits_per_pixel","scanline_pad","backing_store","bit_gravity","win_gravity","backing_planes","backing_pixel","save_under","do_not_propagate_mask","override_redirect","green_mask","blue_mask","border_width","key_click_percent","bell_percent","bell_pitch","bell_duration","byte_order","bitmap_unit","bitmap_pad","bitmap_bit_order","send_event","subwindow","same_screen","display","major_code","minor_code","selection","requestor","colormap","extension","client_data","callback","encoding_is_wchar","subsystem","< Private","< Wayland display","< Wayland surface","_address","< Wayland shell_surface (window manager handle)","__align","< Window event data","< Gesture event data","condition","pixmap_format","< Never used","< reserved","< windows, command (apple), meta","posix_memalign","getloadavg","This is a semi-private blit function and it performs…","Get the SDL joystick layer binding for this controller…","Trigger a rumble effect Each call to this function cancels…","\\brief Returns the number of effects a haptic device can…","\\brief Get a hint","\\brief Log a message with the specified category and…","\\brief Get the implementation dependent name of a sensor.","\\brief Get the type of a sensor.","\\brief Get the platform dependent type of a sensor.","\\brief Get the instance ID of a sensor.","\\brief Get the size of a window's underlying drawable in…","sdl2_sys","__uint8_t","__uint32_t","__int64_t","__off64_t","__uint16_t","__int16_t","sdl2_sys::gfx","uintmax_t","clockid_t","suseconds_t","blksize_t","fsblkcnt_t","fsfilcnt_t","pthread_t","pthread_key_t","WUNTRACED","WCONTINUED","EXIT_FAILURE","EXIT_SUCCESS","FD_SETSIZE","SDL_PIXELTYPE_UNKNOWN","SDL_PIXELTYPE_INDEX1","SDL_PIXELTYPE_INDEX4","SDL_PIXELTYPE_INDEX8","SDL_PIXELTYPE_PACKED8","SDL_PIXELTYPE_PACKED16","SDL_PIXELTYPE_PACKED32","SDL_PIXELTYPE_ARRAYU8","SDL_PIXELTYPE_ARRAYU16","SDL_PIXELTYPE_ARRAYU32","SDL_PIXELTYPE_ARRAYF16","SDL_PIXELTYPE_ARRAYF32","SDL_BITMAPORDER_NONE","SDL_BITMAPORDER_4321","SDL_BITMAPORDER_1234","SDL_PACKEDORDER_NONE","SDL_PACKEDORDER_XRGB","SDL_PACKEDORDER_RGBX","SDL_PACKEDORDER_ARGB","SDL_PACKEDORDER_RGBA","SDL_PACKEDORDER_XBGR","SDL_PACKEDORDER_BGRX","SDL_PACKEDORDER_ABGR","SDL_PACKEDORDER_BGRA","SDL_ARRAYORDER_NONE","SDL_ARRAYORDER_RGB","SDL_ARRAYORDER_RGBA","SDL_ARRAYORDER_ARGB","SDL_ARRAYORDER_BGR","SDL_ARRAYORDER_BGRA","SDL_ARRAYORDER_ABGR","SDL_PACKEDLAYOUT_NONE","SDL_PACKEDLAYOUT_332","SDL_PACKEDLAYOUT_4444","SDL_PACKEDLAYOUT_1555","SDL_PACKEDLAYOUT_5551","SDL_PACKEDLAYOUT_565","SDL_PACKEDLAYOUT_8888","SDL_PACKEDLAYOUT_2101010","SDL_PACKEDLAYOUT_1010102","SDL_PIXELFORMAT_UNKNOWN","SDL_PIXELFORMAT_INDEX1LSB","SDL_PIXELFORMAT_INDEX1MSB","SDL_PIXELFORMAT_INDEX4LSB","SDL_PIXELFORMAT_INDEX4MSB","SDL_PIXELFORMAT_INDEX8","SDL_PIXELFORMAT_RGB332","SDL_PIXELFORMAT_RGB444","SDL_PIXELFORMAT_RGB555","SDL_PIXELFORMAT_BGR555","SDL_PIXELFORMAT_ARGB4444","SDL_PIXELFORMAT_RGBA4444","SDL_PIXELFORMAT_ABGR4444","SDL_PIXELFORMAT_BGRA4444","SDL_PIXELFORMAT_ARGB1555","SDL_PIXELFORMAT_RGBA5551","SDL_PIXELFORMAT_ABGR1555","SDL_PIXELFORMAT_BGRA5551","SDL_PIXELFORMAT_RGB565","SDL_PIXELFORMAT_BGR565","SDL_PIXELFORMAT_RGB24","SDL_PIXELFORMAT_BGR24","SDL_PIXELFORMAT_RGB888","SDL_PIXELFORMAT_RGBX8888","SDL_PIXELFORMAT_BGR888","SDL_PIXELFORMAT_BGRX8888","SDL_PIXELFORMAT_ARGB8888","SDL_PIXELFORMAT_RGBA8888","SDL_PIXELFORMAT_ABGR8888","SDL_PIXELFORMAT_BGRA8888","SDL_PIXELFORMAT_ARGB2101010","SDL_PIXELFORMAT_YV12","SDL_PIXELFORMAT_IYUV","SDL_PIXELFORMAT_YUY2","SDL_PIXELFORMAT_UYVY","SDL_PIXELFORMAT_YVYU","SDL_PIXELFORMAT_NV12","SDL_PIXELFORMAT_NV21","SDL_PIXELFORMAT_EXTERNAL_OES","SDLK_UNKNOWN","SDLK_RETURN","SDLK_ESCAPE","SDLK_BACKSPACE","SDLK_SPACE","SDLK_EXCLAIM","SDLK_QUOTEDBL","SDLK_HASH","SDLK_PERCENT","SDLK_DOLLAR","SDLK_AMPERSAND","SDLK_QUOTE","SDLK_LEFTPAREN","SDLK_RIGHTPAREN","SDLK_ASTERISK","SDLK_PLUS","SDLK_COMMA","SDLK_MINUS","SDLK_PERIOD","SDLK_SLASH","SDLK_COLON","SDLK_SEMICOLON","SDLK_LESS","SDLK_EQUALS","SDLK_GREATER","SDLK_QUESTION","SDLK_LEFTBRACKET","SDLK_BACKSLASH","SDLK_RIGHTBRACKET","SDLK_CARET","SDLK_UNDERSCORE","SDLK_BACKQUOTE","SDLK_CAPSLOCK","SDLK_PRINTSCREEN","SDLK_SCROLLLOCK","SDLK_PAUSE","SDLK_INSERT","SDLK_HOME","SDLK_PAGEUP","SDLK_DELETE","SDLK_PAGEDOWN","SDLK_RIGHT","SDLK_LEFT","SDLK_DOWN","SDLK_NUMLOCKCLEAR","SDLK_KP_DIVIDE","SDLK_KP_MULTIPLY","SDLK_KP_MINUS","SDLK_KP_PLUS","SDLK_KP_ENTER","SDLK_KP_1","SDLK_KP_2","SDLK_KP_3","SDLK_KP_4","SDLK_KP_5","SDLK_KP_6","SDLK_KP_7","SDLK_KP_8","SDLK_KP_9","SDLK_KP_0","SDLK_KP_PERIOD","SDLK_APPLICATION","SDLK_POWER","SDLK_KP_EQUALS","SDLK_EXECUTE","SDLK_HELP","SDLK_MENU","SDLK_SELECT","SDLK_STOP","SDLK_AGAIN","SDLK_UNDO","SDLK_COPY","SDLK_PASTE","SDLK_FIND","SDLK_MUTE","SDLK_VOLUMEUP","SDLK_VOLUMEDOWN","SDLK_KP_COMMA","SDLK_KP_EQUALSAS400","SDLK_ALTERASE","SDLK_SYSREQ","SDLK_CANCEL","SDLK_CLEAR","SDLK_PRIOR","SDLK_RETURN2","SDLK_SEPARATOR","SDLK_OPER","SDLK_CLEARAGAIN","SDLK_CRSEL","SDLK_EXSEL","SDLK_KP_00","SDLK_KP_000","SDLK_THOUSANDSSEPARATOR","SDLK_DECIMALSEPARATOR","SDLK_CURRENCYUNIT","SDLK_CURRENCYSUBUNIT","SDLK_KP_LEFTPAREN","SDLK_KP_RIGHTPAREN","SDLK_KP_LEFTBRACE","SDLK_KP_RIGHTBRACE","SDLK_KP_TAB","SDLK_KP_BACKSPACE","SDLK_KP_A","SDLK_KP_B","SDLK_KP_C","SDLK_KP_D","SDLK_KP_E","SDLK_KP_F","SDLK_KP_XOR","SDLK_KP_POWER","SDLK_KP_PERCENT","SDLK_KP_LESS","SDLK_KP_GREATER","SDLK_KP_AMPERSAND","SDLK_KP_DBLAMPERSAND","SDLK_KP_VERTICALBAR","SDLK_KP_DBLVERTICALBAR","SDLK_KP_COLON","SDLK_KP_HASH","SDLK_KP_SPACE","SDLK_KP_AT","SDLK_KP_EXCLAM","SDLK_KP_MEMSTORE","SDLK_KP_MEMRECALL","SDLK_KP_MEMCLEAR","SDLK_KP_MEMADD","SDLK_KP_MEMSUBTRACT","SDLK_KP_MEMMULTIPLY","SDLK_KP_MEMDIVIDE","SDLK_KP_PLUSMINUS","SDLK_KP_CLEAR","SDLK_KP_CLEARENTRY","SDLK_KP_BINARY","SDLK_KP_OCTAL","SDLK_KP_DECIMAL","SDLK_KP_HEXADECIMAL","SDLK_LCTRL","SDLK_LSHIFT","SDLK_LALT","SDLK_LGUI","SDLK_RCTRL","SDLK_RSHIFT","SDLK_RALT","SDLK_RGUI","SDLK_MODE","SDLK_AUDIONEXT","SDLK_AUDIOPREV","SDLK_AUDIOSTOP","SDLK_AUDIOPLAY","SDLK_AUDIOMUTE","SDLK_MEDIASELECT","SDLK_MAIL","SDLK_CALCULATOR","SDLK_COMPUTER","SDLK_AC_SEARCH","SDLK_AC_HOME","SDLK_AC_BACK","SDLK_AC_FORWARD","SDLK_AC_STOP","SDLK_AC_REFRESH","SDLK_AC_BOOKMARKS","SDLK_BRIGHTNESSDOWN","SDLK_BRIGHTNESSUP","SDLK_DISPLAYSWITCH","SDLK_KBDILLUMTOGGLE","SDLK_KBDILLUMDOWN","SDLK_KBDILLUMUP","SDLK_EJECT","SDLK_SLEEP","SDLK_APP1","SDLK_APP2","SDLK_AUDIOREWIND","SDLK_AUDIOFASTFORWARD","SDL_LOG_CATEGORY_APPLICATION","SDL_LOG_CATEGORY_ERROR","SDL_LOG_CATEGORY_ASSERT","SDL_LOG_CATEGORY_SYSTEM","SDL_LOG_CATEGORY_AUDIO","SDL_LOG_CATEGORY_VIDEO","SDL_LOG_CATEGORY_RENDER","SDL_LOG_CATEGORY_INPUT","SDL_LOG_CATEGORY_TEST","SDL_LOG_CATEGORY_RESERVED1","SDL_LOG_CATEGORY_RESERVED2","SDL_LOG_CATEGORY_RESERVED3","SDL_LOG_CATEGORY_RESERVED4","SDL_LOG_CATEGORY_RESERVED5","SDL_LOG_CATEGORY_RESERVED6","SDL_LOG_CATEGORY_RESERVED7","SDL_LOG_CATEGORY_RESERVED8","SDL_LOG_CATEGORY_RESERVED9","SDL_LOG_CATEGORY_RESERVED10","SDL_LOG_CATEGORY_CUSTOM","sdl2_sys::mixer","sdl2_sys::ttf","sdl2_sys::gfx::framerate","_bindgen_ty_1","_bindgen_ty_2","_bindgen_ty_3","_bindgen_ty_4","_bindgen_ty_5","_bindgen_ty_6","_bindgen_ty_7","_bindgen_ty_8","sdl_dummy_enum","sdl_assertstate","sdl_errorcode","sdl_threadpriority","sdl_audiostatus","__sigset_t","__pthread_rwlock_arch_t","__pthread_internal_list","__pthread_mutex_s","__pthread_cond_s","__pthread_cond_s__bindgen_ty_1","__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","__pthread_cond_s__bindgen_ty_2","__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","pthread_barrier_t","pthread_barrierattr_t","random_data","drand48_data","sdl_blendmode","sdl_blendoperation","sdl_blendfactor","sdl_yuv_conversion_mode","sdl_windowflags","sdl_windoweventid","sdl_displayeventid","sdl_displayorientation","sdl_glattr","sdl_glprofile","sdl_glcontextflag","sdl_glcontextreleaseflag","sdl_glcontextresetnotification","sdl_hittestresult","sdl_scancode","sdl_keymod","sdl_systemcursor","sdl_mousewheeldirection","sdl_joysticktype","sdl_joystickpowerlevel","sdl_gamecontrollerbindtype","sdl_gamecontrolleraxis","sdl_gamecontrollerbutton","sdl_eventtype","sdl_eventaction","sdl_hintpriority","sdl_logpriority","sdl_messageboxflags","sdl_messageboxbuttonflags","sdl_messageboxcolortype","sdl_powerstate","sdl_rendererflags","sdl_textureaccess","sdl_texturemodulate","sdl_rendererflip","sdl_sensortype","windowshapemode","_bindgen_ty_9","xorientation","ximcaretdirection","ximcaretstyle","ximstatusdatatype","sdl_syswm_type","__va_list_tag","wl_display","wl_surface","wl_shell_surface","__fsid_t","SDL_AssertData","SDL_atomic_t","SDL_RWops","SDL_RWops__bindgen_ty_1__bindgen_ty_1","SDL_RWops__bindgen_ty_1__bindgen_ty_2","SDL_AudioSpec","SDL_AudioCVT","timeval","SDL_Color","SDL_Palette","SDL_PixelFormat","SDL_Point","SDL_Surface","SDL_DisplayMode","SDL_Keysym","SDL_JoystickGUID","SDL_GameControllerButtonBind","SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1","SDL_Finger","SDL_CommonEvent","SDL_DisplayEvent","SDL_WindowEvent","SDL_KeyboardEvent","SDL_TextEditingEvent","SDL_TextInputEvent","SDL_MouseMotionEvent","SDL_MouseButtonEvent","SDL_MouseWheelEvent","SDL_JoyAxisEvent","SDL_JoyBallEvent","SDL_JoyHatEvent","SDL_JoyButtonEvent","SDL_JoyDeviceEvent","SDL_ControllerAxisEvent","SDL_ControllerButtonEvent","SDL_ControllerDeviceEvent","SDL_AudioDeviceEvent","SDL_TouchFingerEvent","SDL_MultiGestureEvent","SDL_DollarGestureEvent","SDL_DropEvent","SDL_SensorEvent","SDL_QuitEvent","SDL_OSEvent","SDL_UserEvent","SDL_SysWMEvent","SDL_HapticDirection","SDL_HapticConstant","SDL_HapticPeriodic","SDL_HapticCondition","SDL_HapticRamp","SDL_HapticLeftRight","SDL_HapticCustom","SDL_MessageBoxButtonData","SDL_MessageBoxColor","SDL_MessageBoxColorScheme","SDL_MessageBoxData","SDL_RendererInfo","SDL_WindowShapeMode","SDL_version","_XExtData","XExtCodes","XPixmapFormatValues","XGCValues","ScreenFormat","XSetWindowAttributes","XWindowAttributes","XHostAddress","XServerInterpretedAddress","_XImage_funcs","XWindowChanges","XRectangle","XKeyboardControl","XKeyboardState","XTimeCoord","XModifierKeymap","XKeyEvent","XButtonEvent","XMotionEvent","XCrossingEvent","XFocusChangeEvent","XKeymapEvent","XExposeEvent","XGraphicsExposeEvent","XNoExposeEvent","XVisibilityEvent","XCreateWindowEvent","XDestroyWindowEvent","XUnmapEvent","XMapEvent","XMapRequestEvent","XReparentEvent","XConfigureEvent","XGravityEvent","XResizeRequestEvent","XConfigureRequestEvent","XCirculateEvent","XCirculateRequestEvent","XPropertyEvent","XSelectionClearEvent","XSelectionRequestEvent","XSelectionEvent","XColormapEvent","XClientMessageEvent","XMappingEvent","XErrorEvent","XAnyEvent","XGenericEvent","XGenericEventCookie","XCharStruct","XFontProp","XFontStruct","XTextItem","XTextItem16","XFontSetExtents","XmbTextItem","XwcTextItem","XOMCharSetList","XOMOrientation","XOMFontInfo","XIMStyles","XIMCallback","XICCallback","_XIMPreeditStateNotifyCallbackStruct","_XIMStringConversionText","_XIMStringConversionCallbackStruct","_XIMPreeditDrawCallbackStruct","_XIMPreeditCaretCallbackStruct","_XIMStatusDrawCallbackStruct","_XIMHotKeyTrigger","_XIMHotKeyTriggers","XIMValuesList","SDL_SysWMmsg","SDL_SysWMmsg__bindgen_ty_1__bindgen_ty_1","SDL_SysWMinfo","SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_1","SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_2","SDL_BlitMap","SDL_RWops__bindgen_ty_1","SDL_GameControllerButtonBind__bindgen_ty_1","SDL_Event","SDL_HapticEffect","SDL_WindowShapeParams","XClientMessageEvent__bindgen_ty_1","XEDataObject","_XIMText__bindgen_ty_1","_XIMStringConversionText__bindgen_ty_1","_XIMStatusDrawCallbackStruct__bindgen_ty_1","SDL_SysWMmsg__bindgen_ty_1","SDL_SysWMinfo__bindgen_ty_1","SDL_DUMMY_ENUM","SDL_AssertState","SDL_errorcode","SDL_ThreadPriority","SDL_AudioStatus","SDL_BlendMode","SDL_BlendOperation","SDL_BlendFactor","SDL_YUV_CONVERSION_MODE","SDL_WindowFlags","SDL_WindowEventID","SDL_DisplayEventID","SDL_DisplayOrientation","SDL_GLattr","SDL_GLprofile","SDL_GLcontextFlag","SDL_GLcontextReleaseFlag","SDL_GLContextResetNotification","SDL_HitTestResult","SDL_Scancode","SDL_Keymod","SDL_SystemCursor","SDL_MouseWheelDirection","SDL_JoystickType","SDL_JoystickPowerLevel","SDL_GameControllerBindType","SDL_GameControllerAxis","SDL_GameControllerButton","SDL_EventType","SDL_eventaction","SDL_HintPriority","SDL_LogPriority","SDL_MessageBoxFlags","SDL_MessageBoxButtonFlags","SDL_MessageBoxColorType","SDL_PowerState","SDL_RendererFlags","SDL_TextureAccess","SDL_TextureModulate","SDL_RendererFlip","SDL_SensorType","WindowShapeMode","XOrientation","XIMCaretDirection","XIMCaretStyle","XIMStatusDataType","SDL_SYSWM_TYPE","Mix_Chunk","FPSmanager","_SDL_iconv_t","SDL_mutex","SDL_semaphore","SDL_Thread","_SDL_AudioStream","SDL_Window","SDL_Cursor","_SDL_Joystick","_SDL_GameController","_SDL_Haptic","SDL_Renderer","SDL_Texture","_SDL_Sensor","_XDisplay","_XPrivate","_XrmHashBucketRec","VkInstance_T","VkSurfaceKHR_T","_Mix_Music","_TTF_Font","size_hint","next_back","rangeinclusive","rangestep","rangestepinclusive","RangeInclusive","RangeStep","RangeStepInclusive","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","bernoulli","dirichlet","sample_iter","weightederror","choose_multiple","Collects `amount` values at random from the iterator into…","Fill `dest` entirely with random bytes (uniform value…","Shuffle a mutable slice in place.","rand::distributions::uniform","rand::rngs","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","rand::seq","weightedindex","unitspheresurface","indexvecintoiter","WeightedError","SampleUniform","UniformSampler","SampleBorrow","WeightedIndex","UnitSphereSurface","Distribution","WeightedChoice","ReseedingRng","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","StandardNormal","UniformFloat","UniformDuration","SliceChooseIter","IndexVecIter","IndexVecIntoIter","A random number generator that retrieves randomness…","Create a new `OsRng`.","A true random number generator based on jitter in the CPU…","An error that can occur when [`JitterRng::test_timer`]…","No timer available.","CoarseTimer","Timer too coarse to use as an entropy source.","NotMonotonic","Timer is not monotonically increasing.","TinyVariantions","Variations of deltas of time too small.","TooManyStuck","Too many stuck results (indicating no added entropy).","Create a new `JitterRng`. Makes use of `std::time` for a…","new_with_timer","Create a new `JitterRng`. A custom timer can be supplied,…","Configures how many rounds are used to generate each…","Basic quality tests on the timer, by measuring CPU timing…","timer_stats","Statistical test: return the timer delta of one normal run…","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","A generic trait for converting a number to a value.","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert an `i128` to return an optional value of this…","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple…","extended_gcd","Greatest common divisor and Bézout coefficients.","extended_gcd_lcm","Greatest common divisor, least common multiple, and Bézout…","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if `self` is a multiple of `other`.","Returns `true` if the number is even.","Returns `true` if the number is odd.","Simultaneous truncated integer division and modulus.…","Simultaneous floored integer division and modulus. Returns…","next_multiple_of","Rounds up to nearest multiple of argument.","prev_multiple_of","Rounds down to nearest multiple of argument.","Returns an iterator over the given range [start, stop)…","range_inclusive","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by `step`.…","range_step_inclusive","Return an iterator over the range [start, stop] by `step`.…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","num::traits","from_isize","from_usize","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","Returns the negative infinite value.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Raise a number to a floating point power.","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","unsigned_shl","unsigned_shr","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Performs addition that returns `None` instead of wrapping…","checked_add","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","checked_sub","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","checked_mul","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","checked_div","Divides two numbers, checking for underflow, overflow and…","num::traits::ops","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Binary operator for raising a value to a power.","Returns `self` to the power `rhs`.","Useful functions for signed numbers (i.e. numbers that can…","is_positive","Returns true if the number is positive and false if the…","is_negative","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","from_str_radix","Convert from a string and radix <= 36.","A value bounded by a minimum and a maximum","num::integer","An iterator over the range [start, stop)","An iterator over the range [start, stop]","An iterator over the range [start, stop) by `step`. It…","An iterator over the range [start, stop] by `step`. It…","range_step","from_i128","from_u128","Generic trait for floating point numbers that works with…","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns `true` if the number is NaN.","Returns `true` if the number is infinite.","Returns `true` if the number is neither infinite or NaN.","Returns `true` if `self` is positive, including `+0.0` and…","Returns `true` if `self` is negative, including `-0.0` and…","Returns the reciprocal (multiplicative inverse) of the…","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return Euler’s number.","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","Return `π / 2.0`.","Return `π / 3.0`.","Return `π / 4.0`.","Return `π / 6.0`.","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","count_ones","signed_shl","signed_shr","swap_bytes","Performs an integral remainder that returns `None` instead…","checked_rem","Finds the remainder of dividing two numbers, checking for…","Performs negation that returns `None` if the result can't…","checked_neg","Negates a number, returning `None` for results that can't…","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Unary operator for retrieving the multiplicative inverse,…","Returns the multiplicative inverse of `self`.","The resulting type after applying the fused multiply-add.","The fused multiply-add assignment operation.","mul_add_assign","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs a left shift that does not panic.","wrapping_shl","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…","Performs a right shift that does not panic.","wrapping_shr","Panic-free bitwise shift-right; yields `self >>…","A trait for real number types that do not necessarily have…","Raise a number to a real number power.","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","Greatest common divisor and Bézout coefficients","An iterator over binomial coefficients.","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Calculates the Greatest Common Divisor (GCD) and Lowest…","Calculate the binomial coefficient.","multinomial","Calculate the multinomial coefficient.","Provides methods to compute an integer's square root, cube…","For a given n, iterate over all binomial coefficients…","iterbinomial","sdl2::clipboard","AppTerminating","sdl2::event","sdl2::event::Event","AppLowMemory","AppWillEnterBackground","AppDidEnterBackground","AppWillEnterForeground","AppDidEnterForeground","TextEditing","window_id","MouseMotion","MouseButtonDown","MouseButtonUp","JoyAxisMotion","JoyBallMotion","The joystick's `id`","JoyHatMotion","JoyButtonDown","JoyButtonUp","JoyDeviceAdded","JoyDeviceRemoved","ControllerAxisMotion","ControllerButtonDown","The controller's joystick `id`","ControllerButtonUp","ControllerDeviceAdded","ControllerDeviceRemoved","ControllerDeviceRemapped","FingerMotion","DollarGesture","DollarRecord","num_fingers","MultiGesture","ClipboardUpdate","Removes all events in the event queue that match the…","eventtype","touchdevice","integerorsdlerror","sdl2::joystick","Retrieve the number of balls for this joystick","num_joysticks","Retrieve the total number of attached joysticks and…","name_for_index","set_event_state","event_state","addmappingerror","from_string","sdl2::controller","instance_id","Set the rumble motors to their specified intensities, if…","Attempt to open the joystick at index `joystick_index` and…","sdl2::haptic","LeftBracket","RightBracket","PrintScreen","NumLockClear","Application","KpEqualsAS400","ThousandsSeparator","DecimalSeparator","CurrencyUnit","CurrencySubUnit","KpLeftParen","KpRightParen","KpLeftBrace","KpRightBrace","KpBackspace","KpAmpersand","KpDblAmpersand","KpVerticalBar","KpDblVerticalBar","KpMemRecall","KpMemSubtract","KpMemMultiply","KpMemDivide","KpPlusMinus","KpClearEntry","KpHexadecimal","MediaSelect","AcBookmarks","BrightnessDown","BrightnessUp","DisplaySwitch","KbdIllumToggle","KbdIllumDown","keyboardstate","scancode","sdl2::keyboard","relativemousestate","mousebutton","mousestate","from_sdl_state","to_sdl_state","Returns true if the left mouse button is pressed.","Tests if the middle mouse button was pressed.","Tests if the right mouse button was pressed.","Tests if the X1 mouse button was pressed.","Tests if the X2 mouse button was pressed.","Returns the x coordinate of the state","Returns the y coordinate of the state","is_mouse_button_pressed","Returns true if the mouse button is pressed.","mouse_buttons","Returns an iterator all mouse buttons with a boolean…","mousebuttoniterator","pressed_mouse_buttons","Returns an iterator of pressed mouse buttons.","pressedmousebuttoniterator","focused_window_id","sdl2::mouse","pixelformatenum","Locks a surface so that the pixels can be directly…","Returns the Surface's pixel buffer if the Surface doesn't…","pixelformat","surfaceref","pixelmasks","sdl2::video::gl_attr","Sets the attribute: the minimum number of bits for the…","Gets the attribute: the minimum number of bits for the…","Sets the attribute: the minimum number of bits in the…","Gets the attribute: the minimum number of bits in the…","Sets the attribute: the minimum number of bits for the red…","Gets the attribute: the minimum number of bits for the red…","contextflagsbuilder","sdl2::video","displaymode","sdl_displaymode","windowbuilder","videosubsystem","into_canvas","windowcontext","display_mode","window_flags","fullscreentype","eventpump","sdl2::timer","timercallback","DriverIterator","WidthOverflows","HeightOverflows","SdlError","WidthMustBeMultipleOfTwoForFormat","PitchOverflows","sdl2::render","sdl2::render::UpdateTextureYUVError","XMustBeMultipleOfTwoForFormat","YMustBeMultipleOfTwoForFormat","HeightMustBeMultipleOfTwoForFormat","driveriterator","rendererinfo","from_surface","surfacecontext","texture_creator","Returns a `TextureCreator` that can create Textures to be…","texturecreator","targetrendererror","canvasbuilder","default_pixel_format","texturevalueerror","Shorthand for `create_texture(format,…","set_blend_mode","blendmode","set_clip_rect","Copies a portion of the texture to the current rendering…","set_color_mod","set_alpha_mod","Sets the blend mode used for drawing operations (Fill and…","blend_mode","joysticksubsystem","hapticsubsystem","gamecontrollersubsystem","Obtain an SDL context.","timersubsystem","eventsubsystem","Wraps `SDL_AudioDeviceID` and owns the callback data used…","audiospecdesired","audiodevice","sdl2::audio","audioformat","audiospecwav","Opens a new audio device given the desired parameters and…","audiosubsystem","open_playback","open_capture","Opens a new audio device for capture (given the desired…","audiostatus","Pauses playback of the audio device.","Starts playback of the audio device.","InvalidTitle","Returns an empty set of flags.","messageboxflag","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","Returns `true` if there are flags common to both `self`…","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","messageboxbuttonflag","intersects","A hint that specifies whether a fullscreen Window will be…","from_bits","fontstyle","fontresult","Starts specifying a rendering of the given UTF-8-encoded…","partialrendering","Returns the width and height of the given text when…","get_linked_version","initflag","AudioFormat","contains","Play chunk on channel, or if channel is -1, pick the first…","set_position","from_file","get_volume","set_volume","sdl2::gfx","sdl2::filesystem","sdl2::surface","sdl2::pixels","sdl2::rwops","sdl2::version","sdl2::messagebox","sdl2::image","sdl2::mixer","sdl2::gfx::framerate","from_xpm_array","load_texture","Load src for use as a sample.","rounded_rectangle","rounded_box","filled_circle","filled_ellipse","filled_trigon","filled_polygon","textured_polygon","rotozoom_xy","rotate_90deg","sdl2::rect","partial_cmp","sdl2::ttf","windowevent","powerlevel","mappingstatus","systemcursor","mousewheeldirection","glprofile","windowpos","swapinterval","textureaccess","texturequery","audiospec","glyphmetrics","sdl_point","sdl_messageboxcolorscheme","ordering","sdl2::log","Returns the set difference of the two sets of flags.","sub_assign","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","sdl_rect","deref_mut","from_iter","from_i64","from_u64","IntegerOrSdlError","VideoSubsystem","ClipboardUtil","WindowEvent","EventSubsystem","PrefPathError","JoystickSubsystem","AddMappingError","MappingStatus","GameControllerSubsystem","GameController","HapticSubsystem","KeyboardState","KeyboardUtil","TextInputUtil","SystemCursor","MouseWheelDirection","MouseButton","RelativeMouseState","PixelFormatEnum","PixelFormat","DisplayMode","FullscreenType","SwapInterval","WindowBuildError","ContextFlagsBuilder","ContextFlags","WindowSurfaceRef","WindowContext","WindowBuilder","TimerSubsystem","RendererInfo","TextureQuery","TargetRenderError","TextureAccess","TextureValueError","UpdateTextureError","UpdateTextureYUVError","RenderTarget","RendererContext","CanvasBuilder","TextureCreator","AudioSubsystem","AudioSpecWAV","AudioSpecDesired","AudioStatus","AudioCallback","AudioFormatNum","AudioDevice","MessageBoxColorScheme","ClickedButton","ShowMessageError","MessageBoxFlag","MessageBoxButtonFlag","GlyphMetrics","PartialRendering","Sdl2TtfContext","LoadSurface","SaveSurface","LoadTexture","LoaderRWops","DrawRenderer","RotozoomSurface","EventPollIterator","EventWaitIterator","EventWaitTimeoutIterator","ScancodeIterator","PressedScancodeIterator","MouseButtonIterator","PressedMouseButtonIterator","SurfaceContext","AudioDeviceLockGuard","Sdl2ImageContext","Sdl2MixerContext","refresh_rate","texture_formats","max_texture_width","max_texture_height","display_name","Pumps the event loop, gathering events from the input…","imagefilter","VkSurfaceKHR","AUDIO_U16LSB","AUDIO_S16LSB","AUDIO_U16MSB","AUDIO_S16MSB","AUDIO_S32LSB","AUDIO_S32MSB","AUDIO_F32LSB","AUDIO_F32MSB","AUDIO_U16SYS","AUDIO_S16SYS","AUDIO_S32SYS","AUDIO_F32SYS","sdl_joystickguid","sdl_rendererinfo","sdl_version"];
searchIndex["c_vec"]={"doc":"Library to interface with chunks of memory allocated in C.","i":[[3,R[44],"c_vec","Iterator over `CVec`.",N,N],[3,"CVec",E,"The type representing a foreign chunk of memory.",N,N],[3,R[45],E,"Iterator over `CSlice`.",N,N],[3,"CSlice",E,"The type representing an 'unsafe' foreign chunk of memory",N,N],[11,"new",E,"Create a `CVec` from a raw pointer to a buffer with a…",0,N],[11,"new_with_dtor",E,"Create a `CVec` from a foreign buffer, with a given…",0,N],[11,"get",E,R[35],0,[[["self"],[R[9]]],[R[42]]]],[11,"get_mut",E,R[36],0,[[["self"],[R[9]]],[R[42]]]],[11,"into_inner",E,"Unwrap the pointer without running the destructor",0,N],[11,"len",E,R[37],0,[[["self"]],[R[9]]]],[11,R[38],E,R[39],0,[[["self"]],["bool"]]],[11,"as_cslice",E,"Converts to CSlice.",0,[[["self"]],["cslice"]]],[11,"iter",E,R[40],0,[[["self"]],["cveciter"]]],[11,"new",E,"Create a `CSlice` from a raw pointer to a buffer with a…",1,N],[11,"get",E,R[35],1,[[["self"],[R[9]]],[R[42]]]],[11,"get_mut",E,R[36],1,[[["self"],[R[9]]],[R[42]]]],[11,"len",E,R[37],1,[[["self"]],[R[9]]]],[11,R[38],E,R[39],1,[[["self"]],["bool"]]],[11,"iter",E,R[40],1,[[["self"]],["csliceiter"]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[41],E,E,2,[[["self"]],["i"]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[41],E,E,3,[[["self"]],["i"]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["cslice"]],["vec"]]],[11,"into",E,E,0,[[["cvec"]],["vec"]]],[11,"next",E,E,2,[[["self"]],[R[42]]]],[11,"next",E,E,3,[[["self"]],[R[42]]]],[11,"as_mut",E,R[43],0,N],[11,"as_mut",E,R[43],1,N],[11,"as_ref",E,R[43],0,N],[11,"as_ref",E,R[43],1,N],[11,"drop",E,E,0,[[["self"]]]],[11,"index",E,E,1,[[["self"],[R[9]]],[T]]],[11,"index_mut",E,E,1,[[["self"],[R[9]]],[T]]]],"p":[[3,"CVec"],[3,"CSlice"],[3,R[44]],[3,R[45]]]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,R[773],E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[150],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[117],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[118],E,E,N,N],[12,"it_interval",E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[151],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,R[152],E,E,N,N],[12,"sa_len",E,E,17,N],[12,"sa_family",E,E,17,N],[12,"sa_data",E,E,17,N],[3,R[119],E,E,N,N],[12,"sin6_len",E,E,18,N],[12,"sin6_family",E,E,18,N],[12,"sin6_port",E,E,18,N],[12,"sin6_flowinfo",E,E,18,N],[12,"sin6_addr",E,E,18,N],[12,"sin6_scope_id",E,E,18,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,19,N],[12,"pw_passwd",E,E,19,N],[12,"pw_uid",E,E,19,N],[12,"pw_gid",E,E,19,N],[12,"pw_change",E,E,19,N],[12,"pw_class",E,E,19,N],[12,"pw_gecos",E,E,19,N],[12,"pw_dir",E,E,19,N],[12,"pw_shell",E,E,19,N],[12,"pw_expire",E,E,19,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,20,N],[12,"ifa_name",E,E,20,N],[12,"ifa_flags",E,E,20,N],[12,"ifa_addr",E,E,20,N],[12,"ifa_netmask",E,E,20,N],[12,"ifa_dstaddr",E,E,20,N],[12,"ifa_data",E,E,20,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,21,N],[12,"tm_min",E,E,21,N],[12,"tm_hour",E,E,21,N],[12,"tm_mday",E,E,21,N],[12,"tm_mon",E,E,21,N],[12,"tm_year",E,E,21,N],[12,"tm_wday",E,E,21,N],[12,"tm_yday",E,E,21,N],[12,"tm_isdst",E,E,21,N],[12,"tm_gmtoff",E,E,21,N],[12,"tm_zone",E,E,21,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,22,N],[12,"msg_namelen",E,E,22,N],[12,"msg_iov",E,E,22,N],[12,"msg_iovlen",E,E,22,N],[12,"msg_control",E,E,22,N],[12,"msg_controllen",E,E,22,N],[12,"msg_flags",E,E,22,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,23,N],[12,"cmsg_level",E,E,23,N],[12,"cmsg_type",E,E,23,N],[3,"fsid_t",E,E,N,N],[3,R[115],E,E,N,N],[12,"if_index",E,E,24,N],[12,"if_name",E,E,24,N],[3,R[120],E,E,N,N],[12,"sun_len",E,E,25,N],[12,"sun_family",E,E,25,N],[12,"sun_path",E,E,25,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,26,N],[12,"nodename",E,E,26,N],[12,"release",E,E,26,N],[12,"version",E,E,26,N],[12,"machine",E,E,26,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,27,N],[12,"imr_interface",E,E,27,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,28,N],[12,"aio_offset",E,E,28,N],[12,"aio_buf",E,E,28,N],[12,"aio_nbytes",E,E,28,N],[12,"aio_reqprio",E,E,28,N],[12,"aio_sigevent",E,E,28,N],[12,"aio_lio_opcode",E,E,28,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,29,N],[12,"gl_offs",E,E,29,N],[12,"gl_pathv",E,E,29,N],[3,R[153],E,E,N,N],[12,"ai_flags",E,E,30,N],[12,"ai_family",E,E,30,N],[12,"ai_socktype",E,E,30,N],[12,"ai_protocol",E,E,30,N],[12,"ai_addrlen",E,E,30,N],[12,"ai_canonname",E,E,30,N],[12,"ai_addr",E,E,30,N],[12,"ai_next",E,E,30,N],[3,R[116],E,E,N,N],[12,"numer",E,E,31,N],[12,"denom",E,E,31,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,32,N],[12,"st_mode",E,E,32,N],[12,"st_nlink",E,E,32,N],[12,"st_ino",E,E,32,N],[12,"st_uid",E,E,32,N],[12,"st_gid",E,E,32,N],[12,"st_rdev",E,E,32,N],[12,"st_atime",E,E,32,N],[12,"st_atime_nsec",E,E,32,N],[12,"st_mtime",E,E,32,N],[12,"st_mtime_nsec",E,E,32,N],[12,"st_ctime",E,E,32,N],[12,"st_ctime_nsec",E,E,32,N],[12,"st_birthtime",E,E,32,N],[12,"st_birthtime_nsec",E,E,32,N],[12,"st_size",E,E,32,N],[12,"st_blocks",E,E,32,N],[12,"st_blksize",E,E,32,N],[12,"st_flags",E,E,32,N],[12,"st_gen",E,E,32,N],[12,"st_lspare",E,E,32,N],[12,"st_qspare",E,E,32,N],[3,R[121],E,E,N,N],[3,R[122],E,E,N,N],[3,R[123],E,E,N,N],[3,R[124],E,E,N,N],[12,"si_signo",E,E,33,N],[12,"si_errno",E,E,33,N],[12,"si_code",E,E,33,N],[12,"si_pid",E,E,33,N],[12,"si_uid",E,E,33,N],[12,"si_status",E,E,33,N],[12,"si_addr",E,E,33,N],[3,R[114],E,E,N,N],[12,"sa_sigaction",E,E,34,N],[12,"sa_mask",E,E,34,N],[12,"sa_flags",E,E,34,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,35,N],[12,"ss_size",E,E,35,N],[12,"ss_flags",E,E,35,N],[3,R[154],E,E,N,N],[12,"fst_flags",E,E,36,N],[12,"fst_posmode",E,E,36,N],[12,"fst_offset",E,E,36,N],[12,"fst_length",E,E,36,N],[12,"fst_bytesalloc",E,E,36,N],[3,R[125],E,E,N,N],[12,"ra_offset",E,E,37,N],[12,"ra_count",E,E,37,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,38,N],[12,"f_frsize",E,E,38,N],[12,"f_blocks",E,E,38,N],[12,"f_bfree",E,E,38,N],[12,"f_bavail",E,E,38,N],[12,"f_files",E,E,38,N],[12,"f_ffree",E,E,38,N],[12,"f_favail",E,E,38,N],[12,"f_fsid",E,E,38,N],[12,"f_flag",E,E,38,N],[12,"f_namemax",E,E,38,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,39,N],[12,"dli_fbase",E,E,39,N],[12,"dli_sname",E,E,39,N],[12,"dli_saddr",E,E,39,N],[3,R[126],E,E,N,N],[12,"sin_len",E,E,40,N],[12,R[113],E,E,40,N],[12,"sin_port",E,E,40,N],[12,"sin_addr",E,E,40,N],[12,"sin_zero",E,E,40,N],[3,R[127],E,E,N,N],[12,"ident",E,E,41,N],[12,"filter",E,E,41,N],[12,"flags",E,E,41,N],[12,"fflags",E,E,41,N],[12,"data",E,E,41,N],[12,"udata",E,E,41,N],[12,"ext",E,E,41,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,42,N],[12,"dqb_bsoftlimit",E,E,42,N],[12,"dqb_curbytes",E,E,42,N],[12,"dqb_ihardlimit",E,E,42,N],[12,"dqb_isoftlimit",E,E,42,N],[12,"dqb_curinodes",E,E,42,N],[12,"dqb_btime",E,E,42,N],[12,"dqb_itime",E,E,42,N],[12,"dqb_id",E,E,42,N],[12,"dqb_spare",E,E,42,N],[3,R[128],E,E,N,N],[12,"ifm_msglen",E,E,43,N],[12,"ifm_version",E,E,43,N],[12,"ifm_type",E,E,43,N],[12,"ifm_addrs",E,E,43,N],[12,"ifm_flags",E,E,43,N],[12,"ifm_index",E,E,43,N],[12,"ifm_data",E,E,43,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,44,N],[12,"c_oflag",E,E,44,N],[12,"c_cflag",E,E,44,N],[12,"c_lflag",E,E,44,N],[12,"c_cc",E,E,44,N],[12,"c_ispeed",E,E,44,N],[12,"c_ospeed",E,E,44,N],[3,"flock",E,E,N,N],[12,"l_start",E,E,45,N],[12,"l_len",E,E,45,N],[12,"l_pid",E,E,45,N],[12,"l_type",E,E,45,N],[12,"l_whence",E,E,45,N],[3,"sf_hdtr",E,E,N,N],[12,"headers",E,E,46,N],[12,"hdr_cnt",E,E,46,N],[12,"trailers",E,E,46,N],[12,"trl_cnt",E,E,46,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,47,N],[12,"thousands_sep",E,E,47,N],[12,"grouping",E,E,47,N],[12,"int_curr_symbol",E,E,47,N],[12,"currency_symbol",E,E,47,N],[12,"mon_decimal_point",E,E,47,N],[12,"mon_thousands_sep",E,E,47,N],[12,"mon_grouping",E,E,47,N],[12,"positive_sign",E,E,47,N],[12,"negative_sign",E,E,47,N],[12,"int_frac_digits",E,E,47,N],[12,"frac_digits",E,E,47,N],[12,"p_cs_precedes",E,E,47,N],[12,"p_sep_by_space",E,E,47,N],[12,"n_cs_precedes",E,E,47,N],[12,"n_sep_by_space",E,E,47,N],[12,"p_sign_posn",E,E,47,N],[12,"n_sign_posn",E,E,47,N],[12,"int_p_cs_precedes",E,E,47,N],[12,"int_n_cs_precedes",E,E,47,N],[12,"int_p_sep_by_space",E,E,47,N],[12,"int_n_sep_by_space",E,E,47,N],[12,"int_p_sign_posn",E,E,47,N],[12,"int_n_sign_posn",E,E,47,N],[3,R[155],E,E,N,N],[12,"sigev_notify",E,E,48,N],[12,"sigev_signo",E,E,48,N],[12,"sigev_value",E,E,48,N],[12,"sigev_notify_attributes",E,E,48,N],[3,R[129],E,E,N,N],[12,"pti_virtual_size",E,E,49,N],[12,"pti_resident_size",E,E,49,N],[12,"pti_total_user",E,E,49,N],[12,"pti_total_system",E,E,49,N],[12,"pti_threads_user",E,E,49,N],[12,"pti_threads_system",E,E,49,N],[12,"pti_policy",E,E,49,N],[12,"pti_faults",E,E,49,N],[12,"pti_pageins",E,E,49,N],[12,"pti_cow_faults",E,E,49,N],[12,"pti_messages_sent",E,E,49,N],[12,"pti_messages_received",E,E,49,N],[12,"pti_syscalls_mach",E,E,49,N],[12,"pti_syscalls_unix",E,E,49,N],[12,"pti_csw",E,E,49,N],[12,"pti_threadnum",E,E,49,N],[12,"pti_numrunning",E,E,49,N],[12,"pti_priority",E,E,49,N],[3,R[130],E,E,N,N],[12,"pbi_flags",E,E,50,N],[12,"pbi_status",E,E,50,N],[12,"pbi_xstatus",E,E,50,N],[12,"pbi_pid",E,E,50,N],[12,"pbi_ppid",E,E,50,N],[12,"pbi_uid",E,E,50,N],[12,"pbi_gid",E,E,50,N],[12,"pbi_ruid",E,E,50,N],[12,"pbi_rgid",E,E,50,N],[12,"pbi_svuid",E,E,50,N],[12,"pbi_svgid",E,E,50,N],[12,"rfu_1",E,E,50,N],[12,"pbi_comm",E,E,50,N],[12,"pbi_name",E,E,50,N],[12,"pbi_nfiles",E,E,50,N],[12,"pbi_pgid",E,E,50,N],[12,"pbi_pjobc",E,E,50,N],[12,"e_tdev",E,E,50,N],[12,"e_tpgid",E,E,50,N],[12,"pbi_nice",E,E,50,N],[12,"pbi_start_tvsec",E,E,50,N],[12,"pbi_start_tvusec",E,E,50,N],[3,R[131],E,E,N,N],[12,"pbsd",E,E,51,N],[12,"ptinfo",E,E,51,N],[3,R[132],E,E,N,N],[12,"xsu_total",E,E,52,N],[12,"xsu_avail",E,E,52,N],[12,"xsu_used",E,E,52,N],[12,"xsu_pagesize",E,E,52,N],[12,"xsu_encrypted",E,E,52,N],[3,"xucred",E,E,N,N],[12,"cr_version",E,E,53,N],[12,"cr_uid",E,E,53,N],[12,"cr_ngroups",E,E,53,N],[12,"cr_groups",E,E,53,N],[3,R[133],E,E,N,N],[12,"magic",E,E,54,N],[12,"cputype",E,E,54,N],[12,R[111],E,E,54,N],[12,"filetype",E,E,54,N],[12,"ncmds",E,E,54,N],[12,R[112],E,E,54,N],[12,"flags",E,E,54,N],[3,R[134],E,E,N,N],[12,"magic",E,E,55,N],[12,"cputype",E,E,55,N],[12,R[111],E,E,55,N],[12,"filetype",E,E,55,N],[12,"ncmds",E,E,55,N],[12,R[112],E,E,55,N],[12,"flags",E,E,55,N],[12,"reserved",E,E,55,N],[3,R[135],E,E,N,N],[12,"cmd",E,E,56,N],[12,"cmdsize",E,E,56,N],[12,"segname",E,E,56,N],[12,"vmaddr",E,E,56,N],[12,"vmsize",E,E,56,N],[12,"fileoff",E,E,56,N],[12,"filesize",E,E,56,N],[12,"maxprot",E,E,56,N],[12,"initprot",E,E,56,N],[12,"nsects",E,E,56,N],[12,"flags",E,E,56,N],[3,R[136],E,E,N,N],[12,"cmd",E,E,57,N],[12,"cmdsize",E,E,57,N],[12,"segname",E,E,57,N],[12,"vmaddr",E,E,57,N],[12,"vmsize",E,E,57,N],[12,"fileoff",E,E,57,N],[12,"filesize",E,E,57,N],[12,"maxprot",E,E,57,N],[12,"initprot",E,E,57,N],[12,"nsects",E,E,57,N],[12,"flags",E,E,57,N],[3,R[137],E,E,N,N],[12,"cmd",E,E,58,N],[12,"cmdsize",E,E,58,N],[3,R[138],E,E,N,N],[12,"sdl_len",E,E,59,N],[12,"sdl_family",E,E,59,N],[12,"sdl_index",E,E,59,N],[12,"sdl_type",E,E,59,N],[12,"sdl_nlen",E,E,59,N],[12,"sdl_alen",E,E,59,N],[12,"sdl_slen",E,E,59,N],[12,"sdl_data",E,E,59,N],[3,R[139],E,E,N,N],[12,"sin_len",E,E,60,N],[12,R[113],E,E,60,N],[12,"sin_port",E,E,60,N],[12,"sin_addr",E,E,60,N],[12,"sin_srcaddr",E,E,60,N],[12,"sin_tos",E,E,60,N],[12,"sin_other",E,E,60,N],[3,R[140],E,E,N,N],[12,"sc_len",E,E,61,N],[12,"sc_family",E,E,61,N],[12,"ss_sysaddr",E,E,61,N],[12,"sc_id",E,E,61,N],[12,"sc_unit",E,E,61,N],[12,"sc_reserved",E,E,61,N],[3,R[141],E,E,N,N],[12,"ipi_ifindex",E,E,62,N],[12,"ipi_spec_dst",E,E,62,N],[12,"ipi_addr",E,E,62,N],[3,R[142],E,E,N,N],[12,"ipi6_addr",E,E,63,N],[12,"ipi6_ifindex",E,E,63,N],[3,R[156],E,E,N,N],[12,"uid",E,E,64,N],[12,"gid",E,E,64,N],[12,"cuid",E,E,64,N],[12,"cgid",E,E,64,N],[12,"mode",E,E,64,N],[12,"_seq",E,E,64,N],[12,"_key",E,E,64,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,65,N],[12,"sem_op",E,E,65,N],[12,"sem_flg",E,E,65,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,66,N],[12,"ar_pro",E,E,66,N],[12,"ar_hln",E,E,66,N],[12,"ar_pln",E,E,66,N],[12,"ar_op",E,E,66,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,67,N],[3,"kevent",E,E,N,N],[12,"ident",E,E,68,N],[12,"filter",E,E,68,N],[12,"flags",E,E,68,N],[12,"fflags",E,E,68,N],[12,"data",E,E,68,N],[12,"udata",E,E,68,N],[3,R[157],E,E,N,N],[12,"sem_perm",E,E,69,N],[12,"sem_base",E,E,69,N],[12,"sem_nsems",E,E,69,N],[12,"sem_otime",E,E,69,N],[12,"sem_pad1",E,E,69,N],[12,"sem_ctime",E,E,69,N],[12,"sem_pad2",E,E,69,N],[12,"sem_pad3",E,E,69,N],[3,R[158],E,E,N,N],[12,"shm_perm",E,E,70,N],[12,"shm_segsz",E,E,70,N],[12,"shm_lpid",E,E,70,N],[12,"shm_cpid",E,E,70,N],[12,"shm_nattch",E,E,70,N],[12,"shm_atime",E,E,70,N],[12,"shm_dtime",E,E,70,N],[12,"shm_ctime",E,E,70,N],[12,"shm_internal",E,E,70,N],[3,R[143],E,E,N,N],[12,"pth_user_time",E,E,71,N],[12,"pth_system_time",E,E,71,N],[12,"pth_cpu_usage",E,E,71,N],[12,"pth_policy",E,E,71,N],[12,"pth_run_state",E,E,71,N],[12,"pth_flags",E,E,71,N],[12,"pth_sleep_time",E,E,71,N],[12,"pth_curpri",E,E,71,N],[12,"pth_priority",E,E,71,N],[12,"pth_maxpriority",E,E,71,N],[12,"pth_name",E,E,71,N],[3,"statfs",E,E,N,N],[12,"f_bsize",E,E,72,N],[12,"f_iosize",E,E,72,N],[12,"f_blocks",E,E,72,N],[12,"f_bfree",E,E,72,N],[12,"f_bavail",E,E,72,N],[12,"f_files",E,E,72,N],[12,"f_ffree",E,E,72,N],[12,"f_fsid",E,E,72,N],[12,"f_owner",E,E,72,N],[12,"f_type",E,E,72,N],[12,"f_flags",E,E,72,N],[12,"f_fssubtype",E,E,72,N],[12,"f_fstypename",E,E,72,N],[12,"f_mntonname",E,E,72,N],[12,"f_mntfromname",E,E,72,N],[12,"f_reserved",E,E,72,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,73,N],[12,"d_seekoff",E,E,73,N],[12,"d_reclen",E,E,73,N],[12,"d_namlen",E,E,73,N],[12,"d_type",E,E,73,N],[12,"d_name",E,E,73,N],[3,R[144],E,E,N,N],[3,R[145],E,E,N,N],[3,R[146],E,E,N,N],[3,R[147],E,E,N,N],[12,"ss_len",E,E,74,N],[12,"ss_family",E,E,74,N],[3,"utmpx",E,E,N,N],[12,"ut_user",E,E,75,N],[12,"ut_id",E,E,75,N],[12,"ut_line",E,E,75,N],[12,"ut_pid",E,E,75,N],[12,"ut_type",E,E,75,N],[12,"ut_tv",E,E,75,N],[12,"ut_host",E,E,75,N],[3,R[148],E,E,N,N],[12,"tv_sec",E,E,76,N],[12,"tv_usec",E,E,76,N],[3,"if_data",E,E,N,N],[12,"ifi_type",E,E,77,N],[12,"ifi_typelen",E,E,77,N],[12,"ifi_physical",E,E,77,N],[12,"ifi_addrlen",E,E,77,N],[12,"ifi_hdrlen",E,E,77,N],[12,"ifi_recvquota",E,E,77,N],[12,"ifi_xmitquota",E,E,77,N],[12,"ifi_unused1",E,E,77,N],[12,"ifi_mtu",E,E,77,N],[12,"ifi_metric",E,E,77,N],[12,"ifi_baudrate",E,E,77,N],[12,"ifi_ipackets",E,E,77,N],[12,"ifi_ierrors",E,E,77,N],[12,"ifi_opackets",E,E,77,N],[12,"ifi_oerrors",E,E,77,N],[12,"ifi_collisions",E,E,77,N],[12,"ifi_ibytes",E,E,77,N],[12,"ifi_obytes",E,E,77,N],[12,"ifi_imcasts",E,E,77,N],[12,"ifi_omcasts",E,E,77,N],[12,"ifi_iqdrops",E,E,77,N],[12,"ifi_noproto",E,E,77,N],[12,"ifi_recvtiming",E,E,77,N],[12,"ifi_xmittiming",E,E,77,N],[12,"ifi_lastchange",E,E,77,N],[12,"ifi_unused2",E,E,77,N],[12,"ifi_hwassist",E,E,77,N],[12,"ifi_reserved1",E,E,77,N],[12,"ifi_reserved2",E,E,77,N],[3,"bpf_hdr",E,E,N,N],[12,"bh_tstamp",E,E,78,N],[12,"bh_caplen",E,E,78,N],[12,"bh_datalen",E,E,78,N],[12,"bh_hdrlen",E,E,78,N],[3,R[149],E,E,N,N],[3,R[159],E,E,N,N],[12,"s6_addr",E,E,79,N],[19,"semun",E,E,N,N],[12,"val",E,E,80,N],[12,"buf",E,E,80,N],[12,"array",E,E,80,N],[4,"DIR",E,E,N,N],[4,R[160],E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[161],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,N],[5,"FD_CLR",E,E,N,N],[5,"FD_ISSET",E,E,N,N],[5,"FD_SET",E,E,N,N],[5,"FD_ZERO",E,E,N,N],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"],["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,N],[5,"CMSG_DATA",E,E,N,N],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,R[383],E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"truncate",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[114],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"kqueue",E,E,N,N],[5,"unmount",E,E,N,N],[5,"syscall",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"getprogname",E,E,N,N],[5,"setprogname",E,E,N,N],[5,R[384],E,E,N,N],[5,R[115],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"getpeereid",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"sync",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"acct",E,E,N,N],[5,"daemon",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"chflags",E,E,N,N],[5,"fchflags",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"mincore",E,E,N,N],[5,"sysctlnametomib",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"semget",E,E,N,N],[5,"semctl",E,E,N,N],[5,"semop",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"ftok",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"shmget",E,E,N,N],[5,"sysctl",E,E,N,N],[5,"sysctlbyname",E,E,N,N],[5,"mach_absolute_time",E,E,N,N],[5,R[116],E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"pthread_get_stackaddr_np",E,E,N,N],[5,"pthread_get_stacksize_np",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"__error",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"statfs",E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"kevent",E,E,N,N],[5,"kevent64",E,E,N,N],[5,"mount",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"localeconv_l",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"querylocale",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"renamex_np",E,E,N,N],[5,"renameatx_np",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"waitid",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"_dyld_image_count",E,E,N,N],[5,"_dyld_get_image_header",E,E,N,N],[5,"_dyld_get_image_vmaddr_slide",E,E,N,N],[5,"_dyld_get_image_name",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"uname",E,E,N,N],[5,"exchangedata",E,E,N,N],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,R[404],E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,R[410],E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,R[406],E,E,N,N],[6,"dev_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,R[407],E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"mach_timebase_info_data_t",E,E,N,N],[6,R[411],E,E,N,N],[6,"sigset_t",E,E,N,N],[6,R[405],E,E,N,N],[6,R[408],E,E,N,N],[6,R[409],E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"id_t",E,E,N,N],[6,"sem_t",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"integer_t",E,E,N,N],[6,"cpu_type_t",E,E,N,N],[6,"cpu_subtype_t",E,E,N,N],[6,"vm_prot_t",E,E,N,N],[6,"posix_spawnattr_t",E,E,N,N],[6,"posix_spawn_file_actions_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"vm_size_t",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[6,"boolean_t",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGINFO",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPTOS_ECN_NOTECT",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"O_SHLOCK",E,E,N,N],[17,"O_EXLOCK",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VDSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"VSTATUS",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"OXTABS",E,E,N,N],[17,"ONOEOT",E,E,N,N],[17,"CIGNORE",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"ALTWERASE",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"NOKERNINFO",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"MDMBUF",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,R[412],E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_SELF",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"_UTX_USERSIZE",E,E,N,N],[17,"_UTX_LINESIZE",E,E,N,N],[17,"_UTX_IDSIZE",E,E,N,N],[17,"_UTX_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SIGNATURE",E,E,N,N],[17,"SHUTDOWN_TIME",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"D_MD_ORDER",E,E,N,N],[17,R[414],E,E,N,N],[17,R[415],E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGEMT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"PT_TRACE_ME",E,E,N,N],[17,"PT_READ_I",E,E,N,N],[17,"PT_READ_D",E,E,N,N],[17,"PT_READ_U",E,E,N,N],[17,"PT_WRITE_I",E,E,N,N],[17,"PT_WRITE_D",E,E,N,N],[17,"PT_WRITE_U",E,E,N,N],[17,"PT_CONTINUE",E,E,N,N],[17,"PT_KILL",E,E,N,N],[17,"PT_STEP",E,E,N,N],[17,"PT_ATTACH",E,E,N,N],[17,"PT_DETACH",E,E,N,N],[17,"PT_SIGEXC",E,E,N,N],[17,"PT_THUPDATE",E,E,N,N],[17,"PT_ATTACHEXC",E,E,N,N],[17,"PT_FORCEQUOTA",E,E,N,N],[17,"PT_DENY_ATTACH",E,E,N,N],[17,"PT_FIRSTMACH",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"VM_FLAGS_FIXED",E,E,N,N],[17,"VM_FLAGS_ANYWHERE",E,E,N,N],[17,"VM_FLAGS_PURGABLE",E,E,N,N],[17,"VM_FLAGS_RANDOM_ADDR",E,E,N,N],[17,"VM_FLAGS_NO_CACHE",E,E,N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN",E,E,N,N],[17,"VM_FLAGS_RESILIENT_MEDIA",E,E,N,N],[17,"VM_FLAGS_OVERWRITE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_MASK",E,E,N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_ALIAS_MASK",E,E,N,N],[17,"VM_FLAGS_USER_ALLOCATE",E,E,N,N],[17,"VM_FLAGS_USER_MAP",E,E,N,N],[17,"VM_FLAGS_USER_REMAP",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT",E,E,N,N],[17,"SUPERPAGE_NONE",E,E,N,N],[17,"SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_NONE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_MEMORY_MALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_SMALL",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE",E,E,N,N],[17,"VM_MEMORY_MALLOC_HUGE",E,E,N,N],[17,"VM_MEMORY_SBRK",E,E,N,N],[17,"VM_MEMORY_REALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_TINY",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED",E,E,N,N],[17,"VM_MEMORY_ANALYSIS_TOOL",E,E,N,N],[17,"VM_MEMORY_MALLOC_NANO",E,E,N,N],[17,"VM_MEMORY_MACH_MSG",E,E,N,N],[17,"VM_MEMORY_IOKIT",E,E,N,N],[17,"VM_MEMORY_STACK",E,E,N,N],[17,"VM_MEMORY_GUARD",E,E,N,N],[17,"VM_MEMORY_SHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_DYLIB",E,E,N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS",E,E,N,N],[17,"VM_MEMORY_UNSHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_APPKIT",E,E,N,N],[17,"VM_MEMORY_FOUNDATION",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS",E,E,N,N],[17,"VM_MEMORY_CORESERVICES",E,E,N,N],[17,"VM_MEMORY_CARBON",E,E,N,N],[17,"VM_MEMORY_JAVA",E,E,N,N],[17,"VM_MEMORY_COREDATA",E,E,N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS",E,E,N,N],[17,"VM_MEMORY_ATS",E,E,N,N],[17,"VM_MEMORY_LAYERKIT",E,E,N,N],[17,"VM_MEMORY_CGIMAGE",E,E,N,N],[17,"VM_MEMORY_TCMALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC",E,E,N,N],[17,"VM_MEMORY_DYLD",E,E,N,N],[17,"VM_MEMORY_DYLD_MALLOC",E,E,N,N],[17,"VM_MEMORY_SQLITE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE",E,E,N,N],[17,"VM_MEMORY_GLSL",E,E,N,N],[17,"VM_MEMORY_OPENCL",E,E,N,N],[17,"VM_MEMORY_COREIMAGE",E,E,N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS",E,E,N,N],[17,"VM_MEMORY_IMAGEIO",E,E,N,N],[17,"VM_MEMORY_COREPROFILE",E,E,N,N],[17,"VM_MEMORY_ASSETSD",E,E,N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE",E,E,N,N],[17,"VM_MEMORY_LIBDISPATCH",E,E,N,N],[17,"VM_MEMORY_ACCELERATE",E,E,N,N],[17,"VM_MEMORY_COREUI",E,E,N,N],[17,"VM_MEMORY_COREUIFILE",E,E,N,N],[17,"VM_MEMORY_GENEALOGY",E,E,N,N],[17,"VM_MEMORY_RAWCAMERA",E,E,N,N],[17,"VM_MEMORY_CORPSEINFO",E,E,N,N],[17,"VM_MEMORY_ASL",E,E,N,N],[17,"VM_MEMORY_SWIFT_RUNTIME",E,E,N,N],[17,"VM_MEMORY_SWIFT_METADATA",E,E,N,N],[17,"VM_MEMORY_DHMM",E,E,N,N],[17,"VM_MEMORY_SCENEKIT",E,E,N,N],[17,"VM_MEMORY_SKYWALK",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_KILLPAGES",E,E,N,N],[17,"MS_DEACTIVATE",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"EPROCLIM",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"EBADRPC",E,E,N,N],[17,"ERPCMISMATCH",E,E,N,N],[17,"EPROGUNAVAIL",E,E,N,N],[17,"EPROGMISMATCH",E,E,N,N],[17,"EPROCUNAVAIL",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"EFTYPE",E,E,N,N],[17,"EAUTH",E,E,N,N],[17,"ENEEDAUTH",E,E,N,N],[17,"EPWROFF",E,E,N,N],[17,"EDEVERR",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"EBADEXEC",E,E,N,N],[17,"EBADARCH",E,E,N,N],[17,"ESHLIBVERS",E,E,N,N],[17,"EBADMACHO",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"ENOPOLICY",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"EQFULL",E,E,N,N],[17,"ELAST",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_PREALLOCATE",E,E,N,N],[17,"F_RDADVISE",E,E,N,N],[17,"F_RDAHEAD",E,E,N,N],[17,"F_NOCACHE",E,E,N,N],[17,"F_GETPATH",E,E,N,N],[17,"F_FULLFSYNC",E,E,N,N],[17,"F_FREEZE_FS",E,E,N,N],[17,"F_THAW_FS",E,E,N,N],[17,"F_GLOBAL_NOCACHE",E,E,N,N],[17,"F_NODIRECT",E,E,N,N],[17,"F_ALLOCATECONTIG",E,E,N,N],[17,"F_ALLOCATEALL",E,E,N,N],[17,"F_PEOFPOSMODE",E,E,N,N],[17,"F_VOLPOSMODE",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_EACCESS",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"TIOCMODG",E,E,N,N],[17,"TIOCMODS",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCFLUSH",E,E,N,N],[17,"TIOCGETD",E,E,N,N],[17,"TIOCSETD",E,E,N,N],[17,"TIOCIXON",E,E,N,N],[17,"TIOCIXOFF",E,E,N,N],[17,"TIOCSBRK",E,E,N,N],[17,"TIOCCBRK",E,E,N,N],[17,"TIOCSDTR",E,E,N,N],[17,"TIOCCDTR",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCNOTTY",E,E,N,N],[17,"TIOCPKT",E,E,N,N],[17,"TIOCPKT_DATA",E,E,N,N],[17,"TIOCPKT_FLUSHREAD",E,E,N,N],[17,"TIOCPKT_FLUSHWRITE",E,E,N,N],[17,"TIOCPKT_STOP",E,E,N,N],[17,"TIOCPKT_START",E,E,N,N],[17,"TIOCPKT_NOSTOP",E,E,N,N],[17,"TIOCPKT_DOSTOP",E,E,N,N],[17,"TIOCPKT_IOCTL",E,E,N,N],[17,"TIOCSTOP",E,E,N,N],[17,"TIOCSTART",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCREMOTE",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"TIOCUCNTL",E,E,N,N],[17,"TIOCSTAT",E,E,N,N],[17,"TIOCSCONS",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCEXT",E,E,N,N],[17,"TIOCSIG",E,E,N,N],[17,"TIOCDRAIN",E,E,N,N],[17,"TIOCMSDTRWAIT",E,E,N,N],[17,"TIOCMGDTRWAIT",E,E,N,N],[17,"TIOCSDRAINWAIT",E,E,N,N],[17,"TIOCGDRAINWAIT",E,E,N,N],[17,"TIOCDSIMICROCODE",E,E,N,N],[17,"TIOCPTYGRANT",E,E,N,N],[17,"TIOCPTYGNAME",E,E,N,N],[17,"TIOCPTYUNLK",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"FIOASYNC",E,E,N,N],[17,"FIOSETOWN",E,E,N,N],[17,"FIOGETOWN",E,E,N,N],[17,"FIODTYPE",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"B7200",E,E,N,N],[17,"B14400",E,E,N,N],[17,"B28800",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B76800",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIM_NLIMITS",E,E,N,N],[17,"_RLIMIT_POSIX_FLAG",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_ZERO_WIRED_PAGES",E,E,N,N],[17,"MADV_FREE_REUSABLE",E,E,N,N],[17,"MADV_FREE_REUSE",E,E,N,N],[17,"MADV_CAN_REUSE",E,E,N,N],[17,"MINCORE_INCORE",E,E,N,N],[17,"MINCORE_REFERENCED",E,E,N,N],[17,"MINCORE_MODIFIED",E,E,N,N],[17,"MINCORE_REFERENCED_OTHER",E,E,N,N],[17,"MINCORE_MODIFIED_OTHER",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_GGP",E,"gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_ST",E,"Stream protocol II.",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PIGP",E,"private interior gateway",N,N],[17,"IPPROTO_RCCMON",E,"BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII",E,"network voice protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_ARGUS",E,"Argus",N,N],[17,"IPPROTO_EMCON",E,"EMCON",N,N],[17,"IPPROTO_XNET",E,"Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS",E,"Chaos",N,N],[17,"IPPROTO_MUX",E,"Multiplexing",N,N],[17,"IPPROTO_MEAS",E,"DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP",E,"Host Monitoring",N,N],[17,"IPPROTO_PRM",E,"Packet Radio Measurement",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TRUNK1",E,"Trunk-1",N,N],[17,"IPPROTO_TRUNK2",E,"Trunk-2",N,N],[17,"IPPROTO_LEAF1",E,"Leaf-1",N,N],[17,"IPPROTO_LEAF2",E,"Leaf-2",N,N],[17,"IPPROTO_RDP",E,"Reliable Data",N,N],[17,"IPPROTO_IRTP",E,"Reliable Transaction",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT",E,"Bulk Data Transfer",N,N],[17,"IPPROTO_NSP",E,"Network Services",N,N],[17,"IPPROTO_INP",E,"Merit Internodal",N,N],[17,"IPPROTO_SEP",E,"Sequential Exchange",N,N],[17,"IPPROTO_3PC",E,"Third Party Connect",N,N],[17,"IPPROTO_IDPR",E,"InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP",E,"XTP",N,N],[17,"IPPROTO_DDP",E,"Datagram Delivery",N,N],[17,"IPPROTO_CMTP",E,"Control Message Transport",N,N],[17,"IPPROTO_TPXX",E,"TP++ Transport",N,N],[17,"IPPROTO_IL",E,"IL transport protocol",N,N],[17,"IPPROTO_SDRP",E,"Source Demand Routing",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP",E,"InterDomain Routing",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_MHRP",E,"Mobile Host Routing",N,N],[17,"IPPROTO_BHA",E,"BHA",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_INLSP",E,"Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE",E,"IP with encryption",N,N],[17,"IPPROTO_NHRP",E,"Next Hop Resolution",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_AHIP",E,"any host internal protocol",N,N],[17,"IPPROTO_CFTP",E,"CFTP",N,N],[17,"IPPROTO_HELLO",E,"\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK",E,"SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN",E,"Kryptolan",N,N],[17,"IPPROTO_RVD",E,"Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC",E,"Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS",E,"Any distributed FS",N,N],[17,"IPPROTO_SATMON",E,"Satnet Monitoring",N,N],[17,"IPPROTO_VISA",E,"VISA Protocol",N,N],[17,"IPPROTO_IPCV",E,"Packet Core Utility",N,N],[17,"IPPROTO_CPNX",E,"Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB",E,"Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN",E,"Wang Span Network",N,N],[17,"IPPROTO_PVP",E,"Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON",E,"BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND",E,"Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON",E,"WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK",E,"WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON",E,"ISO cnlp",N,N],[17,"IPPROTO_VMTP",E,"VMTP",N,N],[17,"IPPROTO_SVMTP",E,"Secure VMTP",N,N],[17,"IPPROTO_VINES",E,"Banyon VINES",N,N],[17,"IPPROTO_TTP",E,"TTP",N,N],[17,"IPPROTO_IGP",E,"NSFNET-IGP",N,N],[17,"IPPROTO_DGP",E,"dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF",E,"TCF",N,N],[17,"IPPROTO_IGRP",E,"Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP",E,"OSPFIGP",N,N],[17,"IPPROTO_SRPC",E,"Strite RPC protocol",N,N],[17,"IPPROTO_LARP",E,"Locus Address Resoloution",N,N],[17,"IPPROTO_MTP",E,"Multicast Transport",N,N],[17,"IPPROTO_AX25",E,"AX.25 Frames",N,N],[17,"IPPROTO_IPEIP",E,"IP encapsulated in IP",N,N],[17,"IPPROTO_MICP",E,"Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP",E,"Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP",E,"Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_APES",E,"any private encr. scheme",N,N],[17,"IPPROTO_GMTP",E,"GMTP",N,N],[17,"IPPROTO_PIM",E,"Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP",E,"payload compression (IPComp)",N,N],[17,"IPPROTO_PGM",E,"PGM",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_DIVERT",E,"divert pseudo-protocol",N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"IPPROTO_DONE",E,"last return value of *_input(), meaning \"all job for this…",N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_IMPLINK",E,E,N,N],[17,"AF_PUP",E,E,N,N],[17,"AF_CHAOS",E,E,N,N],[17,"AF_NS",E,E,N,N],[17,"AF_ISO",E,E,N,N],[17,"AF_OSI",E,E,N,N],[17,"AF_ECMA",E,E,N,N],[17,"AF_DATAKIT",E,E,N,N],[17,"AF_CCITT",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_DLI",E,E,N,N],[17,"AF_LAT",E,E,N,N],[17,"AF_HYLINK",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_LINK",E,E,N,N],[17,"pseudo_AF_XTP",E,E,N,N],[17,"AF_COIP",E,E,N,N],[17,"AF_CNT",E,E,N,N],[17,"pseudo_AF_RTIP",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_SIP",E,E,N,N],[17,"pseudo_AF_PIP",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_E164",E,E,N,N],[17,"pseudo_AF_KEY",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_NATM",E,E,N,N],[17,"AF_SYSTEM",E,E,N,N],[17,"AF_NETBIOS",E,E,N,N],[17,"AF_PPP",E,E,N,N],[17,"pseudo_AF_HDRCMPLT",E,E,N,N],[17,"AF_SYS_CONTROL",E,E,N,N],[17,"SYSPROTO_EVENT",E,E,N,N],[17,"SYSPROTO_CONTROL",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_IMPLINK",E,E,N,N],[17,"PF_PUP",E,E,N,N],[17,"PF_CHAOS",E,E,N,N],[17,"PF_NS",E,E,N,N],[17,"PF_ISO",E,E,N,N],[17,"PF_OSI",E,E,N,N],[17,"PF_ECMA",E,E,N,N],[17,"PF_DATAKIT",E,E,N,N],[17,"PF_CCITT",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_DLI",E,E,N,N],[17,"PF_LAT",E,E,N,N],[17,"PF_HYLINK",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_LINK",E,E,N,N],[17,"PF_XTP",E,E,N,N],[17,"PF_COIP",E,E,N,N],[17,"PF_CNT",E,E,N,N],[17,"PF_SIP",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_RTIP",E,E,N,N],[17,"PF_PIP",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_NATM",E,E,N,N],[17,"PF_SYSTEM",E,E,N,N],[17,"PF_NETBIOS",E,E,N,N],[17,"PF_PPP",E,E,N,N],[17,"NET_RT_DUMP",E,E,N,N],[17,"NET_RT_FLAGS",E,E,N,N],[17,"NET_RT_IFLIST",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"SOCK_MAXADDRLEN",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_RECVDSTADDR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_RECVIF",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IPV6_JOIN_GROUP",E,E,N,N],[17,"IPV6_LEAVE_GROUP",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"TCP_NOPUSH",E,E,N,N],[17,"TCP_NOOPT",E,E,N,N],[17,"TCP_KEEPALIVE",E,E,N,N],[17,"SOL_LOCAL",E,E,N,N],[17,"LOCAL_PEERCRED",E,E,N,N],[17,"LOCAL_PEERPID",E,E,N,N],[17,"LOCAL_PEEREPID",E,E,N,N],[17,"LOCAL_PEERUUID",E,E,N,N],[17,"LOCAL_PEEREUUID",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_USELOOPBACK",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_TIMESTAMP_MONOTONIC",E,E,N,N],[17,"SO_DONTTRUNC",E,E,N,N],[17,"SO_WANTMORE",E,E,N,N],[17,"SO_WANTOOBFLAG",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_LABEL",E,E,N,N],[17,"SO_PEERLABEL",E,E,N,N],[17,"SO_NREAD",E,E,N,N],[17,"SO_NKE",E,E,N,N],[17,"SO_NOSIGPIPE",E,E,N,N],[17,"SO_NOADDRERR",E,E,N,N],[17,"SO_NWRITE",E,E,N,N],[17,"SO_REUSESHAREUID",E,E,N,N],[17,"SO_NOTIFYCONFLICT",E,E,N,N],[17,"SO_RANDOMPORT",E,E,N,N],[17,"SO_NP_EXTENSIONS",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOF",E,E,N,N],[17,"MSG_FLUSH",E,E,N,N],[17,"MSG_HOLD",E,E,N,N],[17,"MSG_SEND",E,E,N,N],[17,"MSG_HAVEMORE",E,E,N,N],[17,"MSG_RCVMORE",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SCM_CREDS",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_OACTIVE",E,E,N,N],[17,"IFF_SIMPLEX",E,E,N,N],[17,"IFF_LINK0",E,E,N,N],[17,"IFF_LINK1",E,E,N,N],[17,"IFF_LINK2",E,E,N,N],[17,"IFF_ALTPHYS",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"MAP_COPY",E,E,N,N],[17,"MAP_RENAME",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_NOEXTEND",E,E,N,N],[17,"MAP_HASSEMAPHORE",E,E,N,N],[17,"MAP_NOCACHE",E,E,N,N],[17,"MAP_JIT",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"_PTHREAD_MUTEX_SIG_init",E,E,N,N],[17,"_PTHREAD_COND_SIG_init",E,E,N,N],[17,"_PTHREAD_RWLOCK_SIG_init",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,R[416],E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"EVFILT_READ",E,E,N,N],[17,"EVFILT_WRITE",E,E,N,N],[17,"EVFILT_AIO",E,E,N,N],[17,"EVFILT_VNODE",E,E,N,N],[17,"EVFILT_PROC",E,E,N,N],[17,"EVFILT_SIGNAL",E,E,N,N],[17,"EVFILT_TIMER",E,E,N,N],[17,"EVFILT_MACHPORT",E,E,N,N],[17,"EVFILT_FS",E,E,N,N],[17,"EVFILT_USER",E,E,N,N],[17,"EVFILT_VM",E,E,N,N],[17,"EV_ADD",E,E,N,N],[17,"EV_DELETE",E,E,N,N],[17,"EV_ENABLE",E,E,N,N],[17,"EV_DISABLE",E,E,N,N],[17,"EV_ONESHOT",E,E,N,N],[17,"EV_CLEAR",E,E,N,N],[17,"EV_RECEIPT",E,E,N,N],[17,"EV_DISPATCH",E,E,N,N],[17,"EV_FLAG0",E,E,N,N],[17,"EV_POLL",E,E,N,N],[17,"EV_FLAG1",E,E,N,N],[17,"EV_OOBAND",E,E,N,N],[17,"EV_ERROR",E,E,N,N],[17,"EV_EOF",E,E,N,N],[17,"EV_SYSFLAGS",E,E,N,N],[17,"NOTE_TRIGGER",E,E,N,N],[17,"NOTE_FFNOP",E,E,N,N],[17,"NOTE_FFAND",E,E,N,N],[17,"NOTE_FFOR",E,E,N,N],[17,"NOTE_FFCOPY",E,E,N,N],[17,"NOTE_FFCTRLMASK",E,E,N,N],[17,"NOTE_FFLAGSMASK",E,E,N,N],[17,"NOTE_LOWAT",E,E,N,N],[17,"NOTE_DELETE",E,E,N,N],[17,"NOTE_WRITE",E,E,N,N],[17,"NOTE_EXTEND",E,E,N,N],[17,"NOTE_ATTRIB",E,E,N,N],[17,"NOTE_LINK",E,E,N,N],[17,"NOTE_RENAME",E,E,N,N],[17,"NOTE_REVOKE",E,E,N,N],[17,"NOTE_NONE",E,E,N,N],[17,"NOTE_EXIT",E,E,N,N],[17,"NOTE_FORK",E,E,N,N],[17,"NOTE_EXEC",E,E,N,N],[17,"NOTE_REAP",E,E,N,N],[17,"NOTE_SIGNAL",E,E,N,N],[17,"NOTE_EXITSTATUS",E,E,N,N],[17,"NOTE_EXIT_DETAIL",E,E,N,N],[17,"NOTE_PDATAMASK",E,E,N,N],[17,"NOTE_PCTRLMASK",E,E,N,N],[17,"NOTE_EXIT_REPARENTED",E,E,N,N],[17,"NOTE_EXIT_DETAIL_MASK",E,E,N,N],[17,"NOTE_EXIT_DECRYPTFAIL",E,E,N,N],[17,"NOTE_EXIT_MEMORY",E,E,N,N],[17,"NOTE_EXIT_CSERROR",E,E,N,N],[17,"NOTE_VM_PRESSURE",E,E,N,N],[17,"NOTE_VM_PRESSURE_TERMINATE",E,E,N,N],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE",E,E,N,N],[17,"NOTE_VM_ERROR",E,E,N,N],[17,"NOTE_SECONDS",E,E,N,N],[17,"NOTE_USECONDS",E,E,N,N],[17,"NOTE_NSECONDS",E,E,N,N],[17,"NOTE_ABSOLUTE",E,E,N,N],[17,"NOTE_LEEWAY",E,E,N,N],[17,"NOTE_CRITICAL",E,E,N,N],[17,"NOTE_BACKGROUND",E,E,N,N],[17,"NOTE_TRACK",E,E,N,N],[17,"NOTE_TRACKERR",E,E,N,N],[17,"NOTE_CHILD",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"CR0",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF0",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS0",E,E,N,N],[17,"BS1",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VT1",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"NI_MAXSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NUMERICSCOPE",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"RENAME_SWAP",E,E,N,N],[17,"RENAME_EXCL",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_FIRST",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"_WSTOPPED",E,E,N,N],[17,"LOG_NETINFO",E,E,N,N],[17,"LOG_REMOTEAUTH",E,E,N,N],[17,"LOG_INSTALL",E,E,N,N],[17,"LOG_RAS",E,E,N,N],[17,"LOG_LAUNCHD",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"CTLTYPE",E,E,N,N],[17,"CTLTYPE_NODE",E,E,N,N],[17,"CTLTYPE_INT",E,E,N,N],[17,"CTLTYPE_STRING",E,E,N,N],[17,"CTLTYPE_QUAD",E,E,N,N],[17,"CTLTYPE_OPAQUE",E,E,N,N],[17,"CTLTYPE_STRUCT",E,E,N,N],[17,"CTLFLAG_RD",E,E,N,N],[17,"CTLFLAG_WR",E,E,N,N],[17,"CTLFLAG_RW",E,E,N,N],[17,"CTLFLAG_NOLOCK",E,E,N,N],[17,"CTLFLAG_ANYBODY",E,E,N,N],[17,"CTLFLAG_SECURE",E,E,N,N],[17,"CTLFLAG_MASKED",E,E,N,N],[17,"CTLFLAG_NOAUTO",E,E,N,N],[17,"CTLFLAG_KERN",E,E,N,N],[17,"CTLFLAG_LOCKED",E,E,N,N],[17,"CTLFLAG_OID2",E,E,N,N],[17,"CTL_UNSPEC",E,E,N,N],[17,"CTL_KERN",E,E,N,N],[17,"CTL_VM",E,E,N,N],[17,"CTL_VFS",E,E,N,N],[17,"CTL_NET",E,E,N,N],[17,"CTL_DEBUG",E,E,N,N],[17,"CTL_HW",E,E,N,N],[17,"CTL_MACHDEP",E,E,N,N],[17,"CTL_USER",E,E,N,N],[17,"CTL_MAXID",E,E,N,N],[17,"KERN_OSTYPE",E,E,N,N],[17,"KERN_OSRELEASE",E,E,N,N],[17,"KERN_OSREV",E,E,N,N],[17,"KERN_VERSION",E,E,N,N],[17,"KERN_MAXVNODES",E,E,N,N],[17,"KERN_MAXPROC",E,E,N,N],[17,"KERN_MAXFILES",E,E,N,N],[17,"KERN_ARGMAX",E,E,N,N],[17,"KERN_SECURELVL",E,E,N,N],[17,"KERN_HOSTNAME",E,E,N,N],[17,"KERN_HOSTID",E,E,N,N],[17,"KERN_CLOCKRATE",E,E,N,N],[17,"KERN_VNODE",E,E,N,N],[17,"KERN_PROC",E,E,N,N],[17,"KERN_FILE",E,E,N,N],[17,"KERN_PROF",E,E,N,N],[17,"KERN_POSIX1",E,E,N,N],[17,"KERN_NGROUPS",E,E,N,N],[17,"KERN_JOB_CONTROL",E,E,N,N],[17,"KERN_SAVED_IDS",E,E,N,N],[17,"KERN_BOOTTIME",E,E,N,N],[17,"KERN_NISDOMAINNAME",E,E,N,N],[17,"KERN_DOMAINNAME",E,E,N,N],[17,"KERN_MAXPARTITIONS",E,E,N,N],[17,"KERN_KDEBUG",E,E,N,N],[17,"KERN_UPDATEINTERVAL",E,E,N,N],[17,"KERN_OSRELDATE",E,E,N,N],[17,"KERN_NTP_PLL",E,E,N,N],[17,"KERN_BOOTFILE",E,E,N,N],[17,"KERN_MAXFILESPERPROC",E,E,N,N],[17,"KERN_MAXPROCPERUID",E,E,N,N],[17,"KERN_DUMPDEV",E,E,N,N],[17,"KERN_IPC",E,E,N,N],[17,"KERN_DUMMY",E,E,N,N],[17,"KERN_PS_STRINGS",E,E,N,N],[17,"KERN_USRSTACK32",E,E,N,N],[17,"KERN_LOGSIGEXIT",E,E,N,N],[17,"KERN_SYMFILE",E,E,N,N],[17,"KERN_PROCARGS",E,E,N,N],[17,"KERN_NETBOOT",E,E,N,N],[17,"KERN_SYSV",E,E,N,N],[17,"KERN_AFFINITY",E,E,N,N],[17,"KERN_TRANSLATE",E,E,N,N],[17,"KERN_CLASSIC",E,E,N,N],[17,"KERN_EXEC",E,E,N,N],[17,"KERN_CLASSICHANDLER",E,E,N,N],[17,"KERN_AIOMAX",E,E,N,N],[17,"KERN_AIOPROCMAX",E,E,N,N],[17,"KERN_AIOTHREADS",E,E,N,N],[17,"KERN_COREFILE",E,E,N,N],[17,"KERN_COREDUMP",E,E,N,N],[17,"KERN_SUGID_COREDUMP",E,E,N,N],[17,"KERN_PROCDELAYTERM",E,E,N,N],[17,"KERN_SHREG_PRIVATIZABLE",E,E,N,N],[17,"KERN_LOW_PRI_WINDOW",E,E,N,N],[17,"KERN_LOW_PRI_DELAY",E,E,N,N],[17,"KERN_POSIX",E,E,N,N],[17,"KERN_USRSTACK64",E,E,N,N],[17,"KERN_NX_PROTECTION",E,E,N,N],[17,"KERN_TFP",E,E,N,N],[17,"KERN_PROCNAME",E,E,N,N],[17,"KERN_THALTSTACK",E,E,N,N],[17,"KERN_SPECULATIVE_READS",E,E,N,N],[17,"KERN_OSVERSION",E,E,N,N],[17,"KERN_SAFEBOOT",E,E,N,N],[17,"KERN_RAGEVNODE",E,E,N,N],[17,"KERN_TTY",E,E,N,N],[17,"KERN_CHECKOPENEVT",E,E,N,N],[17,"KERN_THREADNAME",E,E,N,N],[17,"KERN_MAXID",E,E,N,N],[17,"KERN_RAGE_PROC",E,E,N,N],[17,"KERN_RAGE_THREAD",E,E,N,N],[17,"KERN_UNRAGE_PROC",E,E,N,N],[17,"KERN_UNRAGE_THREAD",E,E,N,N],[17,"KERN_OPENEVT_PROC",E,E,N,N],[17,"KERN_UNOPENEVT_PROC",E,E,N,N],[17,"KERN_TFP_POLICY",E,E,N,N],[17,"KERN_TFP_POLICY_DENY",E,E,N,N],[17,"KERN_TFP_POLICY_DEFAULT",E,E,N,N],[17,"KERN_KDEFLAGS",E,E,N,N],[17,"KERN_KDDFLAGS",E,E,N,N],[17,"KERN_KDENABLE",E,E,N,N],[17,"KERN_KDSETBUF",E,E,N,N],[17,"KERN_KDGETBUF",E,E,N,N],[17,"KERN_KDSETUP",E,E,N,N],[17,"KERN_KDREMOVE",E,E,N,N],[17,"KERN_KDSETREG",E,E,N,N],[17,"KERN_KDGETREG",E,E,N,N],[17,"KERN_KDREADTR",E,E,N,N],[17,"KERN_KDPIDTR",E,E,N,N],[17,"KERN_KDTHRMAP",E,E,N,N],[17,"KERN_KDPIDEX",E,E,N,N],[17,"KERN_KDSETRTCDEC",E,E,N,N],[17,"KERN_KDGETENTROPY",E,E,N,N],[17,"KERN_KDWRITETR",E,E,N,N],[17,"KERN_KDWRITEMAP",E,E,N,N],[17,"KERN_KDENABLE_BG_TRACE",E,E,N,N],[17,"KERN_KDDISABLE_BG_TRACE",E,E,N,N],[17,"KERN_KDREADCURTHRMAP",E,E,N,N],[17,"KERN_KDSET_TYPEFILTER",E,E,N,N],[17,"KERN_KDBUFWAIT",E,E,N,N],[17,"KERN_KDCPUMAP",E,E,N,N],[17,"KERN_PROC_ALL",E,E,N,N],[17,"KERN_PROC_PID",E,E,N,N],[17,"KERN_PROC_PGRP",E,E,N,N],[17,"KERN_PROC_SESSION",E,E,N,N],[17,"KERN_PROC_TTY",E,E,N,N],[17,"KERN_PROC_UID",E,E,N,N],[17,"KERN_PROC_RUID",E,E,N,N],[17,"KERN_PROC_LCID",E,E,N,N],[17,"KIPC_MAXSOCKBUF",E,E,N,N],[17,"KIPC_SOCKBUF_WASTE",E,E,N,N],[17,"KIPC_SOMAXCONN",E,E,N,N],[17,"KIPC_MAX_LINKHDR",E,E,N,N],[17,"KIPC_MAX_PROTOHDR",E,E,N,N],[17,"KIPC_MAX_HDR",E,E,N,N],[17,"KIPC_MAX_DATALEN",E,E,N,N],[17,"KIPC_MBSTAT",E,E,N,N],[17,"KIPC_NMBCLUSTERS",E,E,N,N],[17,"KIPC_SOQLIMITCOMPAT",E,E,N,N],[17,"VM_METER",E,E,N,N],[17,"VM_LOADAVG",E,E,N,N],[17,"VM_MACHFACTOR",E,E,N,N],[17,"VM_SWAPUSAGE",E,E,N,N],[17,"VM_MAXID",E,E,N,N],[17,"HW_MACHINE",E,E,N,N],[17,"HW_MODEL",E,E,N,N],[17,"HW_NCPU",E,E,N,N],[17,"HW_BYTEORDER",E,E,N,N],[17,"HW_PHYSMEM",E,E,N,N],[17,"HW_USERMEM",E,E,N,N],[17,"HW_PAGESIZE",E,E,N,N],[17,"HW_DISKNAMES",E,E,N,N],[17,"HW_DISKSTATS",E,E,N,N],[17,"HW_EPOCH",E,E,N,N],[17,"HW_FLOATINGPT",E,E,N,N],[17,"HW_MACHINE_ARCH",E,E,N,N],[17,"HW_VECTORUNIT",E,E,N,N],[17,"HW_BUS_FREQ",E,E,N,N],[17,"HW_CPU_FREQ",E,E,N,N],[17,"HW_CACHELINE",E,E,N,N],[17,"HW_L1ICACHESIZE",E,E,N,N],[17,"HW_L1DCACHESIZE",E,E,N,N],[17,"HW_L2SETTINGS",E,E,N,N],[17,"HW_L2CACHESIZE",E,E,N,N],[17,"HW_L3SETTINGS",E,E,N,N],[17,"HW_L3CACHESIZE",E,E,N,N],[17,"HW_TB_FREQ",E,E,N,N],[17,"HW_MEMSIZE",E,E,N,N],[17,"HW_AVAILCPU",E,E,N,N],[17,"HW_MAXID",E,E,N,N],[17,"USER_CS_PATH",E,E,N,N],[17,"USER_BC_BASE_MAX",E,E,N,N],[17,"USER_BC_DIM_MAX",E,E,N,N],[17,"USER_BC_SCALE_MAX",E,E,N,N],[17,"USER_BC_STRING_MAX",E,E,N,N],[17,"USER_COLL_WEIGHTS_MAX",E,E,N,N],[17,"USER_EXPR_NEST_MAX",E,E,N,N],[17,"USER_LINE_MAX",E,E,N,N],[17,"USER_RE_DUP_MAX",E,E,N,N],[17,"USER_POSIX2_VERSION",E,E,N,N],[17,"USER_POSIX2_C_BIND",E,E,N,N],[17,"USER_POSIX2_C_DEV",E,E,N,N],[17,"USER_POSIX2_CHAR_TERM",E,E,N,N],[17,"USER_POSIX2_FORT_DEV",E,E,N,N],[17,"USER_POSIX2_FORT_RUN",E,E,N,N],[17,"USER_POSIX2_LOCALEDEF",E,E,N,N],[17,"USER_POSIX2_SW_DEV",E,E,N,N],[17,"USER_POSIX2_UPE",E,E,N,N],[17,"USER_STREAM_MAX",E,E,N,N],[17,"USER_TZNAME_MAX",E,E,N,N],[17,"USER_MAXID",E,E,N,N],[17,"CTL_DEBUG_NAME",E,E,N,N],[17,"CTL_DEBUG_VALUE",E,E,N,N],[17,"CTL_DEBUG_MAXID",E,E,N,N],[17,"PRIO_DARWIN_THREAD",E,E,N,N],[17,"PRIO_DARWIN_PROCESS",E,E,N,N],[17,"PRIO_DARWIN_BG",E,E,N,N],[17,"PRIO_DARWIN_NONUI",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"AI_MASK",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_V4MAPPED_CFG",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_DEFAULT",E,E,N,N],[17,"AI_UNUSABLE",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"AIO_LISTIO_MAX",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,R[413],E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"XATTR_NOFOLLOW",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"XATTR_NOSECURITY",E,E,N,N],[17,"XATTR_NODEFAULT",E,E,N,N],[17,"XATTR_SHOWCOMPRESSION",E,E,N,N],[17,"NET_RT_IFLIST2",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_DONE",E,E,N,N],[17,"RTF_DELCLONE",E,E,N,N],[17,"RTF_CLONING",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_LLINFO",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_BLACKHOLE",E,E,N,N],[17,"RTF_NOIFREF",E,E,N,N],[17,"RTF_PROTO2",E,E,N,N],[17,"RTF_PROTO1",E,E,N,N],[17,"RTF_PRCLONING",E,E,N,N],[17,"RTF_WASCLONED",E,E,N,N],[17,"RTF_PROTO3",E,E,N,N],[17,"RTF_PINNED",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_IFSCOPE",E,E,N,N],[17,"RTF_CONDEMNED",E,E,N,N],[17,"RTF_IFREF",E,E,N,N],[17,"RTF_PROXY",E,E,N,N],[17,"RTF_ROUTER",E,E,N,N],[17,"RTM_VERSION",E,E,N,N],[17,"RTM_ADD",E,E,N,N],[17,"RTM_DELETE",E,E,N,N],[17,"RTM_CHANGE",E,E,N,N],[17,"RTM_GET",E,E,N,N],[17,"RTM_LOSING",E,E,N,N],[17,"RTM_REDIRECT",E,E,N,N],[17,"RTM_MISS",E,E,N,N],[17,"RTM_LOCK",E,E,N,N],[17,"RTM_OLDADD",E,E,N,N],[17,"RTM_OLDDEL",E,E,N,N],[17,"RTM_RESOLVE",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_IFINFO",E,E,N,N],[17,"RTM_NEWMADDR",E,E,N,N],[17,"RTM_DELMADDR",E,E,N,N],[17,"RTM_IFINFO2",E,E,N,N],[17,"RTM_NEWMADDR2",E,E,N,N],[17,"RTM_GET2",E,E,N,N],[17,"RTV_MTU",E,E,N,N],[17,"RTV_HOPCOUNT",E,E,N,N],[17,"RTV_EXPIRE",E,E,N,N],[17,"RTV_RPIPE",E,E,N,N],[17,"RTV_SPIPE",E,E,N,N],[17,"RTV_SSTHRESH",E,E,N,N],[17,"RTV_RTT",E,E,N,N],[17,"RTV_RTTVAR",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_NETMASK",E,E,N,N],[17,"RTA_GENMASK",E,E,N,N],[17,"RTA_IFP",E,E,N,N],[17,"RTA_IFA",E,E,N,N],[17,"RTA_AUTHOR",E,E,N,N],[17,"RTA_BRD",E,E,N,N],[17,"RTAX_DST",E,E,N,N],[17,"RTAX_GATEWAY",E,E,N,N],[17,"RTAX_NETMASK",E,E,N,N],[17,"RTAX_GENMASK",E,E,N,N],[17,"RTAX_IFP",E,E,N,N],[17,"RTAX_IFA",E,E,N,N],[17,"RTAX_AUTHOR",E,E,N,N],[17,"RTAX_BRD",E,E,N,N],[17,"RTAX_MAX",E,E,N,N],[17,"KERN_PROCARGS2",E,E,N,N],[17,"PROC_PIDTASKALLINFO",E,E,N,N],[17,"PROC_PIDTASKINFO",E,E,N,N],[17,"PROC_PIDTHREADINFO",E,E,N,N],[17,"MAXCOMLEN",E,E,N,N],[17,"MAXTHREADNAMESIZE",E,E,N,N],[17,"XUCRED_VERSION",E,E,N,N],[17,"LC_SEGMENT",E,E,N,N],[17,"LC_SEGMENT_64",E,E,N,N],[17,"MH_MAGIC",E,E,N,N],[17,"MH_MAGIC_64",E,E,N,N],[17,"UTUN_OPT_FLAGS",E,E,N,N],[17,"UTUN_OPT_IFNAME",E,E,N,N],[17,"DLT_NULL",E,E,N,N],[17,"DLT_EN10MB",E,E,N,N],[17,"DLT_EN3MB",E,E,N,N],[17,"DLT_AX25",E,E,N,N],[17,"DLT_PRONET",E,E,N,N],[17,"DLT_CHAOS",E,E,N,N],[17,"DLT_IEEE802",E,E,N,N],[17,"DLT_ARCNET",E,E,N,N],[17,"DLT_SLIP",E,E,N,N],[17,"DLT_PPP",E,E,N,N],[17,"DLT_FDDI",E,E,N,N],[17,"DLT_ATM_RFC1483",E,E,N,N],[17,"DLT_RAW",E,E,N,N],[17,"DLT_LOOP",E,E,N,N],[17,"BPF_ALIGNMENT",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETEXEC",E,E,N,N],[17,"POSIX_SPAWN_START_SUSPENDED",E,E,N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_R",E,E,N,N],[17,"IPC_W",E,E,N,N],[17,"IPC_M",E,E,N,N],[17,"SEM_UNDO",E,E,N,N],[17,"GETNCNT",E,E,N,N],[17,"GETPID",E,E,N,N],[17,"GETVAL",E,E,N,N],[17,"GETALL",E,E,N,N],[17,"GETZCNT",E,E,N,N],[17,"SETVAL",E,E,N,N],[17,"SETALL",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHMLBA",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"UF_SETTABLE",E,E,N,N],[17,"UF_NODUMP",E,E,N,N],[17,"UF_IMMUTABLE",E,E,N,N],[17,"UF_APPEND",E,E,N,N],[17,"UF_OPAQUE",E,E,N,N],[17,"UF_COMPRESSED",E,E,N,N],[17,"UF_TRACKED",E,E,N,N],[17,"SF_SETTABLE",E,E,N,N],[17,"SF_ARCHIVED",E,E,N,N],[17,"SF_IMMUTABLE",E,E,N,N],[17,"SF_APPEND",E,E,N,N],[17,"UF_HIDDEN",E,E,N,N],[17,"__PTHREAD_MUTEX_SIZE__",E,E,N,N],[17,"__PTHREAD_COND_SIZE__",E,E,N,N],[17,"__PTHREAD_CONDATTR_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCK_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__",E,E,N,N],[17,"TIOCTIMESTAMP",E,E,N,N],[17,"TIOCDCDTIMESTAMP",E,E,N,N],[11,"from",E,E,81,[[[T]],[T]]],[11,R[11],E,E,81,[[[U]],[R[14]]]],[11,R[13],E,E,81,[[["self"]],[R[14]]]],[11,"into",E,E,81,[[["self"]],[U]]],[11,R[46],E,E,81,[[["self"]],[T]]],[11,R[12],E,E,81,[[["self"]],[T]]],[11,R[18],E,E,81,[[["self"]],[R[47]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[13],E,E,4,[[["self"]],[R[14]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[47]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[14]]]],[11,R[13],E,E,5,[[["self"]],[R[14]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[47]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[14]]]],[11,R[13],E,E,6,[[["self"]],[R[14]]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[47]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[14]]]],[11,R[13],E,E,7,[[["self"]],[R[14]]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[47]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[14]]]],[11,R[13],E,E,8,[[["self"]],[R[14]]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[47]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[14]]]],[11,R[13],E,E,9,[[["self"]],[R[14]]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[47]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[14]]]],[11,R[13],E,E,10,[[["self"]],[R[14]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[47]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[14]]]],[11,R[13],E,E,11,[[["self"]],[R[14]]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[47]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[14]]]],[11,R[13],E,E,12,[[["self"]],[R[14]]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[47]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[14]]]],[11,R[13],E,E,13,[[["self"]],[R[14]]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[47]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[[U]],[R[14]]]],[11,R[13],E,E,14,[[["self"]],[R[14]]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[47]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[11],E,E,15,[[[U]],[R[14]]]],[11,R[13],E,E,15,[[["self"]],[R[14]]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[47]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[14]]]],[11,R[13],E,E,16,[[["self"]],[R[14]]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[47]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[14]]]],[11,R[13],E,E,17,[[["self"]],[R[14]]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[47]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[14]]]],[11,R[13],E,E,18,[[["self"]],[R[14]]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[47]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[14]]]],[11,R[13],E,E,19,[[["self"]],[R[14]]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[47]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[14]]]],[11,R[13],E,E,20,[[["self"]],[R[14]]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[47]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[11],E,E,82,[[[U]],[R[14]]]],[11,R[13],E,E,82,[[["self"]],[R[14]]]],[11,"into",E,E,82,[[["self"]],[U]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[12],E,E,82,[[["self"]],[T]]],[11,R[18],E,E,82,[[["self"]],[R[47]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[14]]]],[11,R[13],E,E,21,[[["self"]],[R[14]]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[47]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[14]]]],[11,R[13],E,E,22,[[["self"]],[R[14]]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[12],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[47]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[14]]]],[11,R[13],E,E,23,[[["self"]],[R[14]]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[47]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[11],E,E,83,[[[U]],[R[14]]]],[11,R[13],E,E,83,[[["self"]],[R[14]]]],[11,"into",E,E,83,[[["self"]],[U]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[12],E,E,83,[[["self"]],[T]]],[11,R[18],E,E,83,[[["self"]],[R[47]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[14]]]],[11,R[13],E,E,24,[[["self"]],[R[14]]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[47]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[14]]]],[11,R[13],E,E,25,[[["self"]],[R[14]]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[12],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[47]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[14]]]],[11,R[13],E,E,26,[[["self"]],[R[14]]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[12],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[47]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[14]]]],[11,R[13],E,E,27,[[["self"]],[R[14]]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[12],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[47]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[14]]]],[11,R[13],E,E,28,[[["self"]],[R[14]]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[12],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[47]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[14]]]],[11,R[13],E,E,29,[[["self"]],[R[14]]]],[11,"into",E,E,29,[[["self"]],[U]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[12],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[47]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[14]]]],[11,R[13],E,E,30,[[["self"]],[R[14]]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[12],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[47]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[11],E,E,31,[[[U]],[R[14]]]],[11,R[13],E,E,31,[[["self"]],[R[14]]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[12],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[47]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[11],E,E,32,[[[U]],[R[14]]]],[11,R[13],E,E,32,[[["self"]],[R[14]]]],[11,"into",E,E,32,[[["self"]],[U]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[12],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[47]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[11],E,E,84,[[[U]],[R[14]]]],[11,R[13],E,E,84,[[["self"]],[R[14]]]],[11,"into",E,E,84,[[["self"]],[U]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[12],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[["self"]],[R[47]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[11],E,E,85,[[[U]],[R[14]]]],[11,R[13],E,E,85,[[["self"]],[R[14]]]],[11,"into",E,E,85,[[["self"]],[U]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[12],E,E,85,[[["self"]],[T]]],[11,R[18],E,E,85,[[["self"]],[R[47]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[11],E,E,86,[[[U]],[R[14]]]],[11,R[13],E,E,86,[[["self"]],[R[14]]]],[11,"into",E,E,86,[[["self"]],[U]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[12],E,E,86,[[["self"]],[T]]],[11,R[18],E,E,86,[[["self"]],[R[47]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[11],E,E,33,[[[U]],[R[14]]]],[11,R[13],E,E,33,[[["self"]],[R[14]]]],[11,"into",E,E,33,[[["self"]],[U]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[12],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[47]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[11],E,E,34,[[[U]],[R[14]]]],[11,R[13],E,E,34,[[["self"]],[R[14]]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[12],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[47]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[14]]]],[11,R[13],E,E,35,[[["self"]],[R[14]]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[12],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[47]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[11],E,E,36,[[[U]],[R[14]]]],[11,R[13],E,E,36,[[["self"]],[R[14]]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[12],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[47]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[11],E,E,37,[[[U]],[R[14]]]],[11,R[13],E,E,37,[[["self"]],[R[14]]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[12],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[["self"]],[R[47]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[11],E,E,38,[[[U]],[R[14]]]],[11,R[13],E,E,38,[[["self"]],[R[14]]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[12],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[["self"]],[R[47]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[11],E,E,39,[[[U]],[R[14]]]],[11,R[13],E,E,39,[[["self"]],[R[14]]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[12],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[["self"]],[R[47]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[11],E,E,40,[[[U]],[R[14]]]],[11,R[13],E,E,40,[[["self"]],[R[14]]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[12],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[["self"]],[R[47]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[11],E,E,41,[[[U]],[R[14]]]],[11,R[13],E,E,41,[[["self"]],[R[14]]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[12],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[["self"]],[R[47]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[[U]],[R[14]]]],[11,R[13],E,E,42,[[["self"]],[R[14]]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[12],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[47]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[11],E,E,43,[[[U]],[R[14]]]],[11,R[13],E,E,43,[[["self"]],[R[14]]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[12],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[47]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[11],E,E,44,[[[U]],[R[14]]]],[11,R[13],E,E,44,[[["self"]],[R[14]]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[12],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[47]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[11],E,E,45,[[[U]],[R[14]]]],[11,R[13],E,E,45,[[["self"]],[R[14]]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[12],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[47]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[[U]],[R[14]]]],[11,R[13],E,E,46,[[["self"]],[R[14]]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[12],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[47]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[11],E,E,47,[[[U]],[R[14]]]],[11,R[13],E,E,47,[[["self"]],[R[14]]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[12],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[47]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[11],E,E,48,[[[U]],[R[14]]]],[11,R[13],E,E,48,[[["self"]],[R[14]]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[12],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[47]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[11],E,E,49,[[[U]],[R[14]]]],[11,R[13],E,E,49,[[["self"]],[R[14]]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[12],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[R[47]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[11],E,E,50,[[[U]],[R[14]]]],[11,R[13],E,E,50,[[["self"]],[R[14]]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[12],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[R[47]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[11],E,E,51,[[[U]],[R[14]]]],[11,R[13],E,E,51,[[["self"]],[R[14]]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[12],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[R[47]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[11],E,E,52,[[[U]],[R[14]]]],[11,R[13],E,E,52,[[["self"]],[R[14]]]],[11,"into",E,E,52,[[["self"]],[U]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[12],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[R[47]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[11],E,E,53,[[[U]],[R[14]]]],[11,R[13],E,E,53,[[["self"]],[R[14]]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[12],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[47]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[11],E,E,54,[[[U]],[R[14]]]],[11,R[13],E,E,54,[[["self"]],[R[14]]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[12],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[47]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[11],E,E,55,[[[U]],[R[14]]]],[11,R[13],E,E,55,[[["self"]],[R[14]]]],[11,"into",E,E,55,[[["self"]],[U]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[12],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[47]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[11],E,E,56,[[[U]],[R[14]]]],[11,R[13],E,E,56,[[["self"]],[R[14]]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[12],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[47]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[11],E,E,57,[[[U]],[R[14]]]],[11,R[13],E,E,57,[[["self"]],[R[14]]]],[11,"into",E,E,57,[[["self"]],[U]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[12],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[47]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[11],E,E,58,[[[U]],[R[14]]]],[11,R[13],E,E,58,[[["self"]],[R[14]]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[12],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[["self"]],[R[47]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[11],E,E,59,[[[U]],[R[14]]]],[11,R[13],E,E,59,[[["self"]],[R[14]]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[12],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[["self"]],[R[47]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[11],E,E,60,[[[U]],[R[14]]]],[11,R[13],E,E,60,[[["self"]],[R[14]]]],[11,"into",E,E,60,[[["self"]],[U]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[12],E,E,60,[[["self"]],[T]]],[11,R[18],E,E,60,[[["self"]],[R[47]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[11],E,E,61,[[[U]],[R[14]]]],[11,R[13],E,E,61,[[["self"]],[R[14]]]],[11,"into",E,E,61,[[["self"]],[U]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[12],E,E,61,[[["self"]],[T]]],[11,R[18],E,E,61,[[["self"]],[R[47]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[11],E,E,62,[[[U]],[R[14]]]],[11,R[13],E,E,62,[[["self"]],[R[14]]]],[11,"into",E,E,62,[[["self"]],[U]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[12],E,E,62,[[["self"]],[T]]],[11,R[18],E,E,62,[[["self"]],[R[47]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[11],E,E,63,[[[U]],[R[14]]]],[11,R[13],E,E,63,[[["self"]],[R[14]]]],[11,"into",E,E,63,[[["self"]],[U]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[12],E,E,63,[[["self"]],[T]]],[11,R[18],E,E,63,[[["self"]],[R[47]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[11],E,E,64,[[[U]],[R[14]]]],[11,R[13],E,E,64,[[["self"]],[R[14]]]],[11,"into",E,E,64,[[["self"]],[U]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[12],E,E,64,[[["self"]],[T]]],[11,R[18],E,E,64,[[["self"]],[R[47]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[11],E,E,65,[[[U]],[R[14]]]],[11,R[13],E,E,65,[[["self"]],[R[14]]]],[11,"into",E,E,65,[[["self"]],[U]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[12],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[["self"]],[R[47]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[11],E,E,66,[[[U]],[R[14]]]],[11,R[13],E,E,66,[[["self"]],[R[14]]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[12],E,E,66,[[["self"]],[T]]],[11,R[18],E,E,66,[[["self"]],[R[47]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[11],E,E,67,[[[U]],[R[14]]]],[11,R[13],E,E,67,[[["self"]],[R[14]]]],[11,"into",E,E,67,[[["self"]],[U]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[12],E,E,67,[[["self"]],[T]]],[11,R[18],E,E,67,[[["self"]],[R[47]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[11],E,E,68,[[[U]],[R[14]]]],[11,R[13],E,E,68,[[["self"]],[R[14]]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[12],E,E,68,[[["self"]],[T]]],[11,R[18],E,E,68,[[["self"]],[R[47]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[11],E,E,69,[[[U]],[R[14]]]],[11,R[13],E,E,69,[[["self"]],[R[14]]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[12],E,E,69,[[["self"]],[T]]],[11,R[18],E,E,69,[[["self"]],[R[47]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[11],E,E,70,[[[U]],[R[14]]]],[11,R[13],E,E,70,[[["self"]],[R[14]]]],[11,"into",E,E,70,[[["self"]],[U]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[12],E,E,70,[[["self"]],[T]]],[11,R[18],E,E,70,[[["self"]],[R[47]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[11],E,E,71,[[[U]],[R[14]]]],[11,R[13],E,E,71,[[["self"]],[R[14]]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[12],E,E,71,[[["self"]],[T]]],[11,R[18],E,E,71,[[["self"]],[R[47]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[11],E,E,72,[[[U]],[R[14]]]],[11,R[13],E,E,72,[[["self"]],[R[14]]]],[11,"into",E,E,72,[[["self"]],[U]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[12],E,E,72,[[["self"]],[T]]],[11,R[18],E,E,72,[[["self"]],[R[47]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[11],E,E,73,[[[U]],[R[14]]]],[11,R[13],E,E,73,[[["self"]],[R[14]]]],[11,"into",E,E,73,[[["self"]],[U]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[12],E,E,73,[[["self"]],[T]]],[11,R[18],E,E,73,[[["self"]],[R[47]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[11],E,E,87,[[[U]],[R[14]]]],[11,R[13],E,E,87,[[["self"]],[R[14]]]],[11,"into",E,E,87,[[["self"]],[U]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[12],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[["self"]],[R[47]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[11],E,E,88,[[[U]],[R[14]]]],[11,R[13],E,E,88,[[["self"]],[R[14]]]],[11,"into",E,E,88,[[["self"]],[U]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[12],E,E,88,[[["self"]],[T]]],[11,R[18],E,E,88,[[["self"]],[R[47]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[11],E,E,89,[[[U]],[R[14]]]],[11,R[13],E,E,89,[[["self"]],[R[14]]]],[11,"into",E,E,89,[[["self"]],[U]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[12],E,E,89,[[["self"]],[T]]],[11,R[18],E,E,89,[[["self"]],[R[47]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[11],E,E,74,[[[U]],[R[14]]]],[11,R[13],E,E,74,[[["self"]],[R[14]]]],[11,"into",E,E,74,[[["self"]],[U]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[12],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[["self"]],[R[47]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[11],E,E,75,[[[U]],[R[14]]]],[11,R[13],E,E,75,[[["self"]],[R[14]]]],[11,"into",E,E,75,[[["self"]],[U]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[12],E,E,75,[[["self"]],[T]]],[11,R[18],E,E,75,[[["self"]],[R[47]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[11],E,E,76,[[[U]],[R[14]]]],[11,R[13],E,E,76,[[["self"]],[R[14]]]],[11,"into",E,E,76,[[["self"]],[U]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[12],E,E,76,[[["self"]],[T]]],[11,R[18],E,E,76,[[["self"]],[R[47]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[11],E,E,77,[[[U]],[R[14]]]],[11,R[13],E,E,77,[[["self"]],[R[14]]]],[11,"into",E,E,77,[[["self"]],[U]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[12],E,E,77,[[["self"]],[T]]],[11,R[18],E,E,77,[[["self"]],[R[47]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[11],E,E,78,[[[U]],[R[14]]]],[11,R[13],E,E,78,[[["self"]],[R[14]]]],[11,"into",E,E,78,[[["self"]],[U]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[12],E,E,78,[[["self"]],[T]]],[11,R[18],E,E,78,[[["self"]],[R[47]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[11],E,E,90,[[[U]],[R[14]]]],[11,R[13],E,E,90,[[["self"]],[R[14]]]],[11,"into",E,E,90,[[["self"]],[U]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[12],E,E,90,[[["self"]],[T]]],[11,R[18],E,E,90,[[["self"]],[R[47]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[11],E,E,79,[[[U]],[R[14]]]],[11,R[13],E,E,79,[[["self"]],[R[14]]]],[11,"into",E,E,79,[[["self"]],[U]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[12],E,E,79,[[["self"]],[T]]],[11,R[18],E,E,79,[[["self"]],[R[47]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[11],E,E,80,[[[U]],[R[14]]]],[11,R[13],E,E,80,[[["self"]],[R[14]]]],[11,"into",E,E,80,[[["self"]],[U]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[12],E,E,80,[[["self"]],[T]]],[11,R[18],E,E,80,[[["self"]],[R[47]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[11],E,E,91,[[[U]],[R[14]]]],[11,R[13],E,E,91,[[["self"]],[R[14]]]],[11,"into",E,E,91,[[["self"]],[U]]],[11,R[46],E,E,91,[[["self"]],[T]]],[11,R[12],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[["self"]],[R[47]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[11],E,E,92,[[[U]],[R[14]]]],[11,R[13],E,E,92,[[["self"]],[R[14]]]],[11,"into",E,E,92,[[["self"]],[U]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[12],E,E,92,[[["self"]],[T]]],[11,R[18],E,E,92,[[["self"]],[R[47]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[11],E,E,93,[[[U]],[R[14]]]],[11,R[13],E,E,93,[[["self"]],[R[14]]]],[11,"into",E,E,93,[[["self"]],[U]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[12],E,E,93,[[["self"]],[T]]],[11,R[18],E,E,93,[[["self"]],[R[47]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[11],E,E,94,[[[U]],[R[14]]]],[11,R[13],E,E,94,[[["self"]],[R[14]]]],[11,"into",E,E,94,[[["self"]],[U]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[12],E,E,94,[[["self"]],[T]]],[11,R[18],E,E,94,[[["self"]],[R[47]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[11],E,E,95,[[[U]],[R[14]]]],[11,R[13],E,E,95,[[["self"]],[R[14]]]],[11,"into",E,E,95,[[["self"]],[U]]],[11,R[46],E,E,95,[[["self"]],[T]]],[11,R[12],E,E,95,[[["self"]],[T]]],[11,R[18],E,E,95,[[["self"]],[R[47]]]],[11,"fmt",E,E,81,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"clone",E,E,91,[[["self"]],["dir"]]],[11,"clone",E,E,92,[[["self"]],[R[160]]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],[R[773]]]],[11,"clone",E,E,3,[[["self"]],[R[150]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[117]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[118]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[151]]]],[11,"clone",E,E,93,[[["self"]],["file"]]],[11,"clone",E,E,94,[[["self"]],["fpos_t"]]],[11,"clone",E,E,17,[[["self"]],[R[152]]]],[11,"clone",E,E,18,[[["self"]],[R[119]]]],[11,"clone",E,E,19,[[["self"]],["passwd"]]],[11,"clone",E,E,20,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,82,[[["self"]],["fd_set"]]],[11,"clone",E,E,21,[[["self"]],["tm"]]],[11,"clone",E,E,22,[[["self"]],["msghdr"]]],[11,"clone",E,E,23,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,83,[[["self"]],["fsid_t"]]],[11,"clone",E,E,24,[[["self"]],[R[115]]]],[11,"clone",E,E,25,[[["self"]],[R[120]]]],[11,"clone",E,E,26,[[["self"]],["utsname"]]],[11,"clone",E,E,95,[[["self"]],[R[161]]]],[11,"clone",E,E,27,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,28,[[["self"]],["aiocb"]]],[11,"clone",E,E,29,[[["self"]],["glob_t"]]],[11,"clone",E,E,30,[[["self"]],[R[153]]]],[11,"clone",E,E,31,[[["self"]],[R[116]]]],[11,"clone",E,E,32,[[["self"]],["stat"]]],[11,"clone",E,E,84,[[["self"]],[R[121]]]],[11,"clone",E,E,85,[[["self"]],[R[122]]]],[11,"clone",E,E,86,[[["self"]],[R[123]]]],[11,"clone",E,E,33,[[["self"]],[R[124]]]],[11,"clone",E,E,34,[[["self"]],[R[114]]]],[11,"clone",E,E,35,[[["self"]],["stack_t"]]],[11,"clone",E,E,36,[[["self"]],[R[154]]]],[11,"clone",E,E,37,[[["self"]],[R[125]]]],[11,"clone",E,E,38,[[["self"]],["statvfs"]]],[11,"clone",E,E,39,[[["self"]],["dl_info"]]],[11,"clone",E,E,40,[[["self"]],[R[126]]]],[11,"clone",E,E,41,[[["self"]],[R[127]]]],[11,"clone",E,E,42,[[["self"]],["dqblk"]]],[11,"clone",E,E,43,[[["self"]],[R[128]]]],[11,"clone",E,E,44,[[["self"]],["termios"]]],[11,"clone",E,E,45,[[["self"]],["flock"]]],[11,"clone",E,E,46,[[["self"]],["sf_hdtr"]]],[11,"clone",E,E,47,[[["self"]],["lconv"]]],[11,"clone",E,E,48,[[["self"]],[R[155]]]],[11,"clone",E,E,49,[[["self"]],[R[129]]]],[11,"clone",E,E,50,[[["self"]],[R[130]]]],[11,"clone",E,E,51,[[["self"]],[R[131]]]],[11,"clone",E,E,52,[[["self"]],[R[132]]]],[11,"clone",E,E,53,[[["self"]],["xucred"]]],[11,"clone",E,E,54,[[["self"]],[R[133]]]],[11,"clone",E,E,55,[[["self"]],[R[134]]]],[11,"clone",E,E,56,[[["self"]],[R[135]]]],[11,"clone",E,E,57,[[["self"]],[R[136]]]],[11,"clone",E,E,58,[[["self"]],[R[137]]]],[11,"clone",E,E,59,[[["self"]],[R[138]]]],[11,"clone",E,E,60,[[["self"]],[R[139]]]],[11,"clone",E,E,61,[[["self"]],[R[140]]]],[11,"clone",E,E,62,[[["self"]],[R[141]]]],[11,"clone",E,E,63,[[["self"]],[R[142]]]],[11,"clone",E,E,64,[[["self"]],[R[156]]]],[11,"clone",E,E,65,[[["self"]],["sembuf"]]],[11,"clone",E,E,66,[[["self"]],["arphdr"]]],[11,"clone",E,E,67,[[["self"]],["in_addr"]]],[11,"clone",E,E,68,[[["self"]],["kevent"]]],[11,"clone",E,E,69,[[["self"]],[R[157]]]],[11,"clone",E,E,70,[[["self"]],[R[158]]]],[11,"clone",E,E,71,[[["self"]],[R[143]]]],[11,"clone",E,E,72,[[["self"]],["statfs"]]],[11,"clone",E,E,73,[[["self"]],["dirent"]]],[11,"clone",E,E,87,[[["self"]],[R[144]]]],[11,"clone",E,E,88,[[["self"]],[R[145]]]],[11,"clone",E,E,89,[[["self"]],[R[146]]]],[11,"clone",E,E,74,[[["self"]],[R[147]]]],[11,"clone",E,E,75,[[["self"]],["utmpx"]]],[11,"clone",E,E,80,[[["self"]],["semun"]]],[11,"clone",E,E,76,[[["self"]],[R[148]]]],[11,"clone",E,E,77,[[["self"]],["if_data"]]],[11,"clone",E,E,78,[[["self"]],["bpf_hdr"]]],[11,"clone",E,E,90,[[["self"]],[R[149]]]],[11,"clone",E,E,79,[[["self"]],[R[159]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,R[773]],[3,R[150]],[3,"rlimit"],[3,"rusage"],[3,R[117]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[118]],[3,"tms"],[3,"servent"],[3,R[151]],[3,R[152]],[3,R[119]],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,R[115]],[3,R[120]],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,R[153]],[3,R[116]],[3,"stat"],[3,R[124]],[3,R[114]],[3,"stack_t"],[3,R[154]],[3,R[125]],[3,"statvfs"],[3,"Dl_info"],[3,R[126]],[3,R[127]],[3,"dqblk"],[3,R[128]],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,R[155]],[3,R[129]],[3,R[130]],[3,R[131]],[3,R[132]],[3,"xucred"],[3,R[133]],[3,R[134]],[3,R[135]],[3,R[136]],[3,R[137]],[3,R[138]],[3,R[139]],[3,R[140]],[3,R[141]],[3,R[142]],[3,R[156]],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,R[157]],[3,R[158]],[3,R[143]],[3,"statfs"],[3,"dirent"],[3,R[147]],[3,"utmpx"],[3,R[148]],[3,"if_data"],[3,"bpf_hdr"],[3,R[159]],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,R[121]],[3,R[122]],[3,R[123]],[3,R[144]],[3,R[145]],[3,R[146]],[3,R[149]],[4,"DIR"],[4,R[160]],[4,"FILE"],[4,"fpos_t"],[4,R[161]]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","i":[[8,"Integer","num",E,N,N],[10,R[285],E,R[1094],0,[[["self"],["self"]],["self"]]],[10,R[286],E,R[1095],0,[[["self"],["self"]],["self"]]],[11,"div_ceil",E,R[1096],0,[[["self"],["self"]],["self"]]],[10,"gcd",E,R[1097],0,[[["self"],["self"]],["self"]]],[10,"lcm",E,R[1098],0,[[["self"],["self"]],["self"]]],[11,"gcd_lcm",E,R[1099],0,N],[11,R[1100],E,R[1101],0,[[["self"],["self"]],[R[288]]]],[11,R[1102],E,R[1103],0,N],[10,"divides",E,R[1104],0,[[["self"],["self"]],["bool"]]],[10,R[1105],E,R[1106],0,[[["self"],["self"]],["bool"]]],[10,"is_even",E,R[1107],0,[[["self"]],["bool"]]],[10,"is_odd",E,R[1108],0,[[["self"]],["bool"]]],[10,"div_rem",E,R[1109],0,N],[11,R[287],E,R[1110],0,N],[11,R[1111],E,R[1112],0,[[["self"],["self"]],["self"]]],[11,R[1113],E,R[1114],0,[[["self"],["self"]],["self"]]],[5,"range",E,R[1115],N,[[["a"],["a"]],["range"]]],[5,R[1116],E,R[1117],N,[[["a"],["a"]],[R[987]]]],[5,R[1201],E,R[1118],N,[[["a"],["a"],["a"]],[R[988]]]],[5,R[1119],E,R[1120],N,[[["a"],["a"],["a"]],[R[989]]]],[8,"Num",E,R[1191],N,N],[16,R[1192],E,E,1,N],[10,R[1193],E,R[1194],1,[[["str"],["u32"]],[R[14]]]],[8,"Zero",E,R[1137],N,N],[10,"zero",E,R[1138],2,[[],["self"]]],[11,"set_zero",E,R[1139],2,N],[10,"is_zero",E,R[1140],2,[[["self"]],["bool"]]],[8,"One",E,R[1141],N,N],[10,"one",E,R[1142],3,[[],["self"]]],[11,"set_one",E,R[1143],3,N],[11,"is_one",E,R[1144],3,[[["self"]],["bool"]]],[8,"Signed",E,R[1185],N,N],[10,"abs",E,R[231],4,[[["self"]],["self"]]],[10,"abs_sub",E,R[212],4,[[["self"],["self"]],["self"]]],[10,"signum",E,R[232],4,[[["self"]],["self"]]],[10,R[1186],E,R[1187],4,[[["self"]],["bool"]]],[10,R[1188],E,R[1189],4,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1190],N,N],[8,"Bounded",E,R[1121],N,N],[10,R[163],E,R[1122],5,[[],["self"]]],[10,R[164],E,R[1123],5,[[],["self"]]],[5,"one",E,R[1146],N,[[],[T]]],[5,"zero",E,R[1145],N,[[],[T]]],[5,"abs",E,R[231],N,[[[T]],[T]]],[5,"abs_sub",E,R[212],N,[[[T],[T]],[T]]],[5,"signum",E,R[232],N,[[[T]],[T]]],[8,R[249],E,R[1178],N,N],[10,R[1179],E,R[1180],6,[[["self"],["self"]],["self"]]],[10,R[1181],E,R[1182],6,[[["self"],["self"]],["self"]]],[8,R[240],E,R[1165],N,N],[10,R[1166],E,R[1167],7,[[["self"],["self"]],[R[42]]]],[8,R[241],E,R[1168],N,N],[10,R[1169],E,R[1170],8,[[["self"],["self"]],[R[42]]]],[8,R[242],E,R[1171],N,N],[10,R[1172],E,R[1173],9,[[["self"],["self"]],[R[42]]]],[8,R[243],E,R[1174],N,N],[10,R[1175],E,R[1176],10,[[["self"],["self"]],[R[42]]]],[8,"PrimInt",E,R[1147],N,N],[10,R[1234],E,R[1148],11,[[["self"]],["u32"]]],[10,R[1149],E,R[1150],11,[[["self"]],["u32"]]],[10,R[1151],E,R[1152],11,[[["self"]],["u32"]]],[10,R[1153],E,R[1154],11,[[["self"]],["u32"]]],[10,R[1155],E,R[194],11,[[["self"],["u32"]],["self"]]],[10,R[1156],E,R[195],11,[[["self"],["u32"]],["self"]]],[10,R[1235],E,R[194],11,[[["self"],["u32"]],["self"]]],[10,R[1236],E,R[195],11,[[["self"],["u32"]],["self"]]],[10,R[1157],E,R[194],11,[[["self"],["u32"]],["self"]]],[10,R[1158],E,R[195],11,[[["self"],["u32"]],["self"]]],[10,R[1237],E,R[1159],11,[[["self"]],["self"]]],[10,"from_be",E,R[1160],11,[[["self"]],["self"]]],[10,"from_le",E,R[1161],11,[[["self"]],["self"]]],[10,"to_be",E,R[1162],11,[[["self"]],["self"]]],[10,"to_le",E,R[1163],11,[[["self"]],["self"]]],[10,"pow",E,R[1164],11,[[["self"],["u32"]],["self"]]],[8,"Float",E,R[1129],N,N],[10,"nan",E,R[1130],12,[[],["self"]]],[10,"infinity",E,R[1131],12,[[],["self"]]],[10,R[165],E,R[1132],12,[[],["self"]]],[10,"neg_zero",E,R[166],12,[[],["self"]]],[10,R[163],E,R[167],12,[[],["self"]]],[10,R[168],E,R[169],12,[[],["self"]]],[11,"epsilon",E,R[170],12,[[],["self"]]],[10,R[164],E,R[171],12,[[],["self"]]],[10,"is_nan",E,R[1133],12,[[["self"]],["bool"]]],[10,R[172],E,R[1134],12,[[["self"]],["bool"]]],[10,R[173],E,R[1135],12,[[["self"]],["bool"]]],[10,R[174],E,R[175],12,[[["self"]],["bool"]]],[10,"classify",E,R[176],12,[[["self"]],[R[177]]]],[10,"floor",E,R[178],12,[[["self"]],["self"]]],[10,"ceil",E,R[179],12,[[["self"]],["self"]]],[10,"round",E,R[180],12,[[["self"]],["self"]]],[10,"trunc",E,R[181],12,[[["self"]],["self"]]],[10,"fract",E,R[182],12,[[["self"]],["self"]]],[10,"abs",E,R[183],12,[[["self"]],["self"]]],[10,"signum",E,R[184],12,[[["self"]],["self"]]],[10,R[185],E,R[200],12,[[["self"]],["bool"]]],[10,R[186],E,R[201],12,[[["self"]],["bool"]]],[10,"mul_add",E,R[197],12,[[["self"],["self"],["self"]],["self"]]],[10,"recip",E,R[202],12,[[["self"]],["self"]]],[10,"powi",E,R[187],12,[[["self"],["i32"]],["self"]]],[10,"powf",E,R[1136],12,[[["self"],["self"]],["self"]]],[10,"sqrt",E,R[203],12,[[["self"]],["self"]]],[10,"exp",E,R[204],12,[[["self"]],["self"]]],[10,"exp2",E,R[205],12,[[["self"]],["self"]]],[10,"ln",E,R[206],12,[[["self"]],["self"]]],[10,"log",E,R[207],12,[[["self"],["self"]],["self"]]],[10,"log2",E,R[208],12,[[["self"]],["self"]]],[10,"log10",E,R[209],12,[[["self"]],["self"]]],[11,R[188],E,R[210],12,[[["self"]],["self"]]],[11,R[189],E,R[211],12,[[["self"]],["self"]]],[10,"max",E,R[190],12,[[["self"],["self"]],["self"]]],[10,"min",E,R[191],12,[[["self"],["self"]],["self"]]],[10,"abs_sub",E,R[212],12,[[["self"],["self"]],["self"]]],[10,"cbrt",E,R[213],12,[[["self"]],["self"]]],[10,"hypot",E,R[214],12,[[["self"],["self"]],["self"]]],[10,"sin",E,R[215],12,[[["self"]],["self"]]],[10,"cos",E,R[216],12,[[["self"]],["self"]]],[10,"tan",E,R[217],12,[[["self"]],["self"]]],[10,"asin",E,R[218],12,[[["self"]],["self"]]],[10,"acos",E,R[219],12,[[["self"]],["self"]]],[10,"atan",E,R[220],12,[[["self"]],["self"]]],[10,"atan2",E,R[221],12,[[["self"],["self"]],["self"]]],[10,"sin_cos",E,R[222],12,N],[10,"exp_m1",E,R[223],12,[[["self"]],["self"]]],[10,"ln_1p",E,R[224],12,[[["self"]],["self"]]],[10,"sinh",E,R[225],12,[[["self"]],["self"]]],[10,"cosh",E,R[226],12,[[["self"]],["self"]]],[10,"tanh",E,R[227],12,[[["self"]],["self"]]],[10,"asinh",E,R[228],12,[[["self"]],["self"]]],[10,"acosh",E,R[229],12,[[["self"]],["self"]]],[10,"atanh",E,R[230],12,[[["self"]],["self"]]],[10,R[192],E,R[193],12,N],[8,R[235],E,R[1058],N,N],[11,"to_isize",E,R[1059],13,[[["self"]],[R[42],["isize"]]]],[11,"to_i8",E,R[1060],13,[[["self"]],[R[42],["i8"]]]],[11,"to_i16",E,R[1061],13,[[["self"]],[R[42],["i16"]]]],[11,"to_i32",E,R[1062],13,[[["self"]],[R[42],["i32"]]]],[10,"to_i64",E,R[1063],13,[[["self"]],[R[42],["i64"]]]],[11,"to_i128",E,R[1064],13,[[["self"]],[R[42],["i128"]]]],[11,"to_usize",E,R[1065],13,[[["self"]],[R[42],[R[9]]]]],[11,"to_u8",E,R[1066],13,[[["self"]],[R[42],["u8"]]]],[11,"to_u16",E,R[1067],13,[[["self"]],[R[42],["u16"]]]],[11,"to_u32",E,R[1068],13,[[["self"]],[R[42],["u32"]]]],[10,"to_u64",E,R[1069],13,[[["self"]],[R[42],["u64"]]]],[11,"to_u128",E,R[1070],13,[[["self"]],[R[42],["u128"]]]],[11,"to_f32",E,R[1071],13,[[["self"]],[R[42],["f32"]]]],[11,"to_f64",E,R[1072],13,[[["self"]],[R[42],["f64"]]]],[8,R[236],E,R[1073],N,N],[11,R[1125],E,R[1074],14,[[["isize"]],[R[42]]]],[11,"from_i8",E,R[1075],14,[[["i8"]],[R[42]]]],[11,"from_i16",E,R[1076],14,[[["i16"]],[R[42]]]],[11,"from_i32",E,R[1077],14,[[["i32"]],[R[42]]]],[10,R[1576],E,R[1078],14,[[["i64"]],[R[42]]]],[11,R[1202],E,R[1079],14,[[["i128"]],[R[42]]]],[11,R[1126],E,R[1080],14,[[[R[9]]],[R[42]]]],[11,"from_u8",E,R[1081],14,[[["u8"]],[R[42]]]],[11,"from_u16",E,R[1082],14,[[["u16"]],[R[42]]]],[11,"from_u32",E,R[1083],14,[[["u32"]],[R[42]]]],[10,R[1577],E,R[1084],14,[[["u64"]],[R[42]]]],[11,R[1203],E,R[1085],14,[[["u128"]],[R[42]]]],[11,"from_f32",E,R[1086],14,[[["f32"]],[R[42]]]],[11,"from_f64",E,R[1087],14,[[["f64"]],[R[42]]]],[8,"NumCast",E,R[1088],N,N],[10,"from",E,R[1089],15,[[[T]],[R[42]]]],[0,"cast",E,E,N,N],[8,R[235],"num::cast",R[1058],N,N],[11,"to_isize",E,R[1059],13,[[["self"]],[R[42],["isize"]]]],[11,"to_i8",E,R[1060],13,[[["self"]],[R[42],["i8"]]]],[11,"to_i16",E,R[1061],13,[[["self"]],[R[42],["i16"]]]],[11,"to_i32",E,R[1062],13,[[["self"]],[R[42],["i32"]]]],[10,"to_i64",E,R[1063],13,[[["self"]],[R[42],["i64"]]]],[11,"to_i128",E,R[1064],13,[[["self"]],[R[42],["i128"]]]],[11,"to_usize",E,R[1065],13,[[["self"]],[R[42],[R[9]]]]],[11,"to_u8",E,R[1066],13,[[["self"]],[R[42],["u8"]]]],[11,"to_u16",E,R[1067],13,[[["self"]],[R[42],["u16"]]]],[11,"to_u32",E,R[1068],13,[[["self"]],[R[42],["u32"]]]],[10,"to_u64",E,R[1069],13,[[["self"]],[R[42],["u64"]]]],[11,"to_u128",E,R[1070],13,[[["self"]],[R[42],["u128"]]]],[11,"to_f32",E,R[1071],13,[[["self"]],[R[42],["f32"]]]],[11,"to_f64",E,R[1072],13,[[["self"]],[R[42],["f64"]]]],[8,R[236],E,R[1073],N,N],[11,R[1125],E,R[1074],14,[[["isize"]],[R[42]]]],[11,"from_i8",E,R[1075],14,[[["i8"]],[R[42]]]],[11,"from_i16",E,R[1076],14,[[["i16"]],[R[42]]]],[11,"from_i32",E,R[1077],14,[[["i32"]],[R[42]]]],[10,R[1576],E,R[1078],14,[[["i64"]],[R[42]]]],[11,R[1202],E,R[1079],14,[[["i128"]],[R[42]]]],[11,R[1126],E,R[1080],14,[[[R[9]]],[R[42]]]],[11,"from_u8",E,R[1081],14,[[["u8"]],[R[42]]]],[11,"from_u16",E,R[1082],14,[[["u16"]],[R[42]]]],[11,"from_u32",E,R[1083],14,[[["u32"]],[R[42]]]],[10,R[1577],E,R[1084],14,[[["u64"]],[R[42]]]],[11,R[1203],E,R[1085],14,[[["u128"]],[R[42]]]],[11,"from_f32",E,R[1086],14,[[["f32"]],[R[42]]]],[11,"from_f64",E,R[1087],14,[[["f64"]],[R[42]]]],[5,"cast",E,R[1090],N,[[[T]],[R[42]]]],[8,"NumCast",E,R[1088],N,N],[10,"from",E,R[1089],15,[[[T]],[R[42]]]],[8,R[237],E,R[1127],N,N],[10,"as_",E,R[1128],16,[[["self"]],[T]]],[5,"cast","num",R[1090],N,[[[T]],[R[42]]]],[0,"pow",E,E,N,N],[8,"Pow","num::pow",R[1183],N,N],[16,"Output",E,R[199],17,N],[10,"pow",E,R[1184],17,N],[5,"pow",E,R[1091],N,[[[T],[R[9]]],[T]]],[5,R[1092],E,R[1093],N,[[[T],[R[9]]],[R[42]]]],[5,"pow","num",R[1091],N,[[[T],[R[9]]],[T]]],[5,R[1092],E,R[1093],N,[[[T],[R[9]]],[R[42]]]],[5,"clamp",E,R[1195],N,[[[T],[T],[T]],[T]]],[0,"integer",E,E,N,N],[8,"Integer",R[1196],E,N,N],[10,R[285],E,R[1094],0,[[["self"],["self"]],["self"]]],[10,R[286],E,R[1095],0,[[["self"],["self"]],["self"]]],[11,"div_ceil",E,R[1096],0,[[["self"],["self"]],["self"]]],[10,"gcd",E,R[1097],0,[[["self"],["self"]],["self"]]],[10,"lcm",E,R[1098],0,[[["self"],["self"]],["self"]]],[11,"gcd_lcm",E,R[1099],0,N],[11,R[1100],E,R[1101],0,[[["self"],["self"]],[R[288]]]],[11,R[1102],E,R[1103],0,N],[10,"divides",E,R[1104],0,[[["self"],["self"]],["bool"]]],[10,R[1105],E,R[1106],0,[[["self"],["self"]],["bool"]]],[10,"is_even",E,R[1107],0,[[["self"]],["bool"]]],[10,"is_odd",E,R[1108],0,[[["self"]],["bool"]]],[10,"div_rem",E,R[1109],0,N],[11,R[287],E,R[1110],0,N],[11,R[1111],E,R[1112],0,[[["self"],["self"]],["self"]]],[11,R[1113],E,R[1114],0,[[["self"],["self"]],["self"]]],[3,R[289],E,R[1280],N,N],[12,"gcd",E,E,18,N],[12,"x",E,E,18,N],[12,"y",E,E,18,N],[5,"div_rem",E,R[1282],N,N],[5,R[285],E,R[1283],N,[[[T],[T]],[T]]],[5,R[286],E,R[1284],N,[[[T],[T]],[T]]],[5,R[287],E,R[1285],N,N],[5,"div_ceil",E,R[1286],N,[[[T],[T]],[T]]],[5,"gcd",E,R[1287],N,[[[T],[T]],[T]]],[5,"lcm",E,R[1288],N,[[[T],[T]],[T]]],[5,"gcd_lcm",E,R[1289],N,N],[3,R[290],E,R[1281],N,N],[5,"binomial",E,R[1290],N,[[[T],[T]],[T]]],[5,R[1291],E,R[1292],N,N],[5,"nth_root",E,R[282],N,[[[T],["u32"]],[T]]],[5,"cbrt",E,R[284],N,[[[T]],[T]]],[5,"sqrt",E,R[283],N,[[[T]],[T]]],[8,"Roots",E,R[1293],N,N],[10,"nth_root",E,R[282],19,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[283],19,[[["self"]],["self"]]],[11,"cbrt",E,R[284],19,[[["self"]],["self"]]],[0,"iter","num",E,N,N],[3,"Range","num::iter",R[1197],N,N],[5,"range",E,R[1115],N,[[["a"],["a"]],["range"]]],[3,R[990],E,R[1198],N,N],[5,R[1116],E,R[1117],N,[[["a"],["a"]],[R[987]]]],[3,R[991],E,R[1199],N,N],[5,R[1201],E,R[1118],N,[[["a"],["a"],["a"]],[R[988]]]],[3,R[992],E,R[1200],N,N],[5,R[1119],E,R[1120],N,[[["a"],["a"],["a"]],[R[989]]]],[0,"traits","num",E,N,N],[0,"bounds",R[1124],E,N,N],[8,"Bounded","num::traits::bounds",R[1121],N,N],[10,R[163],E,R[1122],5,[[],["self"]]],[10,R[164],E,R[1123],5,[[],["self"]]],[0,"cast",R[1124],E,N,N],[8,R[235],"num::traits::cast",R[1058],N,N],[11,"to_isize",E,R[1059],13,[[["self"]],[R[42],["isize"]]]],[11,"to_i8",E,R[1060],13,[[["self"]],[R[42],["i8"]]]],[11,"to_i16",E,R[1061],13,[[["self"]],[R[42],["i16"]]]],[11,"to_i32",E,R[1062],13,[[["self"]],[R[42],["i32"]]]],[10,"to_i64",E,R[1063],13,[[["self"]],[R[42],["i64"]]]],[11,"to_i128",E,R[1064],13,[[["self"]],[R[42],["i128"]]]],[11,"to_usize",E,R[1065],13,[[["self"]],[R[42],[R[9]]]]],[11,"to_u8",E,R[1066],13,[[["self"]],[R[42],["u8"]]]],[11,"to_u16",E,R[1067],13,[[["self"]],[R[42],["u16"]]]],[11,"to_u32",E,R[1068],13,[[["self"]],[R[42],["u32"]]]],[10,"to_u64",E,R[1069],13,[[["self"]],[R[42],["u64"]]]],[11,"to_u128",E,R[1070],13,[[["self"]],[R[42],["u128"]]]],[11,"to_f32",E,R[1071],13,[[["self"]],[R[42],["f32"]]]],[11,"to_f64",E,R[1072],13,[[["self"]],[R[42],["f64"]]]],[8,R[236],E,R[1073],N,N],[11,R[1125],E,R[1074],14,[[["isize"]],[R[42]]]],[11,"from_i8",E,R[1075],14,[[["i8"]],[R[42]]]],[11,"from_i16",E,R[1076],14,[[["i16"]],[R[42]]]],[11,"from_i32",E,R[1077],14,[[["i32"]],[R[42]]]],[10,R[1576],E,R[1078],14,[[["i64"]],[R[42]]]],[11,R[1202],E,R[1079],14,[[["i128"]],[R[42]]]],[11,R[1126],E,R[1080],14,[[[R[9]]],[R[42]]]],[11,"from_u8",E,R[1081],14,[[["u8"]],[R[42]]]],[11,"from_u16",E,R[1082],14,[[["u16"]],[R[42]]]],[11,"from_u32",E,R[1083],14,[[["u32"]],[R[42]]]],[10,R[1577],E,R[1084],14,[[["u64"]],[R[42]]]],[11,R[1203],E,R[1085],14,[[["u128"]],[R[42]]]],[11,"from_f32",E,R[1086],14,[[["f32"]],[R[42]]]],[11,"from_f64",E,R[1087],14,[[["f64"]],[R[42]]]],[5,"cast",E,R[1090],N,[[[T]],[R[42]]]],[8,"NumCast",E,R[1088],N,N],[10,"from",E,R[1089],15,[[[T]],[R[42]]]],[8,R[237],E,R[1127],N,N],[10,"as_",E,R[1128],16,[[["self"]],[T]]],[0,"float",R[1124],E,N,N],[8,R[238],"num::traits::float",R[1204],N,N],[10,"infinity",E,R[1205],20,[[],["self"]]],[10,R[165],E,R[1206],20,[[],["self"]]],[10,"nan",E,R[1207],20,[[],["self"]]],[10,"neg_zero",E,R[166],20,[[],["self"]]],[10,R[163],E,R[167],20,[[],["self"]]],[10,R[168],E,R[169],20,[[],["self"]]],[10,"epsilon",E,R[170],20,[[],["self"]]],[10,R[164],E,R[171],20,[[],["self"]]],[11,"is_nan",E,R[1208],20,[[["self"]],["bool"]]],[11,R[172],E,R[1209],20,[[["self"]],["bool"]]],[11,R[173],E,R[1210],20,[[["self"]],["bool"]]],[11,R[174],E,R[175],20,[[["self"]],["bool"]]],[10,"classify",E,R[176],20,[[["self"]],[R[177]]]],[11,"floor",E,R[178],20,[[["self"]],["self"]]],[11,"ceil",E,R[179],20,[[["self"]],["self"]]],[11,"round",E,R[180],20,[[["self"]],["self"]]],[11,"trunc",E,R[181],20,[[["self"]],["self"]]],[11,"fract",E,R[182],20,[[["self"]],["self"]]],[11,"abs",E,R[183],20,[[["self"]],["self"]]],[11,"signum",E,R[184],20,[[["self"]],["self"]]],[11,R[185],E,R[1211],20,[[["self"]],["bool"]]],[11,R[186],E,R[1212],20,[[["self"]],["bool"]]],[11,"min",E,R[191],20,[[["self"],["self"]],["self"]]],[11,"max",E,R[190],20,[[["self"],["self"]],["self"]]],[11,"recip",E,R[1213],20,[[["self"]],["self"]]],[11,"powi",E,R[187],20,[[["self"],["i32"]],["self"]]],[10,R[188],E,R[1214],20,[[["self"]],["self"]]],[10,R[189],E,R[1215],20,[[["self"]],["self"]]],[10,R[192],E,R[193],20,N],[8,"Float",E,R[1129],N,N],[10,"nan",E,R[1130],12,[[],["self"]]],[10,"infinity",E,R[1131],12,[[],["self"]]],[10,R[165],E,R[1132],12,[[],["self"]]],[10,"neg_zero",E,R[166],12,[[],["self"]]],[10,R[163],E,R[167],12,[[],["self"]]],[10,R[168],E,R[169],12,[[],["self"]]],[11,"epsilon",E,R[170],12,[[],["self"]]],[10,R[164],E,R[171],12,[[],["self"]]],[10,"is_nan",E,R[1133],12,[[["self"]],["bool"]]],[10,R[172],E,R[1134],12,[[["self"]],["bool"]]],[10,R[173],E,R[1135],12,[[["self"]],["bool"]]],[10,R[174],E,R[175],12,[[["self"]],["bool"]]],[10,"classify",E,R[176],12,[[["self"]],[R[177]]]],[10,"floor",E,R[178],12,[[["self"]],["self"]]],[10,"ceil",E,R[179],12,[[["self"]],["self"]]],[10,"round",E,R[180],12,[[["self"]],["self"]]],[10,"trunc",E,R[181],12,[[["self"]],["self"]]],[10,"fract",E,R[182],12,[[["self"]],["self"]]],[10,"abs",E,R[183],12,[[["self"]],["self"]]],[10,"signum",E,R[184],12,[[["self"]],["self"]]],[10,R[185],E,R[200],12,[[["self"]],["bool"]]],[10,R[186],E,R[201],12,[[["self"]],["bool"]]],[10,"mul_add",E,R[197],12,[[["self"],["self"],["self"]],["self"]]],[10,"recip",E,R[202],12,[[["self"]],["self"]]],[10,"powi",E,R[187],12,[[["self"],["i32"]],["self"]]],[10,"powf",E,R[1136],12,[[["self"],["self"]],["self"]]],[10,"sqrt",E,R[203],12,[[["self"]],["self"]]],[10,"exp",E,R[204],12,[[["self"]],["self"]]],[10,"exp2",E,R[205],12,[[["self"]],["self"]]],[10,"ln",E,R[206],12,[[["self"]],["self"]]],[10,"log",E,R[207],12,[[["self"],["self"]],["self"]]],[10,"log2",E,R[208],12,[[["self"]],["self"]]],[10,"log10",E,R[209],12,[[["self"]],["self"]]],[11,R[188],E,R[210],12,[[["self"]],["self"]]],[11,R[189],E,R[211],12,[[["self"]],["self"]]],[10,"max",E,R[190],12,[[["self"],["self"]],["self"]]],[10,"min",E,R[191],12,[[["self"],["self"]],["self"]]],[10,"abs_sub",E,R[212],12,[[["self"],["self"]],["self"]]],[10,"cbrt",E,R[213],12,[[["self"]],["self"]]],[10,"hypot",E,R[214],12,[[["self"],["self"]],["self"]]],[10,"sin",E,R[215],12,[[["self"]],["self"]]],[10,"cos",E,R[216],12,[[["self"]],["self"]]],[10,"tan",E,R[217],12,[[["self"]],["self"]]],[10,"asin",E,R[218],12,[[["self"]],["self"]]],[10,"acos",E,R[219],12,[[["self"]],["self"]]],[10,"atan",E,R[220],12,[[["self"]],["self"]]],[10,"atan2",E,R[221],12,[[["self"],["self"]],["self"]]],[10,"sin_cos",E,R[222],12,N],[10,"exp_m1",E,R[223],12,[[["self"]],["self"]]],[10,"ln_1p",E,R[224],12,[[["self"]],["self"]]],[10,"sinh",E,R[225],12,[[["self"]],["self"]]],[10,"cosh",E,R[226],12,[[["self"]],["self"]]],[10,"tanh",E,R[227],12,[[["self"]],["self"]]],[10,"asinh",E,R[228],12,[[["self"]],["self"]]],[10,"acosh",E,R[229],12,[[["self"]],["self"]]],[10,"atanh",E,R[230],12,[[["self"]],["self"]]],[10,R[192],E,R[193],12,N],[8,R[239],E,E,N,N],[10,"E",E,R[1216],21,[[],["self"]]],[10,"FRAC_1_PI",E,R[1217],21,[[],["self"]]],[10,R[1218],E,R[1219],21,[[],["self"]]],[10,"FRAC_2_PI",E,R[1220],21,[[],["self"]]],[10,R[1221],E,R[1222],21,[[],["self"]]],[10,"FRAC_PI_2",E,R[1223],21,[[],["self"]]],[10,"FRAC_PI_3",E,R[1224],21,[[],["self"]]],[10,"FRAC_PI_4",E,R[1225],21,[[],["self"]]],[10,"FRAC_PI_6",E,R[1226],21,[[],["self"]]],[10,"FRAC_PI_8",E,R[1227],21,[[],["self"]]],[10,"LN_10",E,R[1228],21,[[],["self"]]],[10,"LN_2",E,R[1229],21,[[],["self"]]],[10,"LOG10_E",E,R[1230],21,[[],["self"]]],[10,"LOG2_E",E,R[1231],21,[[],["self"]]],[10,"PI",E,R[1232],21,[[],["self"]]],[10,"SQRT_2",E,R[1233],21,[[],["self"]]],[0,"identities",R[1124],E,N,N],[8,"Zero","num::traits::identities",R[1137],N,N],[10,"zero",E,R[1138],2,[[],["self"]]],[11,"set_zero",E,R[1139],2,N],[10,"is_zero",E,R[1140],2,[[["self"]],["bool"]]],[8,"One",E,R[1141],N,N],[10,"one",E,R[1142],3,[[],["self"]]],[11,"set_one",E,R[1143],3,N],[11,"is_one",E,R[1144],3,[[["self"]],["bool"]]],[5,"zero",E,R[1145],N,[[],[T]]],[5,"one",E,R[1146],N,[[],[T]]],[0,"int",R[1124],E,N,N],[8,"PrimInt","num::traits::int",R[1147],N,N],[10,R[1234],E,R[1148],11,[[["self"]],["u32"]]],[10,R[1149],E,R[1150],11,[[["self"]],["u32"]]],[10,R[1151],E,R[1152],11,[[["self"]],["u32"]]],[10,R[1153],E,R[1154],11,[[["self"]],["u32"]]],[10,R[1155],E,R[194],11,[[["self"],["u32"]],["self"]]],[10,R[1156],E,R[195],11,[[["self"],["u32"]],["self"]]],[10,R[1235],E,R[194],11,[[["self"],["u32"]],["self"]]],[10,R[1236],E,R[195],11,[[["self"],["u32"]],["self"]]],[10,R[1157],E,R[194],11,[[["self"],["u32"]],["self"]]],[10,R[1158],E,R[195],11,[[["self"],["u32"]],["self"]]],[10,R[1237],E,R[1159],11,[[["self"]],["self"]]],[10,"from_be",E,R[1160],11,[[["self"]],["self"]]],[10,"from_le",E,R[1161],11,[[["self"]],["self"]]],[10,"to_be",E,R[1162],11,[[["self"]],["self"]]],[10,"to_le",E,R[1163],11,[[["self"]],["self"]]],[10,"pow",E,R[1164],11,[[["self"],["u32"]],["self"]]],[0,"ops",R[1124],E,N,N],[0,"checked",R[1177],E,N,N],[8,R[240],"num::traits::ops::checked",R[1165],N,N],[10,R[1166],E,R[1167],7,[[["self"],["self"]],[R[42]]]],[8,R[241],E,R[1168],N,N],[10,R[1169],E,R[1170],8,[[["self"],["self"]],[R[42]]]],[8,R[242],E,R[1171],N,N],[10,R[1172],E,R[1173],9,[[["self"],["self"]],[R[42]]]],[8,R[243],E,R[1174],N,N],[10,R[1175],E,R[1176],10,[[["self"],["self"]],[R[42]]]],[8,R[244],E,R[1238],N,N],[10,R[1239],E,R[1240],22,[[["self"],["self"]],[R[42]]]],[8,R[245],E,R[1241],N,N],[10,R[1242],E,R[1243],23,[[["self"]],[R[42]]]],[8,R[246],E,R[1244],N,N],[10,R[1245],E,R[1246],24,[[["self"],["u32"]],[R[42]]]],[8,R[247],E,R[1247],N,N],[10,R[1248],E,R[1249],25,[[["self"],["u32"]],[R[42]]]],[0,"inv",R[1177],E,N,N],[8,"Inv","num::traits::ops::inv",R[1250],N,N],[16,"Output",E,R[199],26,N],[10,"inv",E,R[1251],26,N],[0,"mul_add",R[1177],E,N,N],[8,"MulAdd","num::traits::ops::mul_add",R[197],N,N],[16,"Output",E,R[1252],27,N],[10,"mul_add",E,R[198],27,N],[8,R[248],E,R[1253],N,N],[10,R[1254],E,R[198],28,N],[0,"saturating",R[1177],E,N,N],[8,R[249],"num::traits::ops::saturating",R[1178],N,N],[10,R[1179],E,R[1180],6,[[["self"],["self"]],["self"]]],[10,R[1181],E,R[1182],6,[[["self"],["self"]],["self"]]],[0,"wrapping",R[1177],E,N,N],[8,R[250],"num::traits::ops::wrapping",R[1255],N,N],[10,R[1256],E,R[1257],29,[[["self"],["self"]],["self"]]],[8,R[251],E,R[1258],N,N],[10,R[1259],E,R[1260],30,[[["self"],["self"]],["self"]]],[8,R[252],E,R[1261],N,N],[10,R[1262],E,R[1263],31,[[["self"],["self"]],["self"]]],[8,R[253],E,R[1264],N,N],[10,R[1265],E,R[1266],32,[[["self"],["u32"]],["self"]]],[8,R[254],E,R[1267],N,N],[10,R[1268],E,R[1269],33,[[["self"],["u32"]],["self"]]],[0,"pow",R[1124],E,N,N],[8,"Pow","num::traits::pow",R[1183],N,N],[16,"Output",E,R[199],17,N],[10,"pow",E,R[1184],17,N],[5,"pow",E,R[1091],N,[[[T],[R[9]]],[T]]],[5,R[1092],E,R[1093],N,[[[T],[R[9]]],[R[42]]]],[0,"real",R[1124],E,N,N],[8,"Real","num::traits::real",R[1270],N,N],[10,R[163],E,R[167],34,[[],["self"]]],[10,R[168],E,R[169],34,[[],["self"]]],[10,"epsilon",E,R[170],34,[[],["self"]]],[10,R[164],E,R[171],34,[[],["self"]]],[10,"floor",E,R[178],34,[[["self"]],["self"]]],[10,"ceil",E,R[179],34,[[["self"]],["self"]]],[10,"round",E,R[180],34,[[["self"]],["self"]]],[10,"trunc",E,R[181],34,[[["self"]],["self"]]],[10,"fract",E,R[182],34,[[["self"]],["self"]]],[10,"abs",E,R[183],34,[[["self"]],["self"]]],[10,"signum",E,R[184],34,[[["self"]],["self"]]],[10,R[185],E,R[200],34,[[["self"]],["bool"]]],[10,R[186],E,R[201],34,[[["self"]],["bool"]]],[10,"mul_add",E,R[197],34,[[["self"],["self"],["self"]],["self"]]],[10,"recip",E,R[202],34,[[["self"]],["self"]]],[10,"powi",E,R[187],34,[[["self"],["i32"]],["self"]]],[10,"powf",E,R[1271],34,[[["self"],["self"]],["self"]]],[10,"sqrt",E,R[203],34,[[["self"]],["self"]]],[10,"exp",E,R[204],34,[[["self"]],["self"]]],[10,"exp2",E,R[205],34,[[["self"]],["self"]]],[10,"ln",E,R[206],34,[[["self"]],["self"]]],[10,"log",E,R[207],34,[[["self"],["self"]],["self"]]],[10,"log2",E,R[208],34,[[["self"]],["self"]]],[10,"log10",E,R[209],34,[[["self"]],["self"]]],[10,R[188],E,R[210],34,[[["self"]],["self"]]],[10,R[189],E,R[211],34,[[["self"]],["self"]]],[10,"max",E,R[190],34,[[["self"],["self"]],["self"]]],[10,"min",E,R[191],34,[[["self"],["self"]],["self"]]],[10,"abs_sub",E,R[212],34,[[["self"],["self"]],["self"]]],[10,"cbrt",E,R[213],34,[[["self"]],["self"]]],[10,"hypot",E,R[214],34,[[["self"],["self"]],["self"]]],[10,"sin",E,R[215],34,[[["self"]],["self"]]],[10,"cos",E,R[216],34,[[["self"]],["self"]]],[10,"tan",E,R[217],34,[[["self"]],["self"]]],[10,"asin",E,R[218],34,[[["self"]],["self"]]],[10,"acos",E,R[219],34,[[["self"]],["self"]]],[10,"atan",E,R[220],34,[[["self"]],["self"]]],[10,"atan2",E,R[221],34,[[["self"],["self"]],["self"]]],[10,"sin_cos",E,R[222],34,N],[10,"exp_m1",E,R[223],34,[[["self"]],["self"]]],[10,"ln_1p",E,R[224],34,[[["self"]],["self"]]],[10,"sinh",E,R[225],34,[[["self"]],["self"]]],[10,"cosh",E,R[226],34,[[["self"]],["self"]]],[10,"tanh",E,R[227],34,[[["self"]],["self"]]],[10,"asinh",E,R[228],34,[[["self"]],["self"]]],[10,"acosh",E,R[229],34,[[["self"]],["self"]]],[10,"atanh",E,R[230],34,[[["self"]],["self"]]],[0,"sign",R[1124],E,N,N],[8,"Signed","num::traits::sign",R[1185],N,N],[10,"abs",E,R[231],4,[[["self"]],["self"]]],[10,"abs_sub",E,R[212],4,[[["self"],["self"]],["self"]]],[10,"signum",E,R[232],4,[[["self"]],["self"]]],[10,R[1186],E,R[1187],4,[[["self"]],["bool"]]],[10,R[1188],E,R[1189],4,[[["self"]],["bool"]]],[5,"abs",E,R[231],N,[[[T]],[T]]],[5,"abs_sub",E,R[212],N,[[[T],[T]],[T]]],[5,"signum",E,R[232],N,[[[T]],[T]]],[8,"Unsigned",E,R[1190],N,N],[8,"Num",R[1124],R[1191],N,N],[16,R[1192],E,E,1,N],[10,R[1193],E,R[1194],1,[[["str"],["u32"]],[R[14]]]],[8,"NumOps",E,R[1272],N,N],[8,"NumRef",E,R[1273],N,N],[8,"RefNum",E,R[1274],N,N],[8,R[1275],E,R[1276],N,N],[8,"NumAssign",E,R[1277],N,N],[8,R[1278],E,R[1279],N,N],[4,R[234],E,E,N,N],[13,"Empty",E,E,35,N],[13,"Invalid",E,E,35,N],[3,R[233],E,E,N,N],[12,"kind",E,E,36,N],[5,"clamp",E,R[1195],N,[[[T],[T],[T]],[T]]],[11,"into",R[1196],E,18,[[["self"]],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,N],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[14]]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[47]]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[R[14]]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[41],E,E,37,[[["self"]],["i"]]],[11,R[11],E,E,37,[[[U]],[R[14]]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[["self"]],[R[47]]]],[11,R[12],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[R[14]]]],[11,"into","num::iter",E,38,[[["self"]],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,N],[11,"from",E,E,38,[[[T]],[T]]],[11,R[41],E,E,38,[[["self"]],["i"]]],[11,R[11],E,E,38,[[[U]],[R[14]]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[["self"]],[R[47]]]],[11,R[12],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[R[14]]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,N],[11,"from",E,E,39,[[[T]],[T]]],[11,R[41],E,E,39,[[["self"]],["i"]]],[11,R[11],E,E,39,[[[U]],[R[14]]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[["self"]],[R[47]]]],[11,R[12],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[R[14]]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,N],[11,"from",E,E,40,[[[T]],[T]]],[11,R[41],E,E,40,[[["self"]],["i"]]],[11,R[11],E,E,40,[[[U]],[R[14]]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[["self"]],[R[47]]]],[11,R[12],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[R[14]]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,N],[11,"from",E,E,41,[[[T]],[T]]],[11,R[41],E,E,41,[[["self"]],["i"]]],[11,R[11],E,E,41,[[[U]],[R[14]]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[["self"]],[R[47]]]],[11,R[12],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[R[14]]]],[11,"into",R[1124],E,35,[[["self"]],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[14]]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[47]]]],[11,R[12],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[R[14]]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[110],E,E,36,[[["self"]],["string"]]],[11,R[11],E,E,36,[[[U]],[R[14]]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[47]]]],[11,R[12],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[R[14]]]],[11,"fmt",E,E,35,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,36,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,36,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"eq",R[1196],E,18,[[["self"],[R[288]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[288]]],["bool"]]],[11,"fmt",E,E,18,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"next",E,E,37,[[["self"]],[R[42]]]],[11,"clone",E,E,18,[[["self"]],[R[288]]]],[11,R[986],"num::iter",E,39,[[["self"]],[R[42]]]],[11,R[986],E,E,38,[[["self"]],[R[42]]]],[11,"next",E,E,41,[[["self"]],[R[42]]]],[11,"next",E,E,40,[[["self"]],[R[42]]]],[11,"next",E,E,38,[[["self"]],[R[42]]]],[11,R[985],E,E,38,N],[11,"next",E,E,39,[[["self"]],[R[42]]]],[11,R[985],E,E,39,N],[11,"clone",E,E,41,[[["self"]],[R[989]]]],[11,"clone",E,E,40,[[["self"]],[R[988]]]],[11,"clone",E,E,39,[[["self"]],[R[987]]]],[11,"clone",E,E,38,[[["self"]],["range"]]],[11,"new",R[1196],R[1294],37,[[[T]],[R[1295]]]]],"p":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,R[249]],[8,R[240]],[8,R[241]],[8,R[242]],[8,R[243]],[8,"PrimInt"],[8,"Float"],[8,R[235]],[8,R[236]],[8,"NumCast"],[8,R[237]],[8,"Pow"],[3,R[289]],[8,"Roots"],[8,R[238]],[8,R[239]],[8,R[244]],[8,R[245]],[8,R[246]],[8,R[247]],[8,"Inv"],[8,"MulAdd"],[8,R[248]],[8,R[250]],[8,R[251]],[8,R[252]],[8,R[253]],[8,R[254]],[8,"Real"],[4,R[234]],[3,R[233]],[3,R[290]],[3,"Range"],[3,R[990]],[3,R[991]],[3,R[992]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter",R[1197],N,N],[3,R[990],E,R[1198],N,N],[3,R[991],E,R[1199],N,N],[3,R[992],E,R[1200],N,N],[5,"range",E,R[1115],N,[[["a"],["a"]],["range"]]],[5,R[1116],E,R[1117],N,[[["a"],["a"]],[R[987]]]],[5,R[1201],E,R[1118],N,[[["a"],["a"],["a"]],[R[988]]]],[5,R[1119],E,R[1120],N,[[["a"],["a"],["a"]],[R[989]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[41],E,E,0,[[["self"]],["i"]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[41],E,E,1,[[["self"]],["i"]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[41],E,E,2,[[["self"]],["i"]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[41],E,E,3,[[["self"]],["i"]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,"next",E,E,0,[[["self"]],[R[42]]]],[11,R[985],E,E,0,N],[11,"next",E,E,1,[[["self"]],[R[42]]]],[11,R[985],E,E,1,N],[11,"next",E,E,2,[[["self"]],[R[42]]]],[11,"next",E,E,3,[[["self"]],[R[42]]]],[11,R[986],E,E,0,[[["self"]],[R[42]]]],[11,R[986],E,E,1,[[["self"]],[R[42]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[987]]]],[11,"clone",E,E,2,[[["self"]],[R[988]]]],[11,"clone",E,E,3,[[["self"]],[R[989]]]]],"p":[[3,"Range"],[3,R[990]],[3,R[991]],[3,R[992]]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,R[97],"rand",R[98],N,N],[10,R[19],E,R[99],0,[[["self"]],["u32"]]],[10,R[20],E,R[100],0,[[["self"]],["u64"]]],[10,R[21],E,R[101],0,N],[10,R[22],E,R[102],0,N],[8,R[103],E,R[104],N,N],[8,R[34],E,R[105],N,N],[16,"Seed",E,R[106],1,N],[10,R[23],E,R[107],1,N],[11,R[24],E,R[108],1,[[["u64"]],["self"]]],[11,R[25],E,R[109],1,[[["r"]],[R[14],["error"]]]],[4,R[30],E,R[54],N,N],[13,R[55],E,R[56],2,N],[13,R[57],E,R[58],2,N],[13,R[59],E,R[60],2,N],[13,R[61],E,R[62],2,N],[3,"Error",E,R[51],N,N],[12,"kind",E,R[52],3,N],[12,"msg",E,R[53],3,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions.",N,N],[3,R[1030],R[997],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[994],N,N],[3,R[1031],E,R[993],N,N],[3,"Open01",E,R[993],N,N],[3,"Bernoulli",E,"The Bernoulli distribution.",N,N],[3,R[1021],E,"A distribution using weighted sampling to pick a…",N,N],[3,R[1022],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle",E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared",E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal",E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[1032],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet",E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular",E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",4,N],[12,"item",E,"The actual item which is being weighted",4,N],[3,R[1024],E,"A distribution that selects from a finite collection of…",N,N],[4,R[1017],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided iterator contained no items.",5,N],[13,"NegativeWeight",E,"A weight lower than zero was used.",5,N],[13,"AllWeightsZero",E,"All items in the provided iterator had a weight of zero.",5,N],[0,"uniform",E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[1006],R[994],N,N],[3,"UniformInt",E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[1033],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[1034],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[1018],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",6,N],[8,R[1019],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",7,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,R[995],E,"Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample",E,"Sample a value.",7,N],[11,R[1012],E,"Sample a single value uniformly from a range with…",7,N],[8,R[1020],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[46],E,"Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new",E,R[996],9,[[["b1"],["b2"]],["uniform"]]],[11,R[995],E,R[996],9,[[["b1"],["b2"]],["uniform"]]],[11,"new",R[997],"Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],[R[998]]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",10,[[["u32"],["u32"]],[R[998]]]],[11,"new",E,"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[R[14],[R[1014],R[1001]]]]],[11,"new",E,"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[1015]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"],["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"],["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"],["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"],["f64"]],["lognormal"]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"],["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["u64"],["f64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["v"]],[R[999]]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],[R[9]]],[R[999]]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"],["f64"],["f64"]],["triangular"]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"],["f64"]],["weibull"]]],[8,R[1023],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[1000],E,"Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new",E,"Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng",E,"Pseudo-random number generators.",N,N],[0,"rngs",E,"Random number generators and adapters for common usage:",N,N],[3,R[280],R[1007],R[1040],N,N],[4,R[279],E,R[1041],N,N],[13,"NoTimer",E,R[1042],31,N],[13,R[1043],E,R[1044],31,N],[13,R[1045],E,R[1046],31,N],[13,R[1047],E,R[1048],31,N],[13,R[1049],E,R[1050],31,N],[3,"OsRng",E,R[1038],N,N],[3,"EntropyRng",E,"An interface returning random data from external…",N,N],[3,"SmallRng",E,"An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng",E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[1009],"An RNG that reads random bytes straight from any type…",N,N],[3,R[1025],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",33,[[["self"]],[R[14],["error"]]]],[11,"new",R[1007],"Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[1010],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"],["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,R[1035],R[1013],"Iterator over multiple choices, as returned by…",N,N],[5,R[1000],E,"Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],[R[9]]],[R[14],["vec","vec"]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index",E,"Index sampling",N,N],[4,"IndexVec",R[1011],"A vector of indices.",N,N],[4,R[1036],E,"Return type of `IndexVec::iter`.",N,N],[4,R[1037],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],[R[9]],[R[9]]],["indexvec"]]],[11,"len",E,"Returns the number of indices",36,[[["self"]],[R[9]]]],[11,"index",E,"Return the value at the given `index`.",36,[[["self"],[R[9]]],[R[9]]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",36,[[["self"]],["vec",[R[9]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,R[41],E,"Convert into an iterator over the indices as a sequence of…",36,[[["self"]],[R[1016]]]],[8,R[1026],R[1013],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",37,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],[R[42]]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],[R[42]]]],[10,R[1002],E,"Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],[R[9]]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[R[14],[R[1001]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[R[14],[R[1001]]]]],[10,"shuffle",E,R[1005],37,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",37,N],[8,R[1027],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator. If you…",38,[[["self"],["r"]],[R[42]]]],[11,"choose_multiple_fill",E,R[1003],38,N],[11,R[1002],E,R[1003],38,[[["self"],["r"],[R[9]]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",39,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],[T]]],[11,"sample",E,"Sample a new value, using the given distribution.",39,[[["self"],["d"]],[T]]],[11,R[1000],E,"Create an iterator that generates values using the given…",39,[[["self"],["d"]],["distiter"]]],[11,"fill",E,R[1004],39,[[["self"],[T]]]],[11,"try_fill",E,R[1004],39,[[["self"],[T]],[R[14],["error"]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",39,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose",E,"Return a random element from `values`.",39,N],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",39,N],[11,"shuffle",E,R[1005],39,N],[8,R[1028],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",40,N],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,R[1029],E,"A convenience extension to [`SeedableRng`] allowing…",N,N],[10,R[1008],E,"Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[110],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",R[997],E,42,[[["self"]],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[[U]],[R[14]]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[47]]]],[11,R[12],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[R[14]]]],[11,"into",R[1006],E,9,[[["self"]],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,N],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[14]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[47]]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[R[14]]]],[11,"into",R[997],E,43,[[["self"]],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,N],[11,"from",E,E,43,[[[T]],[T]]],[11,R[11],E,E,43,[[[U]],[R[14]]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[47]]]],[11,R[12],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[R[14]]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,N],[11,"from",E,E,44,[[[T]],[T]]],[11,R[11],E,E,44,[[[U]],[R[14]]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[47]]]],[11,R[12],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[R[14]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[14]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[47]]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[R[14]]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,N],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[14]]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[47]]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[R[14]]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,N],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[14]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[47]]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[R[14]]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,N],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[14]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[47]]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[R[14]]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,N],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[[U]],[R[14]]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[47]]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[R[14]]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,N],[11,"from",E,E,15,[[[T]],[T]]],[11,R[11],E,E,15,[[[U]],[R[14]]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[47]]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[R[14]]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,N],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[14]]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[47]]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[R[14]]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,N],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[14]]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[47]]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[R[14]]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,N],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[14]]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[47]]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[R[14]]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,N],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[14]]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[47]]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[R[14]]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,N],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[14]]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[47]]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[R[14]]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,N],[11,"from",E,E,45,[[[T]],[T]]],[11,R[11],E,E,45,[[[U]],[R[14]]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[47]]]],[11,R[12],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[R[14]]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,N],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[14]]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[47]]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[R[14]]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,N],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[[U]],[R[14]]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[47]]]],[11,R[12],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[R[14]]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,N],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[14]]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[47]]]],[11,R[12],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[R[14]]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,N],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[14]]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[47]]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[R[14]]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,N],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[14]]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[47]]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[R[14]]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,N],[11,"from",E,E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[14]]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[47]]]],[11,R[12],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[R[14]]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,N],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[14]]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[47]]]],[11,R[12],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[R[14]]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,N],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[14]]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[47]]]],[11,R[12],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[R[14]]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,N],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[14]]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[47]]]],[11,R[12],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[R[14]]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[41],E,E,47,[[["self"]],["i"]]],[11,R[11],E,E,47,[[[U]],[R[14]]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[47]]]],[11,R[12],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[R[14]]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,N],[11,"from",E,E,48,[[[T]],[T]]],[11,R[11],E,E,48,[[[U]],[R[14]]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[47]]]],[11,R[12],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[R[14]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,N],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[47]]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[14]]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[14]]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[47]]]],[11,R[12],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[R[14]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,N],[11,"from",E,E,5,[[[T]],[T]]],[11,R[110],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[14]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[47]]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[R[14]]]],[11,"into",R[1006],E,49,[[["self"]],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,N],[11,"from",E,E,49,[[[T]],[T]]],[11,R[11],E,E,49,[[[U]],[R[14]]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[R[47]]]],[11,R[12],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[R[14]]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,N],[11,"from",E,E,50,[[[T]],[T]]],[11,R[11],E,E,50,[[[U]],[R[14]]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[R[47]]]],[11,R[12],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[R[14]]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,N],[11,"from",E,E,51,[[[T]],[T]]],[11,R[11],E,E,51,[[[U]],[R[14]]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[R[47]]]],[11,R[12],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[R[14]]]],[11,"into",R[1007],E,52,[[["self"]],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,N],[11,"from",E,E,52,[[[T]],[T]]],[11,R[11],E,E,52,[[[U]],[R[14]]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[R[47]]]],[11,R[12],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[R[14]]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,N],[11,"from",E,E,31,[[[T]],[T]]],[11,R[110],E,E,31,[[["self"]],["string"]]],[11,R[11],E,E,31,[[[U]],[R[14]]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[47]]]],[11,R[12],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[R[14]]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,N],[11,"from",E,E,53,[[[T]],[T]]],[11,R[11],E,E,53,[[[U]],[R[14]]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[47]]]],[11,R[12],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[R[14]]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[11],E,E,34,[[[U]],[R[14]]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[47]]]],[11,R[12],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[R[14]]]],[11,R[1008],E,E,54,[[],["r"]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,N],[11,"from",E,E,54,[[[T]],[T]]],[11,R[11],E,E,54,[[[U]],[R[14]]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[47]]]],[11,R[12],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[R[14]]]],[11,R[1008],E,E,55,[[],["r"]]],[11,"into",E,E,55,[[["self"]],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,N],[11,"from",E,E,55,[[[T]],[T]]],[11,R[11],E,E,55,[[[U]],[R[14]]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[47]]]],[11,R[12],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[R[14]]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[17],E,E,56,N],[11,"from",E,E,56,[[[T]],[T]]],[11,R[11],E,E,56,[[[U]],[R[14]]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[47]]]],[11,R[12],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[R[14]]]],[11,"into",R[1009],E,32,[[["self"]],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[11],E,E,32,[[[U]],[R[14]]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[47]]]],[11,R[12],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[R[14]]]],[11,"into",E,E,33,[[["self"]],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,N],[11,"from",E,E,33,[[[T]],[T]]],[11,R[11],E,E,33,[[[U]],[R[14]]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[47]]]],[11,R[12],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[R[14]]]],[11,"into",R[1010],E,35,[[["self"]],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,N],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[14]]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[47]]]],[11,R[12],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[R[14]]]],[11,"into",R[1013],E,57,[[["self"]],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[41],E,E,57,[[["self"]],["i"]]],[11,R[11],E,E,57,[[[U]],[R[14]]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[47]]]],[11,R[12],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[R[14]]]],[11,"into",R[1011],E,36,[[["self"]],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,N],[11,"from",E,E,36,[[[T]],[T]]],[11,R[11],E,E,36,[[[U]],[R[14]]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[47]]]],[11,R[12],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[R[14]]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[41],E,E,58,[[["self"]],["i"]]],[11,R[11],E,E,58,[[[U]],[R[14]]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[["self"]],[R[47]]]],[11,R[12],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[R[14]]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,R[16],E,E,59,[[["self"]],[T]]],[11,R[17],E,E,59,N],[11,"from",E,E,59,[[[T]],[T]]],[11,R[41],E,E,59,[[["self"]],["i"]]],[11,R[11],E,E,59,[[[U]],[R[14]]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[["self"]],[R[47]]]],[11,R[12],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[R[14]]]],[11,"eq",R[1007],E,31,[[["self"],[R[277]]],["bool"]]],[11,"fmt",E,E,52,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[28]]],[R[14],["error"]]]],[11,R[19],E,E,52,[[["self"]],["u32"]]],[11,R[20],E,E,52,[[["self"]],["u64"]]],[11,R[21],E,E,52,N],[11,R[22],E,E,52,N],[11,R[29],E,E,31,[[["self"]],["str"]]],[11,"from","rand",E,3,[[[R[277]]],["error"]]],[11,"fmt",R[1007],E,31,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"clone",E,E,31,[[["self"]],[R[277]]]],[11,"clone",E,E,52,[[["self"]],[R[278]]]],[11,"fmt","rand",E,3,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"read",E,E,0,N],[11,"eq",E,E,2,[[["self"],[R[1]]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"clone",E,E,2,[[["self"]],[R[1]]]],[11,R[29],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[R[42],["error"]]]],[11,"fmt",R[1007],E,53,[[["self"],[R[28]]],[R[14],["error"]]]],[11,R[19],E,E,53,[[["self"]],["u32"]]],[11,R[20],E,E,53,[[["self"]],["u64"]]],[11,R[21],E,E,53,N],[11,R[22],E,E,53,N],[11,"clone",E,E,53,[[["self"]],["osrng"]]],[11,"new",R[1006],E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[1012],E,E,49,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[1012],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[1012],E,E,50,N],[11,"new",E,E,51,[[["b1"],["b2"]],["self"]]],[11,R[995],E,E,51,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,51,[[["self"],["r"]],["duration"]]],[11,"sample",E,E,9,[[["self"],["r"]],["x"]]],[11,"sample",R[997],E,10,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,11,[[["self"],["r"]],[R[9]]]],[11,"sample",E,E,12,N],[11,"sample",E,E,13,N],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,45,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,48,[[["self"],["r"]],[R[9]]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["char"]]],[11,"sample",E,E,42,[[["self"],["r"]],["char"]]],[11,"sample",E,E,48,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,[[["self"],["r"]],[R[42]]]],[11,"sample",E,E,48,[[["self"],["r"]],["wrapping"]]],[11,"sample",E,E,30,[[["self"],["r"]],[T]]],[11,"next",E,E,47,[[["self"]],[R[42]]]],[11,R[985],E,E,47,N],[11,"next",R[1011],E,58,[[["self"]],[R[42],[R[9]]]]],[11,R[985],E,E,58,N],[11,"next",E,E,59,[[["self"]],[R[42]]]],[11,R[985],E,E,59,N],[11,"next",R[1013],E,57,[[["self"]],[R[42]]]],[11,R[985],E,E,57,N],[11,"len",E,E,57,[[["self"]],[R[9]]]],[11,"default",R[1007],E,34,[[],["self"]]],[11,"default",E,E,56,[[],["threadrng"]]],[11,"eq",R[997],E,5,[[["self"],[R[1001]]],["bool"]]],[11,"eq",R[1011],E,36,[[["self"],["indexvec"]],["bool"]]],[11,"from",R[1006],E,9,[[["range"]],["uniform"]]],[11,"from",E,E,9,[[[R[987]]],["uniform"]]],[11,"from",R[1011],E,36,[[["vec",["u32"]]],["self"]]],[11,"from",E,E,36,[[["vec",[R[9]]]],["self"]]],[11,"clone",R[1006],E,9,[[["self"]],["uniform"]]],[11,"clone",E,E,49,[[["self"]],["uniformint"]]],[11,"clone",E,E,50,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,51,[[["self"]],["uniformduration"]]],[11,"clone",R[997],E,10,[[["self"]],[R[998]]]],[11,"clone",E,E,11,[[["self"]],[R[1014]]]],[11,"clone",E,E,5,[[["self"]],[R[1001]]]],[11,"clone",E,E,12,[[["self"]],[R[1015]]]],[11,"clone",E,E,13,[[["self"]],["unitcircle"]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],["chisquared"]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,45,[[["self"]],["standardnormal"]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],["lognormal"]]],[11,"clone",E,E,46,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],[R[999]]]],[11,"clone",E,E,27,[[["self"]],["triangular"]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,43,[[["self"]],["openclosed01"]]],[11,"clone",E,E,44,[[["self"]],["open01"]]],[11,"clone",E,E,48,[[["self"]],["standard"]]],[11,"clone",E,E,4,[[["self"]],["weighted"]]],[11,"clone",R[1009],E,33,[[["self"]],["reseedingrng"]]],[11,"clone",R[1010],E,35,[[["self"]],["steprng"]]],[11,"clone",R[1007],E,54,[[["self"]],["smallrng"]]],[11,"clone",E,E,55,[[["self"]],["stdrng"]]],[11,"clone",E,E,56,[[["self"]],["threadrng"]]],[11,"clone",R[1011],E,36,[[["self"]],["indexvec"]]],[11,"clone",E,E,59,[[["self"]],[R[1016]]]],[11,"fmt",R[997],E,5,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1006],E,9,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,49,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,50,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,51,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[997],E,10,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,11,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,5,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,12,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,13,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,14,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,15,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,16,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,17,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,18,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,45,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,19,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,20,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,46,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,21,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,22,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,23,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,24,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,26,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,27,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,28,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,43,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,44,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,42,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,47,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,48,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,4,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,30,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1009],E,32,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,33,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1007],E,34,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1010],E,35,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1007],E,54,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,55,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,56,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1011],E,36,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,58,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,59,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1013],E,57,[[["self"],[R[28]]],[R[14]]]],[11,R[29],R[997],E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[R[42],["error"]]]],[11,R[19],R[1009],E,32,[[["self"]],["u32"]]],[11,R[20],E,E,32,[[["self"]],["u64"]]],[11,R[21],E,E,32,N],[11,R[22],E,E,32,N],[11,R[19],E,E,33,[[["self"]],["u32"]]],[11,R[20],E,E,33,[[["self"]],["u64"]]],[11,R[21],E,E,33,N],[11,R[22],E,E,33,N],[11,R[19],R[1007],E,34,[[["self"]],["u32"]]],[11,R[20],E,E,34,[[["self"]],["u64"]]],[11,R[21],E,E,34,N],[11,R[22],E,E,34,N],[11,R[19],R[1010],E,35,[[["self"]],["u32"]]],[11,R[20],E,E,35,[[["self"]],["u64"]]],[11,R[21],E,E,35,N],[11,R[22],E,E,35,N],[11,R[19],R[1007],E,54,[[["self"]],["u32"]]],[11,R[20],E,E,54,[[["self"]],["u64"]]],[11,R[21],E,E,54,N],[11,R[22],E,E,54,N],[11,R[19],E,E,55,[[["self"]],["u32"]]],[11,R[20],E,E,55,[[["self"]],["u64"]]],[11,R[21],E,E,55,N],[11,R[22],E,E,55,N],[11,R[19],E,E,56,[[["self"]],["u32"]]],[11,R[20],E,E,56,[[["self"]],["u64"]]],[11,R[21],E,E,56,N],[11,R[22],E,E,56,N],[11,R[23],E,E,54,N],[11,R[25],E,E,54,[[["r"]],[R[14],["error"]]]],[11,R[23],E,E,55,N],[11,R[25],E,E,55,[[["r"]],[R[14],["error"]]]],[11,R[63],"rand",R[64],2,[[["self"]],["bool"]]],[11,R[65],E,R[66],2,[[["self"]],["bool"]]],[11,R[29],E,R[67],2,[[["self"]],["str"]]],[11,"new",E,R[68],3,[[[R[1]],["str"]],["error"]]],[11,R[69],E,R[70],3,[[[R[1]],["str"],["e"]],["error"]]],[11,R[71],E,R[72],3,[[["self"]],[R[42],["box"]]]],[11,"new",R[1007],R[1051],52,[[],[R[14],[R[278],R[277]]]]],[11,R[1052],E,R[1053],52,N],[11,"set_rounds",E,R[1054],52,N],[11,"test_timer",E,R[1055],52,[[["self"]],[R[14],["u8",R[277]]]]],[11,R[1056],E,R[1057],52,[[["self"],["bool"]],["i64"]]],[11,"new",E,R[1039],53,[[],[R[14],["osrng","error"]]]]],"p":[[8,R[97]],[8,R[34]],[4,R[30]],[3,"Error"],[3,"Weighted"],[4,R[1017]],[8,R[1018]],[8,R[1019]],[8,R[1020]],[3,"Uniform"],[3,"Bernoulli"],[3,R[1021]],[3,R[1022]],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,R[1023]],[3,R[1024]],[4,R[279]],[3,"ReadRng"],[3,R[1025]],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,R[1026]],[8,R[1027]],[8,"Rng"],[8,R[1028]],[8,R[1029]],[3,R[1030]],[3,R[1031]],[3,"Open01"],[3,R[1032]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,R[1033]],[3,R[1034]],[3,R[280]],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,R[1035]],[4,R[1036]],[4,R[1037]]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,"Hc128Rng","rand_hc",R[264],N,N],[3,R[263],E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[23],E,E,0,N],[11,R[25],E,E,0,[[["r"]],[R[14],["error"]]]],[11,R[23],E,"Create an HC-128 random number generator with a seed. The…",1,N],[11,R[77],E,E,1,N],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N]],"p":[[3,"Hc128Rng"],[3,R[263]]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os",R[1038],N,N],[11,"new",E,R[1039],0,[[],[R[14],["osrng","error"]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N]],"p":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","i":[[3,R[255],"rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[256],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[23],E,E,0,N],[11,R[23],E,E,1,N],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,N],[11,R[22],E,E,1,N]],"p":[[3,R[255]],[3,R[256]]]};
searchIndex["sdl2"]={"doc":"Getting started","i":[[3,"Sdl","sdl2","The SDL context type. Initialize with `sdl2::init()`.",N,N],[3,R[1620],E,E,N,N],[3,R[1587],E,E,N,N],[3,R[1589],E,E,N,N],[3,R[1584],E,E,N,N],[3,R[1579],E,E,N,N],[3,R[1608],E,E,N,N],[3,R[1582],E,E,N,N],[3,"EventPump",E,"A thread-safe type that encapsulates SDL event-pumping…",N,N],[4,"Error",E,E,N,N],[13,"NoMemError",E,E,0,N],[13,"ReadError",E,E,0,N],[13,"WriteError",E,E,0,N],[13,"SeekError",E,E,0,N],[13,"UnsupportedError",E,E,0,N],[4,R[1578],E,"A given integer was so big that its representation as a C…",N,N],[13,"IntegerOverflows",E,E,1,N],[13,R[1437],E,E,1,N],[5,"get_platform",E,"Get platform name",N,[[],["str"]]],[5,"init",E,"Initializes the SDL library. This must be called before…",N,[[],[R[14],["sdl","string"]]]],[5,"get_error",E,E,N,[[],["string"]]],[5,"set_error",E,E,N,[[["str"]],[R[14],["nulerror"]]]],[5,"set_error_from_code",E,E,N,[[["error"]]]],[5,"clear_error",E,E,N,[[]]],[0,"clipboard",E,E,N,N],[3,R[1580],R[1296],"Clipboard utility functions. Access with…",N,N],[11,"clipboard","sdl2",E,2,[[["self"]],["clipboardutil"]]],[11,"set_clipboard_text",R[1296],E,3,[[["self"],["str"]],[R[14],["string"]]]],[11,"clipboard_text",E,E,3,[[["self"]],[R[14],["string","string"]]]],[11,"has_clipboard_text",E,E,3,[[["self"]],["bool"]]],[0,"cpuinfo","sdl2",E,N,N],[5,"cpu_count","sdl2::cpuinfo",E,N,[[],["i32"]]],[5,"cpu_cache_line_size",E,E,N,[[],["i32"]]],[5,"has_rdtsc",E,E,N,[[],["bool"]]],[5,"has_alti_vec",E,E,N,[[],["bool"]]],[5,"has_mmx",E,E,N,[[],["bool"]]],[5,"has_3d_now",E,E,N,[[],["bool"]]],[5,"has_sse",E,E,N,[[],["bool"]]],[5,"has_sse2",E,E,N,[[],["bool"]]],[5,"has_sse3",E,E,N,[[],["bool"]]],[5,"has_sse41",E,E,N,[[],["bool"]]],[5,"has_sse42",E,E,N,[[],["bool"]]],[5,"has_avx",E,E,N,[[],["bool"]]],[5,"system_ram",E,E,N,[[],["i32"]]],[17,"CACHELINESIZE",E,E,N,N],[0,"macros","sdl2",E,N,N],[0,"event",E,"Event Handling",N,N],[3,R[1641],R[1298],"An iterator that calls `EventPump::poll_event()`.",N,N],[3,R[1642],E,"An iterator that calls `EventPump::wait_event()`.",N,N],[3,R[1643],E,"An iterator that calls `EventPump::wait_event_timeout()`.",N,N],[4,"EventType",E,"Types of events that can be delivered.",N,N],[13,"First",E,E,4,N],[13,"Quit",E,E,4,N],[13,R[1297],E,E,4,N],[13,R[1300],E,E,4,N],[13,R[1301],E,E,4,N],[13,R[1302],E,E,4,N],[13,R[1303],E,E,4,N],[13,R[1304],E,E,4,N],[13,"Window",E,E,4,N],[13,"KeyDown",E,E,4,N],[13,"KeyUp",E,E,4,N],[13,R[1305],E,E,4,N],[13,"TextInput",E,E,4,N],[13,R[1307],E,E,4,N],[13,R[1308],E,E,4,N],[13,R[1309],E,E,4,N],[13,"MouseWheel",E,E,4,N],[13,R[1310],E,E,4,N],[13,R[1311],E,E,4,N],[13,R[1313],E,E,4,N],[13,R[1314],E,E,4,N],[13,R[1315],E,E,4,N],[13,R[1316],E,E,4,N],[13,R[1317],E,E,4,N],[13,R[1318],E,E,4,N],[13,R[1319],E,E,4,N],[13,R[1321],E,E,4,N],[13,R[1322],E,E,4,N],[13,R[1323],E,E,4,N],[13,R[1324],E,E,4,N],[13,"FingerDown",E,E,4,N],[13,"FingerUp",E,E,4,N],[13,R[1325],E,E,4,N],[13,R[1326],E,E,4,N],[13,R[1327],E,E,4,N],[13,R[1329],E,E,4,N],[13,R[1330],E,E,4,N],[13,"DropFile",E,E,4,N],[13,"User",E,E,4,N],[13,"Last",E,E,4,N],[4,R[1581],E,"An enum of window events.",N,N],[13,"None",E,E,5,N],[13,"Shown",E,E,5,N],[13,"Hidden",E,E,5,N],[13,"Exposed",E,E,5,N],[13,"Moved",E,E,5,N],[13,"Resized",E,E,5,N],[13,"SizeChanged",E,E,5,N],[13,"Minimized",E,E,5,N],[13,"Maximized",E,E,5,N],[13,"Restored",E,E,5,N],[13,"Enter",E,E,5,N],[13,"Leave",E,E,5,N],[13,"FocusGained",E,E,5,N],[13,"FocusLost",E,E,5,N],[13,"Close",E,E,5,N],[13,"TakeFocus",E,E,5,N],[13,"HitTest",E,E,5,N],[4,"Event",E,"Different event types.",N,N],[13,"Quit",E,E,6,N],[12,R[294],R[1299],E,6,N],[13,R[1297],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[13,R[1300],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[13,R[1301],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[13,R[1302],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[13,R[1303],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[13,R[1304],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[13,"Window",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"win_event",E,E,6,N],[13,"KeyDown",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"keycode",E,E,6,N],[12,R[1383],E,E,6,N],[12,"keymod",E,E,6,N],[12,"repeat",E,E,6,N],[13,"KeyUp",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"keycode",E,E,6,N],[12,R[1383],E,E,6,N],[12,"keymod",E,E,6,N],[12,"repeat",E,E,6,N],[13,R[1305],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"text",E,E,6,N],[12,"start",E,E,6,N],[12,"length",E,E,6,N],[13,"TextInput",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"text",E,E,6,N],[13,R[1307],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"which",E,E,6,N],[12,R[1387],E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,"xrel",E,E,6,N],[12,"yrel",E,E,6,N],[13,R[1308],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"which",E,E,6,N],[12,"mouse_btn",E,E,6,N],[12,"clicks",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[13,R[1309],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"which",E,E,6,N],[12,"mouse_btn",E,E,6,N],[12,"clicks",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[13,"MouseWheel",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"which",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,R[319],E,E,6,N],[13,R[1310],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1312],6,N],[12,"axis_idx",E,E,6,N],[12,"value",E,E,6,N],[13,R[1311],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1312],6,N],[12,"ball_idx",E,E,6,N],[12,"xrel",E,E,6,N],[12,"yrel",E,E,6,N],[13,R[1313],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1312],6,N],[12,"hat_idx",E,E,6,N],[12,"state",E,E,6,N],[13,R[1314],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1312],6,N],[12,"button_idx",E,E,6,N],[13,R[1315],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1312],6,N],[12,"button_idx",E,E,6,N],[13,R[1316],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,"The newly added joystick's `joystick_index`",6,N],[13,R[1317],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1312],6,N],[13,R[1318],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1320],6,N],[12,"axis",E,E,6,N],[12,"value",E,E,6,N],[13,R[1319],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1320],6,N],[12,"button",E,E,6,N],[13,R[1321],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1320],6,N],[12,"button",E,E,6,N],[13,R[1322],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,"The newly added controller's `joystick_index`",6,N],[13,R[1323],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1320],6,N],[13,R[1324],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"which",E,R[1320],6,N],[13,"FingerDown",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"touch_id",E,E,6,N],[12,"finger_id",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,"dx",E,E,6,N],[12,"dy",E,E,6,N],[12,"pressure",E,E,6,N],[13,"FingerUp",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"touch_id",E,E,6,N],[12,"finger_id",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,"dx",E,E,6,N],[12,"dy",E,E,6,N],[12,"pressure",E,E,6,N],[13,R[1325],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"touch_id",E,E,6,N],[12,"finger_id",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,"dx",E,E,6,N],[12,"dy",E,E,6,N],[12,"pressure",E,E,6,N],[13,R[1326],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"touch_id",E,E,6,N],[12,"gesture_id",E,E,6,N],[12,R[1328],E,E,6,N],[12,"error",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[13,R[1327],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"touch_id",E,E,6,N],[12,"gesture_id",E,E,6,N],[12,R[1328],E,E,6,N],[12,"error",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[13,R[1329],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"touch_id",E,E,6,N],[12,"d_theta",E,E,6,N],[12,"d_dist",E,E,6,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,R[1328],E,E,6,N],[13,R[1330],R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[13,"DropFile",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"filename",E,E,6,N],[13,"User",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,R[1306],E,E,6,N],[12,"type_",E,E,6,N],[12,"code",E,E,6,N],[12,"data1",E,E,6,N],[12,"data2",E,E,6,N],[13,"Unknown",R[1298],E,6,N],[12,R[294],R[1299],E,6,N],[12,"type_",E,E,6,N],[11,"flush_event","sdl2",R[1331],7,[[["self"],[R[1332]]]]],[11,"flush_events",E,R[1331],7,[[["self"],["u32"],["u32"]]]],[11,"peek_events",E,"Reads the events at the front of the event queue, until…",7,[[["self"],["u32"]],["b"]]],[11,"push_event",E,"Pushes an event to the event queue.",7,[[["self"],["event"]],[R[14],["string"]]]],[11,"register_event",E,"Register a custom SDL event.",7,[[["self"]],[R[14],["u32","string"]]]],[11,"register_events",E,"Registers custom SDL events.",7,[[["self"],["u32"]],[R[14],["vec","string"]]]],[11,"register_custom_event",E,"Register a custom event",7,[[["self"]],[R[14],["string"]]]],[11,"push_custom_event",E,"Push a custom event",7,[[["self"],[T]],[R[14],["string"]]]],[11,"unwrap_keymod",R[1298],E,6,[[[R[42],["mod"]]],["mod"]]],[11,"is_user_event",E,E,6,[[["self"]],["bool"]]],[11,"as_user_event_type",E,E,6,[[["self"]],[R[42]]]],[11,"is_event_enabled","sdl2","Query if an event type is enabled.",8,[[["self"],[R[1332]]],["bool"]]],[11,"enable_event",E,"Enable an event type. Returns if the event type was…",8,[[["self"],[R[1332]]],["bool"]]],[11,"disable_event",E,"Disable an event type. Returns if the event type was…",8,[[["self"],[R[1332]]],["bool"]]],[11,"poll_event",E,"Polls for currently pending events.",8,[[["self"]],[R[42],["event"]]]],[11,"poll_iter",E,"Returns a polling iterator that calls `poll_event()`. The…",8,[[["self"]],["eventpolliterator"]]],[11,"pump_events",E,R[1657],8,[[["self"]]]],[11,"wait_event",E,"Waits indefinitely for the next available event.",8,[[["self"]],["event"]]],[11,"wait_event_timeout",E,"Waits until the specified timeout (in milliseconds) for…",8,[[["self"],["u32"]],[R[42],["event"]]]],[11,"wait_iter",E,"Returns a waiting iterator that calls `wait_event()`.",8,[[["self"]],["eventwaititerator"]]],[11,"wait_timeout_iter",E,"Returns a waiting iterator that calls…",8,[[["self"],["u32"]],["eventwaittimeoutiterator"]]],[11,"keyboard_state",E,E,8,[[["self"]],[R[1382]]]],[11,"mouse_state",E,E,8,[[["self"]],[R[1387]]]],[11,"relative_mouse_state",E,E,8,[[["self"]],[R[1385]]]],[0,"filesystem",E,E,N,N],[4,R[1583],R[1520],E,N,N],[13,"InvalidOrganizationName",E,E,9,N],[13,"InvalidApplicationName",E,E,9,N],[13,R[1437],E,E,9,N],[5,"base_path",E,E,N,[[],[R[14],["string","string"]]]],[5,"pref_path",E,"Return the preferred directory for the application to…",N,[[["str"],["str"]],[R[14],["string","prefpatherror"]]]],[0,"gesture","sdl2",E,N,N],[0,"touch",E,E,N,N],[5,"num_touch_devices","sdl2::touch",E,N,[[],["i32"]]],[5,"touch_device",E,E,N,[[["i32"]],[R[1333]]]],[5,"num_touch_fingers",E,E,N,[[[R[1333]]],["i32"]]],[5,"touch_finger",E,E,N,[[[R[1333]],["i32"]],[R[42],["finger"]]]],[6,"Finger",E,E,N,N],[6,"TouchDevice",E,E,N,N],[0,"joystick","sdl2",E,N,N],[3,"Joystick",R[1335],"Wrapper around the `SDL_Joystick` object",N,N],[3,"Guid",E,"Wrapper around a `SDL_JoystickGUID`, a globally unique…",N,N],[4,"PowerLevel",E,E,N,N],[13,"Unknown",E,E,10,N],[13,"Empty",E,E,10,N],[13,"Low",E,E,10,N],[13,"Medium",E,E,10,N],[13,"Full",E,E,10,N],[13,"Wired",E,E,10,N],[4,"HatState",E,"This is represented in SDL2 as a bitfield but obviously…",N,N],[13,"Centered",E,E,11,N],[13,"Up",E,E,11,N],[13,"Right",E,E,11,N],[13,"Down",E,E,11,N],[13,"Left",E,E,11,N],[13,"RightUp",E,E,11,N],[13,"RightDown",E,E,11,N],[13,"LeftUp",E,E,11,N],[13,"LeftDown",E,E,11,N],[11,R[1337],"sdl2",R[1338],12,[[["self"]],[R[14],["u32","string"]]]],[11,"open",E,R[1347],12,[[["self"],["u32"]],[R[14],["joystick",R[1334]]]]],[11,R[1339],E,"Return the name of the joystick at index `joystick_index`.",12,[[["self"],["u32"]],[R[14],["string",R[1334]]]]],[11,"device_guid",E,"Get the GUID for the joystick at index `joystick_index`",12,[[["self"],["u32"]],[R[14],["guid",R[1334]]]]],[11,R[1340],E,"If state is `true` joystick events are processed,…",12,[[["self"],["bool"]]]],[11,R[1341],E,"Return `true` if joystick events are processed.",12,[[["self"]],["bool"]]],[11,"update",E,"Force joystick update when not using the event loop",12,[[["self"]]]],[11,"from_ll",R[1335],E,10,[[[R[737]]],[R[1545]]]],[11,"to_ll",E,E,10,[[["self"]],[R[737]]]],[11,R[369],E,E,13,[[["self"]],[R[1465]]]],[11,"name",E,"Return the name of the joystick or an empty string if no…",13,[[["self"]],["string"]]],[11,"attached",E,"Return true if the joystick has been opened and currently…",13,[[["self"]],["bool"]]],[11,R[1345],E,E,13,[[["self"]],["i32"]]],[11,"guid",E,"Retrieve the joystick's GUID",13,[[["self"]],["guid"]]],[11,"power_level",E,"Retrieve the battery level of this joystick",13,[[["self"]],[R[14],[R[1545],R[1334]]]]],[11,"num_axes",E,"Retrieve the number of axes for this joystick",13,[[["self"]],["u32"]]],[11,"axis",E,"Gets the position of the given `axis`.",13,[[["self"],["u32"]],[R[14],["i16",R[1334]]]]],[11,"num_buttons",E,"Retrieve the number of buttons for this joystick",13,[[["self"]],["u32"]]],[11,"button",E,"Return `Ok(true)` if `button` is pressed.",13,[[["self"],["u32"]],[R[14],["bool",R[1334]]]]],[11,"num_balls",E,R[1336],13,[[["self"]],["u32"]]],[11,"ball",E,"Return a pair `(dx, dy)` containing the difference in axis…",13,[[["self"],["u32"]],[R[14],[R[1334]]]]],[11,"num_hats",E,R[1336],13,[[["self"]],["u32"]]],[11,"hat",E,"Return the position of `hat` for this joystick",13,[[["self"],["u32"]],[R[14],["hatstate",R[1334]]]]],[11,"set_rumble",E,R[1346],13,[[["self"],["u16"],["u16"],["u32"]],[R[14],[R[1334]]]]],[11,R[1343],E,"Create a GUID from a string representation.",14,[[["str"]],[R[14],["guid","nulerror"]]]],[11,"is_zero",E,"Return `true` if GUID is full 0s",14,[[["self"]],["bool"]]],[11,"string",E,"Return a String representation of GUID",14,[[["self"]],["string"]]],[11,"raw",E,"Return a copy of the internal SDL_JoystickGUID",14,[[["self"]],[R[1672]]]],[11,"from_raw",E,E,11,[[["u8"]],["hatstate"]]],[11,"to_raw",E,E,11,[[["self"]],["u8"]]],[0,"controller","sdl2",E,N,N],[3,R[1588],R[1344],"Wrapper around the `SDL_GameController` object",N,N],[4,R[1585],E,E,N,N],[13,"InvalidMapping",E,E,15,N],[13,"InvalidFilePath",E,E,15,N],[13,"ReadError",E,E,15,N],[13,R[1437],E,E,15,N],[4,"Axis",E,E,N,N],[13,"LeftX",E,E,16,N],[13,"LeftY",E,E,16,N],[13,"RightX",E,E,16,N],[13,"RightY",E,E,16,N],[13,"TriggerLeft",E,E,16,N],[13,"TriggerRight",E,E,16,N],[4,"Button",E,E,N,N],[13,"A",E,E,17,N],[13,"B",E,E,17,N],[13,"X",E,E,17,N],[13,"Y",E,E,17,N],[13,"Back",E,E,17,N],[13,"Guide",E,E,17,N],[13,"Start",E,E,17,N],[13,"LeftStick",E,E,17,N],[13,"RightStick",E,E,17,N],[13,"LeftShoulder",E,E,17,N],[13,"RightShoulder",E,E,17,N],[13,"DPadUp",E,E,17,N],[13,"DPadDown",E,E,17,N],[13,"DPadLeft",E,E,17,N],[13,"DPadRight",E,E,17,N],[4,R[1586],E,"Possible return values for `add_mapping`",N,N],[13,"Added",E,E,18,N],[13,"Updated",E,E,18,N],[11,R[1337],"sdl2",R[1338],19,[[["self"]],[R[14],["u32","string"]]]],[11,"is_game_controller",E,"Return true if the joystick at index `joystick_index` is a…",19,[[["self"],["u32"]],["bool"]]],[11,"open",E,"Attempt to open the controller ad index `joystick_index`…",19,[[["self"],["u32"]],[R[14],["gamecontroller",R[1334]]]]],[11,R[1339],E,"Return the name of the controller at index `joystick_index`.",19,[[["self"],["u32"]],[R[14],["string",R[1334]]]]],[11,R[1340],E,"If state is `true` controller events are processed,…",19,[[["self"],["bool"]]]],[11,R[1341],E,"Return `true` if controller events are processed.",19,[[["self"]],["bool"]]],[11,"add_mapping",E,"Add a new controller input mapping from a mapping string.",19,[[["self"],["str"]],[R[14],[R[1546],R[1342]]]]],[11,"load_mappings",E,"Load controller input mappings from a file.",19,[[["self"],["p"]],[R[14],["i32",R[1342]]]]],[11,"load_mappings_from_read",E,"Load controller input mappings from a `Read` object.",19,[[["self"],["r"]],[R[14],["i32",R[1342]]]]],[11,"load_mappings_from_rw",E,"Load controller input mappings from an SDL [`RWops`] object.",19,[[["self"],["rwops"]],[R[14],["i32",R[1342]]]]],[11,"mapping_for_guid",E,E,19,[[["self"],["guid"]],[R[14],["string","string"]]]],[11,"update",E,"Force controller update when not using the event loop",19,[[["self"]]]],[11,R[1343],R[1344],"Return the Axis from a string description in the same…",16,[[["str"]],[R[42],["axis"]]]],[11,"string",E,"Return a string for a given axis in the same format using…",16,[[["self"]],["string"]]],[11,"from_ll",E,E,16,[[[R[739]]],[R[42],["axis"]]]],[11,"to_ll",E,E,16,[[["self"]],[R[739]]]],[11,R[1343],E,"Return the Button from a string description in the same…",17,[[["str"]],[R[42],["button"]]]],[11,"string",E,"Return a string for a given button in the same format…",17,[[["self"]],["string"]]],[11,"from_ll",E,E,17,[[[R[740]]],[R[42],["button"]]]],[11,"to_ll",E,E,17,[[["self"]],[R[740]]]],[11,R[369],E,E,20,[[["self"]],[R[1467]]]],[11,"name",E,"Return the name of the controller or an empty string if no…",20,[[["self"]],["string"]]],[11,"mapping",E,"Return a String describing the controller's button and…",20,[[["self"]],["string"]]],[11,"attached",E,"Return true if the controller has been opened and…",20,[[["self"]],["bool"]]],[11,R[1345],E,"Return the joystick instance id of this controller",20,[[["self"]],["i32"]]],[11,"axis",E,"Get the position of the given `axis`",20,[[["self"],["axis"]],["i16"]]],[11,"button",E,"Returns `true` if `button` is pressed.",20,[[["self"],["button"]],["bool"]]],[11,"set_rumble",E,R[1346],20,[[["self"],["u16"],["u16"],["u32"]],[R[14],[R[1334]]]]],[0,"haptic","sdl2","Haptic Functions",N,N],[3,"Haptic",R[1348],"Wrapper around the `SDL_Haptic` object",N,N],[11,"open_from_joystick_id","sdl2",R[1347],21,[[["self"],["u32"]],[R[14],["haptic",R[1334]]]]],[11,R[369],R[1348],E,22,[[["self"]],[R[1466]]]],[11,"rumble_play",E,"Run a simple rumble effect on the haptic device.",22,[[["self"],["f32"],["u32"]]]],[11,"rumble_stop",E,"Stop the simple rumble on the haptic device.",22,[[["self"]]]],[0,"keyboard","sdl2",E,N,N],[3,"Mod",R[1384],E,N,N],[3,R[1590],E,E,N,N],[3,R[1644],E,E,N,N],[3,R[1645],E,E,N,N],[3,R[1591],E,"Keyboard utility functions. Access with `Sdl::keyboard()`.",N,N],[3,R[1592],E,"Text input utility functions. Access with…",N,N],[4,"Keycode",E,E,N,N],[13,"Backspace",E,E,23,N],[13,"Tab",E,E,23,N],[13,"Return",E,E,23,N],[13,"Escape",E,E,23,N],[13,"Space",E,E,23,N],[13,"Exclaim",E,E,23,N],[13,"Quotedbl",E,E,23,N],[13,"Hash",E,E,23,N],[13,"Dollar",E,E,23,N],[13,"Percent",E,E,23,N],[13,"Ampersand",E,E,23,N],[13,"Quote",E,E,23,N],[13,"LeftParen",E,E,23,N],[13,"RightParen",E,E,23,N],[13,"Asterisk",E,E,23,N],[13,"Plus",E,E,23,N],[13,"Comma",E,E,23,N],[13,"Minus",E,E,23,N],[13,"Period",E,E,23,N],[13,"Slash",E,E,23,N],[13,"Num0",E,E,23,N],[13,"Num1",E,E,23,N],[13,"Num2",E,E,23,N],[13,"Num3",E,E,23,N],[13,"Num4",E,E,23,N],[13,"Num5",E,E,23,N],[13,"Num6",E,E,23,N],[13,"Num7",E,E,23,N],[13,"Num8",E,E,23,N],[13,"Num9",E,E,23,N],[13,"Colon",E,E,23,N],[13,"Semicolon",E,E,23,N],[13,"Less",E,E,23,N],[13,"Equals",E,E,23,N],[13,"Greater",E,E,23,N],[13,"Question",E,E,23,N],[13,"At",E,E,23,N],[13,R[1349],E,E,23,N],[13,"Backslash",E,E,23,N],[13,R[1350],E,E,23,N],[13,"Caret",E,E,23,N],[13,"Underscore",E,E,23,N],[13,"Backquote",E,E,23,N],[13,"A",E,E,23,N],[13,"B",E,E,23,N],[13,"C",E,E,23,N],[13,"D",E,E,23,N],[13,"E",E,E,23,N],[13,"F",E,E,23,N],[13,"G",E,E,23,N],[13,"H",E,E,23,N],[13,"I",E,E,23,N],[13,"J",E,E,23,N],[13,"K",E,E,23,N],[13,"L",E,E,23,N],[13,"M",E,E,23,N],[13,"N",E,E,23,N],[13,"O",E,E,23,N],[13,"P",E,E,23,N],[13,"Q",E,E,23,N],[13,"R",E,E,23,N],[13,"S",E,E,23,N],[13,"T",E,E,23,N],[13,"U",E,E,23,N],[13,"V",E,E,23,N],[13,"W",E,E,23,N],[13,"X",E,E,23,N],[13,"Y",E,E,23,N],[13,"Z",E,E,23,N],[13,"Delete",E,E,23,N],[13,"CapsLock",E,E,23,N],[13,"F1",E,E,23,N],[13,"F2",E,E,23,N],[13,"F3",E,E,23,N],[13,"F4",E,E,23,N],[13,"F5",E,E,23,N],[13,"F6",E,E,23,N],[13,"F7",E,E,23,N],[13,"F8",E,E,23,N],[13,"F9",E,E,23,N],[13,"F10",E,E,23,N],[13,"F11",E,E,23,N],[13,"F12",E,E,23,N],[13,R[1351],E,E,23,N],[13,"ScrollLock",E,E,23,N],[13,"Pause",E,E,23,N],[13,"Insert",E,E,23,N],[13,"Home",E,E,23,N],[13,"PageUp",E,E,23,N],[13,"End",E,E,23,N],[13,"PageDown",E,E,23,N],[13,"Right",E,E,23,N],[13,"Left",E,E,23,N],[13,"Down",E,E,23,N],[13,"Up",E,E,23,N],[13,R[1352],E,E,23,N],[13,"KpDivide",E,E,23,N],[13,"KpMultiply",E,E,23,N],[13,"KpMinus",E,E,23,N],[13,"KpPlus",E,E,23,N],[13,"KpEnter",E,E,23,N],[13,"Kp1",E,E,23,N],[13,"Kp2",E,E,23,N],[13,"Kp3",E,E,23,N],[13,"Kp4",E,E,23,N],[13,"Kp5",E,E,23,N],[13,"Kp6",E,E,23,N],[13,"Kp7",E,E,23,N],[13,"Kp8",E,E,23,N],[13,"Kp9",E,E,23,N],[13,"Kp0",E,E,23,N],[13,"KpPeriod",E,E,23,N],[13,R[1353],E,E,23,N],[13,"Power",E,E,23,N],[13,"KpEquals",E,E,23,N],[13,"F13",E,E,23,N],[13,"F14",E,E,23,N],[13,"F15",E,E,23,N],[13,"F16",E,E,23,N],[13,"F17",E,E,23,N],[13,"F18",E,E,23,N],[13,"F19",E,E,23,N],[13,"F20",E,E,23,N],[13,"F21",E,E,23,N],[13,"F22",E,E,23,N],[13,"F23",E,E,23,N],[13,"F24",E,E,23,N],[13,"Execute",E,E,23,N],[13,"Help",E,E,23,N],[13,"Menu",E,E,23,N],[13,"Select",E,E,23,N],[13,"Stop",E,E,23,N],[13,"Again",E,E,23,N],[13,"Undo",E,E,23,N],[13,"Cut",E,E,23,N],[13,"Copy",E,E,23,N],[13,"Paste",E,E,23,N],[13,"Find",E,E,23,N],[13,"Mute",E,E,23,N],[13,"VolumeUp",E,E,23,N],[13,"VolumeDown",E,E,23,N],[13,"KpComma",E,E,23,N],[13,R[1354],E,E,23,N],[13,"AltErase",E,E,23,N],[13,"Sysreq",E,E,23,N],[13,"Cancel",E,E,23,N],[13,"Clear",E,E,23,N],[13,"Prior",E,E,23,N],[13,"Return2",E,E,23,N],[13,"Separator",E,E,23,N],[13,"Out",E,E,23,N],[13,"Oper",E,E,23,N],[13,"ClearAgain",E,E,23,N],[13,"CrSel",E,E,23,N],[13,"ExSel",E,E,23,N],[13,"Kp00",E,E,23,N],[13,"Kp000",E,E,23,N],[13,R[1355],E,E,23,N],[13,R[1356],E,E,23,N],[13,R[1357],E,E,23,N],[13,R[1358],E,E,23,N],[13,R[1359],E,E,23,N],[13,R[1360],E,E,23,N],[13,R[1361],E,E,23,N],[13,R[1362],E,E,23,N],[13,"KpTab",E,E,23,N],[13,R[1363],E,E,23,N],[13,"KpA",E,E,23,N],[13,"KpB",E,E,23,N],[13,"KpC",E,E,23,N],[13,"KpD",E,E,23,N],[13,"KpE",E,E,23,N],[13,"KpF",E,E,23,N],[13,"KpXor",E,E,23,N],[13,"KpPower",E,E,23,N],[13,"KpPercent",E,E,23,N],[13,"KpLess",E,E,23,N],[13,"KpGreater",E,E,23,N],[13,R[1364],E,E,23,N],[13,R[1365],E,E,23,N],[13,R[1366],E,E,23,N],[13,R[1367],E,E,23,N],[13,"KpColon",E,E,23,N],[13,"KpHash",E,E,23,N],[13,"KpSpace",E,E,23,N],[13,"KpAt",E,E,23,N],[13,"KpExclam",E,E,23,N],[13,"KpMemStore",E,E,23,N],[13,R[1368],E,E,23,N],[13,"KpMemClear",E,E,23,N],[13,"KpMemAdd",E,E,23,N],[13,R[1369],E,E,23,N],[13,R[1370],E,E,23,N],[13,R[1371],E,E,23,N],[13,R[1372],E,E,23,N],[13,"KpClear",E,E,23,N],[13,R[1373],E,E,23,N],[13,"KpBinary",E,E,23,N],[13,"KpOctal",E,E,23,N],[13,"KpDecimal",E,E,23,N],[13,R[1374],E,E,23,N],[13,"LCtrl",E,E,23,N],[13,"LShift",E,E,23,N],[13,"LAlt",E,E,23,N],[13,"LGui",E,E,23,N],[13,"RCtrl",E,E,23,N],[13,"RShift",E,E,23,N],[13,"RAlt",E,E,23,N],[13,"RGui",E,E,23,N],[13,"Mode",E,E,23,N],[13,"AudioNext",E,E,23,N],[13,"AudioPrev",E,E,23,N],[13,"AudioStop",E,E,23,N],[13,"AudioPlay",E,E,23,N],[13,"AudioMute",E,E,23,N],[13,R[1375],E,E,23,N],[13,"Www",E,E,23,N],[13,"Mail",E,E,23,N],[13,"Calculator",E,E,23,N],[13,"Computer",E,E,23,N],[13,"AcSearch",E,E,23,N],[13,"AcHome",E,E,23,N],[13,"AcBack",E,E,23,N],[13,"AcForward",E,E,23,N],[13,"AcStop",E,E,23,N],[13,"AcRefresh",E,E,23,N],[13,R[1376],E,E,23,N],[13,R[1377],E,E,23,N],[13,R[1378],E,E,23,N],[13,R[1379],E,E,23,N],[13,R[1380],E,E,23,N],[13,R[1381],E,E,23,N],[13,"KbdIllumUp",E,E,23,N],[13,"Eject",E,E,23,N],[13,"Sleep",E,E,23,N],[4,"Scancode",E,E,N,N],[13,"A",E,E,24,N],[13,"B",E,E,24,N],[13,"C",E,E,24,N],[13,"D",E,E,24,N],[13,"E",E,E,24,N],[13,"F",E,E,24,N],[13,"G",E,E,24,N],[13,"H",E,E,24,N],[13,"I",E,E,24,N],[13,"J",E,E,24,N],[13,"K",E,E,24,N],[13,"L",E,E,24,N],[13,"M",E,E,24,N],[13,"N",E,E,24,N],[13,"O",E,E,24,N],[13,"P",E,E,24,N],[13,"Q",E,E,24,N],[13,"R",E,E,24,N],[13,"S",E,E,24,N],[13,"T",E,E,24,N],[13,"U",E,E,24,N],[13,"V",E,E,24,N],[13,"W",E,E,24,N],[13,"X",E,E,24,N],[13,"Y",E,E,24,N],[13,"Z",E,E,24,N],[13,"Num1",E,E,24,N],[13,"Num2",E,E,24,N],[13,"Num3",E,E,24,N],[13,"Num4",E,E,24,N],[13,"Num5",E,E,24,N],[13,"Num6",E,E,24,N],[13,"Num7",E,E,24,N],[13,"Num8",E,E,24,N],[13,"Num9",E,E,24,N],[13,"Num0",E,E,24,N],[13,"Return",E,E,24,N],[13,"Escape",E,E,24,N],[13,"Backspace",E,E,24,N],[13,"Tab",E,E,24,N],[13,"Space",E,E,24,N],[13,"Minus",E,E,24,N],[13,"Equals",E,E,24,N],[13,R[1349],E,E,24,N],[13,R[1350],E,E,24,N],[13,"Backslash",E,E,24,N],[13,"NonUsHash",E,E,24,N],[13,"Semicolon",E,E,24,N],[13,"Apostrophe",E,E,24,N],[13,"Grave",E,E,24,N],[13,"Comma",E,E,24,N],[13,"Period",E,E,24,N],[13,"Slash",E,E,24,N],[13,"CapsLock",E,E,24,N],[13,"F1",E,E,24,N],[13,"F2",E,E,24,N],[13,"F3",E,E,24,N],[13,"F4",E,E,24,N],[13,"F5",E,E,24,N],[13,"F6",E,E,24,N],[13,"F7",E,E,24,N],[13,"F8",E,E,24,N],[13,"F9",E,E,24,N],[13,"F10",E,E,24,N],[13,"F11",E,E,24,N],[13,"F12",E,E,24,N],[13,R[1351],E,E,24,N],[13,"ScrollLock",E,E,24,N],[13,"Pause",E,E,24,N],[13,"Insert",E,E,24,N],[13,"Home",E,E,24,N],[13,"PageUp",E,E,24,N],[13,"Delete",E,E,24,N],[13,"End",E,E,24,N],[13,"PageDown",E,E,24,N],[13,"Right",E,E,24,N],[13,"Left",E,E,24,N],[13,"Down",E,E,24,N],[13,"Up",E,E,24,N],[13,R[1352],E,E,24,N],[13,"KpDivide",E,E,24,N],[13,"KpMultiply",E,E,24,N],[13,"KpMinus",E,E,24,N],[13,"KpPlus",E,E,24,N],[13,"KpEnter",E,E,24,N],[13,"Kp1",E,E,24,N],[13,"Kp2",E,E,24,N],[13,"Kp3",E,E,24,N],[13,"Kp4",E,E,24,N],[13,"Kp5",E,E,24,N],[13,"Kp6",E,E,24,N],[13,"Kp7",E,E,24,N],[13,"Kp8",E,E,24,N],[13,"Kp9",E,E,24,N],[13,"Kp0",E,E,24,N],[13,"KpPeriod",E,E,24,N],[13,"NonUsBackslash",E,E,24,N],[13,R[1353],E,E,24,N],[13,"Power",E,E,24,N],[13,"KpEquals",E,E,24,N],[13,"F13",E,E,24,N],[13,"F14",E,E,24,N],[13,"F15",E,E,24,N],[13,"F16",E,E,24,N],[13,"F17",E,E,24,N],[13,"F18",E,E,24,N],[13,"F19",E,E,24,N],[13,"F20",E,E,24,N],[13,"F21",E,E,24,N],[13,"F22",E,E,24,N],[13,"F23",E,E,24,N],[13,"F24",E,E,24,N],[13,"Execute",E,E,24,N],[13,"Help",E,E,24,N],[13,"Menu",E,E,24,N],[13,"Select",E,E,24,N],[13,"Stop",E,E,24,N],[13,"Again",E,E,24,N],[13,"Undo",E,E,24,N],[13,"Cut",E,E,24,N],[13,"Copy",E,E,24,N],[13,"Paste",E,E,24,N],[13,"Find",E,E,24,N],[13,"Mute",E,E,24,N],[13,"VolumeUp",E,E,24,N],[13,"VolumeDown",E,E,24,N],[13,"KpComma",E,E,24,N],[13,R[1354],E,E,24,N],[13,"International1",E,E,24,N],[13,"International2",E,E,24,N],[13,"International3",E,E,24,N],[13,"International4",E,E,24,N],[13,"International5",E,E,24,N],[13,"International6",E,E,24,N],[13,"International7",E,E,24,N],[13,"International8",E,E,24,N],[13,"International9",E,E,24,N],[13,"Lang1",E,E,24,N],[13,"Lang2",E,E,24,N],[13,"Lang3",E,E,24,N],[13,"Lang4",E,E,24,N],[13,"Lang5",E,E,24,N],[13,"Lang6",E,E,24,N],[13,"Lang7",E,E,24,N],[13,"Lang8",E,E,24,N],[13,"Lang9",E,E,24,N],[13,"AltErase",E,E,24,N],[13,"SysReq",E,E,24,N],[13,"Cancel",E,E,24,N],[13,"Clear",E,E,24,N],[13,"Prior",E,E,24,N],[13,"Return2",E,E,24,N],[13,"Separator",E,E,24,N],[13,"Out",E,E,24,N],[13,"Oper",E,E,24,N],[13,"ClearAgain",E,E,24,N],[13,"CrSel",E,E,24,N],[13,"ExSel",E,E,24,N],[13,"Kp00",E,E,24,N],[13,"Kp000",E,E,24,N],[13,R[1355],E,E,24,N],[13,R[1356],E,E,24,N],[13,R[1357],E,E,24,N],[13,R[1358],E,E,24,N],[13,R[1359],E,E,24,N],[13,R[1360],E,E,24,N],[13,R[1361],E,E,24,N],[13,R[1362],E,E,24,N],[13,"KpTab",E,E,24,N],[13,R[1363],E,E,24,N],[13,"KpA",E,E,24,N],[13,"KpB",E,E,24,N],[13,"KpC",E,E,24,N],[13,"KpD",E,E,24,N],[13,"KpE",E,E,24,N],[13,"KpF",E,E,24,N],[13,"KpXor",E,E,24,N],[13,"KpPower",E,E,24,N],[13,"KpPercent",E,E,24,N],[13,"KpLess",E,E,24,N],[13,"KpGreater",E,E,24,N],[13,R[1364],E,E,24,N],[13,R[1365],E,E,24,N],[13,R[1366],E,E,24,N],[13,R[1367],E,E,24,N],[13,"KpColon",E,E,24,N],[13,"KpHash",E,E,24,N],[13,"KpSpace",E,E,24,N],[13,"KpAt",E,E,24,N],[13,"KpExclam",E,E,24,N],[13,"KpMemStore",E,E,24,N],[13,R[1368],E,E,24,N],[13,"KpMemClear",E,E,24,N],[13,"KpMemAdd",E,E,24,N],[13,R[1369],E,E,24,N],[13,R[1370],E,E,24,N],[13,R[1371],E,E,24,N],[13,R[1372],E,E,24,N],[13,"KpClear",E,E,24,N],[13,R[1373],E,E,24,N],[13,"KpBinary",E,E,24,N],[13,"KpOctal",E,E,24,N],[13,"KpDecimal",E,E,24,N],[13,R[1374],E,E,24,N],[13,"LCtrl",E,E,24,N],[13,"LShift",E,E,24,N],[13,"LAlt",E,E,24,N],[13,"LGui",E,E,24,N],[13,"RCtrl",E,E,24,N],[13,"RShift",E,E,24,N],[13,"RAlt",E,E,24,N],[13,"RGui",E,E,24,N],[13,"Mode",E,E,24,N],[13,"AudioNext",E,E,24,N],[13,"AudioPrev",E,E,24,N],[13,"AudioStop",E,E,24,N],[13,"AudioPlay",E,E,24,N],[13,"AudioMute",E,E,24,N],[13,R[1375],E,E,24,N],[13,"Www",E,E,24,N],[13,"Mail",E,E,24,N],[13,"Calculator",E,E,24,N],[13,"Computer",E,E,24,N],[13,"AcSearch",E,E,24,N],[13,"AcHome",E,E,24,N],[13,"AcBack",E,E,24,N],[13,"AcForward",E,E,24,N],[13,"AcStop",E,E,24,N],[13,"AcRefresh",E,E,24,N],[13,R[1376],E,E,24,N],[13,R[1377],E,E,24,N],[13,R[1378],E,E,24,N],[13,R[1379],E,E,24,N],[13,R[1380],E,E,24,N],[13,R[1381],E,E,24,N],[13,"KbdIllumUp",E,E,24,N],[13,"Eject",E,E,24,N],[13,"Sleep",E,E,24,N],[13,"App1",E,E,24,N],[13,"App2",E,E,24,N],[13,"Num",E,E,24,N],[11,"from_i32",E,E,23,[[["i32"]],[R[42],["keycode"]]]],[11,"from_scancode",E,"Gets the virtual key from a scancode. Returns None if…",23,[[[R[1383]]],[R[42],["keycode"]]]],[11,"from_name",E,E,23,[[["str"]],[R[42],["keycode"]]]],[11,"name",E,E,23,[[["self"]],["string"]]],[11,"from_i32",E,E,24,[[["i32"]],[R[42],[R[1383]]]]],[11,"from_keycode",E,"Gets the scancode from a virtual key. Returns None if…",24,[[["keycode"]],[R[42],[R[1383]]]]],[11,"from_name",E,E,24,[[["str"]],[R[42],[R[1383]]]]],[11,"name",E,E,24,[[["self"]],["str"]]],[18,"NOMOD",E,E,25,N],[18,"LSHIFTMOD",E,E,25,N],[18,"RSHIFTMOD",E,E,25,N],[18,"LCTRLMOD",E,E,25,N],[18,"RCTRLMOD",E,E,25,N],[18,"LALTMOD",E,E,25,N],[18,"RALTMOD",E,E,25,N],[18,"LGUIMOD",E,E,25,N],[18,"RGUIMOD",E,E,25,N],[18,"NUMMOD",E,E,25,N],[18,"CAPSMOD",E,E,25,N],[18,"MODEMOD",E,E,25,N],[18,"RESERVEDMOD",E,E,25,N],[11,"empty",E,R[1486],25,[[],["mod"]]],[11,"all",E,R[1488],25,[[],["mod"]]],[11,"bits",E,R[1489],25,[[["self"]],["u16"]]],[11,R[1504],E,R[1490],25,[[["u16"]],[R[42],["mod"]]]],[11,R[1491],E,R[1492],25,[[["u16"]],["mod"]]],[11,R[38],E,R[1493],25,[[["self"]],["bool"]]],[11,"is_all",E,R[1494],25,[[["self"]],["bool"]]],[11,R[1502],E,R[1495],25,[[["self"],["mod"]],["bool"]]],[11,R[1513],E,R[1496],25,[[["self"],["mod"]],["bool"]]],[11,"insert",E,R[1497],25,[[["self"],["mod"]]]],[11,"remove",E,R[1498],25,[[["self"],["mod"]]]],[11,"toggle",E,R[1499],25,[[["self"],["mod"]]]],[11,"set",E,R[1500],25,[[["self"],["mod"],["bool"]]]],[11,"new",E,E,26,[[[R[1431]]],[R[1382]]]],[11,"is_scancode_pressed",E,"Returns true if the scancode is pressed.",26,[[["self"],[R[1383]]],["bool"]]],[11,"scancodes",E,"Returns an iterator all scancodes with a boolean…",26,[[["self"]],["scancodeiterator"]]],[11,"pressed_scancodes",E,"Returns an iterator of pressed scancodes.",26,[[["self"]],["pressedscancodeiterator"]]],[11,"keyboard","sdl2",E,27,[[["self"]],["keyboardutil"]]],[11,"text_input",E,E,2,[[["self"]],["textinpututil"]]],[11,R[1405],R[1384],"Gets the id of the window which currently has keyboard…",28,[[["self"]],[R[42],["u32"]]]],[11,"mod_state",E,E,28,[[["self"]],["mod"]]],[11,"set_mod_state",E,E,28,[[["self"],["mod"]]]],[11,"start",E,E,29,[[["self"]]]],[11,"is_active",E,E,29,[[["self"]],["bool"]]],[11,"stop",E,E,29,[[["self"]]]],[11,"set_rect",E,E,29,[[["self"],["rect"]]]],[11,"has_screen_keyboard_support",E,E,29,[[["self"]],["bool"]]],[11,"is_screen_keyboard_shown",E,E,29,[[["self"],["window"]],["bool"]]],[0,"mouse","sdl2",E,N,N],[3,R[1596],R[1406],E,N,N],[3,"Cursor",E,E,N,N],[3,"MouseState",E,E,N,N],[3,R[1646],E,E,N,N],[3,R[1647],E,E,N,N],[3,"MouseUtil",E,"Mouse utility functions. Access with `Sdl::mouse()`.",N,N],[4,R[1593],E,E,N,N],[13,"Arrow",E,E,30,N],[13,"IBeam",E,E,30,N],[13,"Wait",E,E,30,N],[13,"Crosshair",E,E,30,N],[13,"WaitArrow",E,E,30,N],[13,"SizeNWSE",E,E,30,N],[13,"SizeNESW",E,E,30,N],[13,"SizeWE",E,E,30,N],[13,"SizeNS",E,E,30,N],[13,"SizeAll",E,E,30,N],[13,"No",E,E,30,N],[13,"Hand",E,E,30,N],[4,R[1594],E,E,N,N],[13,"Normal",E,E,31,N],[13,"Flipped",E,E,31,N],[13,"Unknown",E,E,31,N],[4,R[1595],E,E,N,N],[13,"Unknown",E,E,32,N],[13,"Left",E,E,32,N],[13,"Middle",E,E,32,N],[13,"Right",E,E,32,N],[13,"X1",E,E,32,N],[13,"X2",E,E,32,N],[11,"new",E,E,33,[[[R[1431]]],[R[1385]]]],[11,R[1388],E,E,33,[[["u32"]],[R[1385]]]],[11,R[1389],E,E,33,[[["self"]],["u32"]]],[11,"left",E,R[1390],33,[[["self"]],["bool"]]],[11,"middle",E,R[1391],33,[[["self"]],["bool"]]],[11,"right",E,R[1392],33,[[["self"]],["bool"]]],[11,"x1",E,R[1393],33,[[["self"]],["bool"]]],[11,"x2",E,R[1394],33,[[["self"]],["bool"]]],[11,"x",E,R[1395],33,[[["self"]],["i32"]]],[11,"y",E,R[1396],33,[[["self"]],["i32"]]],[11,R[1397],E,R[1398],33,[[["self"],[R[1386]]],["bool"]]],[11,R[1399],E,R[1400],33,[[["self"]],[R[1401]]]],[11,R[1402],E,R[1403],33,[[["self"]],[R[1404]]]],[11,"new",E,E,34,N],[11,R[1447],E,E,34,[[["s"],["i32"],["i32"]],[R[14],["cursor","string"]]]],[11,"from_system",E,E,34,[[[R[1547]]],[R[14],["cursor","string"]]]],[11,"set",E,E,34,[[["self"]]]],[11,"from_ll",E,E,31,[[["u32"]],[R[1548]]]],[11,"to_ll",E,E,31,[[["self"]],["u32"]]],[11,"from_ll",E,E,32,[[["u8"]],[R[1386]]]],[11,"new",E,E,35,[[[R[1431]]],[R[1387]]]],[11,R[1388],E,E,35,[[["u32"]],[R[1387]]]],[11,R[1389],E,E,35,[[["self"]],["u32"]]],[11,"left",E,R[1390],35,[[["self"]],["bool"]]],[11,"middle",E,R[1391],35,[[["self"]],["bool"]]],[11,"right",E,R[1392],35,[[["self"]],["bool"]]],[11,"x1",E,R[1393],35,[[["self"]],["bool"]]],[11,"x2",E,R[1394],35,[[["self"]],["bool"]]],[11,"x",E,R[1395],35,[[["self"]],["i32"]]],[11,"y",E,R[1396],35,[[["self"]],["i32"]]],[11,R[1397],E,R[1398],35,[[["self"],[R[1386]]],["bool"]]],[11,R[1399],E,R[1400],35,[[["self"]],[R[1401]]]],[11,R[1402],E,R[1403],35,[[["self"]],[R[1404]]]],[11,"mouse","sdl2",E,27,[[["self"]],["mouseutil"]]],[11,R[1405],R[1406],"Gets the id of the window which currently has mouse focus.",36,[[["self"]],[R[42],["u32"]]]],[11,"warp_mouse_in_window",E,E,36,[[["self"],["window"],["i32"],["i32"]]]],[11,"set_relative_mouse_mode",E,E,36,[[["self"],["bool"]]]],[11,"relative_mouse_mode",E,E,36,[[["self"]],["bool"]]],[11,"is_cursor_showing",E,E,36,[[["self"]],["bool"]]],[11,"show_cursor",E,E,36,[[["self"],["bool"]]]],[11,"capture",E,E,36,[[["self"],["bool"]]]],[0,"rect","sdl2","Rectangles and points.",N,N],[3,"Rect",R[1541],"A (non-empty) rectangle.",N,N],[3,"Point",E,"Immutable point type, consisting of x and y.",N,N],[5,"max_int_value",E,"The maximal integer value that can be used for rectangles.",N,[[],["u32"]]],[5,"min_int_value",E,"The minimal integer value that can be used for rectangle…",N,[[],["i32"]]],[11,"new",E,"Creates a new rectangle from the given values.",37,[[["i32"],["i32"],["u32"],["u32"]],["rect"]]],[11,"from_center",E,"Creates a new rectangle centered on the given position.",37,[[["p"],["u32"],["u32"]],["rect"]]],[11,"x",E,"The horizontal position of this rectangle.",37,[[["self"]],["i32"]]],[11,"y",E,"The vertical position of this rectangle.",37,[[["self"]],["i32"]]],[11,"width",E,"The width of this rectangle.",37,[[["self"]],["u32"]]],[11,"height",E,"The height of this rectangle.",37,[[["self"]],["u32"]]],[11,"size",E,"Returns the width and height of this rectangle.",37,N],[11,"set_x",E,"Sets the horizontal position of this rectangle to the…",37,[[["self"],["i32"]]]],[11,"set_y",E,"Sets the vertical position of this rectangle to the given…",37,[[["self"],["i32"]]]],[11,"set_width",E,"Sets the width of this rectangle to the given value,…",37,[[["self"],["u32"]]]],[11,"set_height",E,"Sets the height of this rectangle to the given value,…",37,[[["self"],["u32"]]]],[11,"left",E,"Returns the x-position of the left side of this rectangle.",37,[[["self"]],["i32"]]],[11,"right",E,"Returns the x-position of the right side of this rectangle.",37,[[["self"]],["i32"]]],[11,"top",E,"Returns the y-position of the top side of this rectangle.",37,[[["self"]],["i32"]]],[11,"bottom",E,"Returns the y-position of the bottom side of this rectangle.",37,[[["self"]],["i32"]]],[11,"center",E,"Returns the center position of this rectangle.",37,[[["self"]],["point"]]],[11,"top_left",E,"Returns the top-left corner of this rectangle.",37,[[["self"]],["point"]]],[11,"top_right",E,"Returns the top-right corner of this rectangle.",37,[[["self"]],["point"]]],[11,"bottom_left",E,"Returns the bottom-left corner of this rectangle.",37,[[["self"]],["point"]]],[11,"bottom_right",E,"Returns the bottom-right corner of this rectangle.",37,[[["self"]],["point"]]],[11,"set_right",E,"Sets the position of the right side of this rectangle to…",37,[[["self"],["i32"]]]],[11,"set_bottom",E,"Sets the position of the bottom side of this rectangle to…",37,[[["self"],["i32"]]]],[11,"center_on",E,"Centers the rectangle on the given point.",37,[[["self"],["p"]]]],[11,"offset",E,"Move this rect and clamp the positions to prevent…",37,[[["self"],["i32"],["i32"]]]],[11,"reposition",E,"Moves this rect to the given position after clamping the…",37,[[["self"],["p"]]]],[11,"resize",E,"Resizes this rect to the given size after clamping the…",37,[[["self"],["u32"],["u32"]]]],[11,R[1513],E,"Checks whether this rect contains a given point, or…",37,[[["self"],["p"]],["bool"]]],[11,"contains_point",E,"Checks whether this rectangle contains a given point.",37,[[["self"],["p"]],["bool"]]],[11,"contains_rect",E,"Checks whether this rectangle completely contains another…",37,[[["self"],["rect"]],["bool"]]],[11,"raw",E,"Returns the underlying C Rect.",37,N],[11,"raw_mut",E,E,37,N],[11,"raw_slice",E,E,37,N],[11,"from_ll",E,E,37,[[[R[1573]]],["rect"]]],[11,"from_enclose_points",E,"Calculate a minimal rectangle enclosing a set of points.…",37,N],[11,"has_intersection",E,"Determines whether two rectangles intersect.",37,[[["self"],["rect"]],["bool"]]],[11,"intersection",E,"Calculates the intersection of two rectangles.",37,[[["self"],["rect"]],[R[42],["rect"]]]],[11,"union",E,"Calculates the union of two rectangles (i.e. the smallest…",37,[[["self"],["rect"]],["rect"]]],[11,"intersect_line",E,"Calculates the intersection of a rectangle and a line…",37,[[["self"],["point"],["point"]],[R[42]]]],[11,"new",E,"Creates a new point from the given coordinates.",38,[[["i32"],["i32"]],["point"]]],[11,"from_ll",E,E,38,[[[R[1556]]],["point"]]],[11,"raw_slice",E,E,38,N],[11,"raw",E,E,38,N],[11,"offset",E,"Returns a new point by shifting this point's coordinates…",38,[[["self"],["i32"],["i32"]],["point"]]],[11,"scale",E,"Returns a new point by multiplying this point's…",38,[[["self"],["i32"]],["point"]]],[11,"x",E,"Returns the x-coordinate of this point.",38,[[["self"]],["i32"]]],[11,"y",E,"Returns the y-coordinate of this point.",38,[[["self"]],["i32"]]],[0,"surface","sdl2",E,N,N],[3,R[1648],R[1521],"Holds a `SDL_Surface`",N,N],[3,"Surface",E,"Holds a `Rc<SurfaceContext>`.",N,N],[3,"SurfaceRef",E,"An unsized Surface reference.",N,N],[11,"from_ll",E,E,39,N],[11,"new",E,"Creates a new surface using a pixel format.",39,[[["u32"],["u32"],[R[1407]]],[R[14],["surface","string"]]]],[11,"from_pixelmasks",E,"Creates a new surface using pixel masks.",39,[[["u32"],["u32"],[R[1412]]],[R[14],["surface","string"]]]],[11,"from_data",E,"Creates a new surface from an existing buffer, using a…",39,N],[11,"from_data_pixelmasks",E,"Creates a new surface from an existing buffer, using pixel…",39,N],[11,"load_bmp_rw",E,E,39,[[["rwops"]],[R[14],["surface","string"]]]],[11,"load_bmp",E,E,39,[[["p"]],[R[14],["surface","string"]]]],[11,R[1426],E,"Creates a Software Canvas to allow rendering in the…",39,[[["self"]],[R[14],["canvas","string"]]]],[11,"context",E,E,39,[[["self"]],["rc",[R[1448]]]]],[11,"from_ll",E,E,40,N],[11,"from_ll_mut",E,E,40,N],[11,"raw",E,E,40,N],[11,"width",E,E,40,[[["self"]],["u32"]]],[11,"height",E,E,40,[[["self"]],["u32"]]],[11,"pitch",E,E,40,[[["self"]],["u32"]]],[11,"size",E,E,40,N],[11,"rect",E,E,40,[[["self"]],["rect"]]],[11,"pixel_format",E,E,40,[[["self"]],[R[1410]]]],[11,"pixel_format_enum",E,E,40,[[["self"]],[R[1407]]]],[11,"with_lock",E,R[1408],40,[[["self"],["f"]],["r"]]],[11,"with_lock_mut",E,R[1408],40,[[["self"],["f"]],["r"]]],[11,"without_lock",E,R[1409],40,[[["self"]],[R[42]]]],[11,"without_lock_mut",E,R[1409],40,[[["self"]],[R[42]]]],[11,"must_lock",E,"Returns true if the Surface needs to be locked before…",40,[[["self"]],["bool"]]],[11,"save_bmp_rw",E,E,40,[[["self"],["rwops"]],[R[14],["string"]]]],[11,"save_bmp",E,E,40,[[["self"],["p"]],[R[14],["string"]]]],[11,"set_palette",E,E,40,[[["self"],["palette"]],[R[14],["string"]]]],[11,"enable_RLE",E,E,40,[[["self"]]]],[11,"disable_RLE",E,E,40,[[["self"]]]],[11,"set_color_key",E,E,40,[[["self"],["bool"],["color"]],[R[14],["string"]]]],[11,"color_key",E,"The function will fail if the surface doesn't have color…",40,[[["self"]],[R[14],["color","string"]]]],[11,R[1461],E,E,40,[[["self"],["color"]]]],[11,"color_mod",E,E,40,[[["self"]],["color"]]],[11,"fill_rect",E,E,40,[[["self"],["r"],["color"]],[R[14],["string"]]]],[11,"fill_rects",E,E,40,N],[11,R[1462],E,E,40,[[["self"],["u8"]]]],[11,"alpha_mod",E,E,40,[[["self"]],["u8"]]],[11,R[1457],E,"The function will fail if the blend mode is not supported…",40,[[["self"],[R[1458]]],[R[14],["string"]]]],[11,R[1464],E,E,40,[[["self"]],[R[1458]]]],[11,R[1459],E,"Sets the clip rectangle for the surface.",40,[[["self"],["r"]],["bool"]]],[11,"clip_rect",E,"Gets the clip rectangle for the surface.",40,[[["self"]],[R[42],["rect"]]]],[11,"convert",E,"Copies the surface into a new one that is optimized for…",40,[[["self"],[R[1410]]],[R[14],["surface","string"]]]],[11,"blit",E,"Performs surface blitting (surface copying).",40,[[["self"],["r1"],[R[1411]],["r2"]],[R[14],[R[42],"string"]]]],[11,"lower_blit",E,"Performs low-level surface blitting.",40,[[["self"],["r1"],[R[1411]],["r2"]],[R[14],["string"]]]],[11,"blit_scaled",E,"Performs scaled surface bliting (surface copying).",40,[[["self"],["r1"],[R[1411]],["r2"]],[R[14],[R[42],"string"]]]],[11,"lower_blit_scaled",E,"Performs low-level scaled surface blitting.",40,[[["self"],["r1"],[R[1411]],["r2"]],[R[14],["string"]]]],[0,"pixels","sdl2",E,N,N],[3,"Palette",R[1522],E,N,N],[3,"Color",E,E,N,N],[12,"r",E,E,41,N],[12,"g",E,E,41,N],[12,"b",E,E,41,N],[12,"a",E,E,41,N],[3,"PixelMasks",E,E,N,N],[12,"bpp",E,"Bits per pixel; usually 15, 16, or 32",42,N],[12,"rmask",E,"The red mask",42,N],[12,"gmask",E,"The green mask",42,N],[12,"bmask",E,"The blue mask",42,N],[12,"amask",E,"The alpha mask",42,N],[3,R[1598],E,E,N,N],[4,R[1597],E,E,N,N],[13,"Unknown",E,E,43,N],[13,"Index1LSB",E,E,43,N],[13,"Index1MSB",E,E,43,N],[13,"Index4LSB",E,E,43,N],[13,"Index4MSB",E,E,43,N],[13,"Index8",E,E,43,N],[13,"RGB332",E,E,43,N],[13,"RGB444",E,E,43,N],[13,"RGB555",E,E,43,N],[13,"BGR555",E,E,43,N],[13,"ARGB4444",E,E,43,N],[13,"RGBA4444",E,E,43,N],[13,"ABGR4444",E,E,43,N],[13,"BGRA4444",E,E,43,N],[13,"ARGB1555",E,E,43,N],[13,"RGBA5551",E,E,43,N],[13,"ABGR1555",E,E,43,N],[13,"BGRA5551",E,E,43,N],[13,"RGB565",E,E,43,N],[13,"BGR565",E,E,43,N],[13,"RGB24",E,E,43,N],[13,"BGR24",E,E,43,N],[13,"RGB888",E,E,43,N],[13,"RGBX8888",E,E,43,N],[13,"BGR888",E,E,43,N],[13,"BGRX8888",E,E,43,N],[13,"ARGB8888",E,E,43,N],[13,"RGBA8888",E,E,43,N],[13,"ABGR8888",E,E,43,N],[13,"BGRA8888",E,E,43,N],[13,"ARGB2101010",E,E,43,N],[13,"YV12",E,E,43,N],[13,"IYUV",E,E,43,N],[13,"YUY2",E,E,43,N],[13,"UYVY",E,E,43,N],[13,"YVYU",E,E,43,N],[11,"new",E,"Creates a new, uninitialized palette",44,[[[R[9]]],[R[14],["string"]]]],[11,"with_colors",E,"Creates a palette from the provided colors",44,N],[11,"len",E,E,44,[[["self"]],[R[9]]]],[11,R[38],E,E,44,[[["self"]],["bool"]]],[11,"raw",E,E,44,N],[11,"RGB",E,E,41,[[["u8"],["u8"],["u8"]],["color"]]],[11,"RGBA",E,E,41,[[["u8"],["u8"],["u8"],["u8"]],["color"]]],[11,"to_u32",E,E,41,[[["self"],[R[1410]]],["u32"]]],[11,"from_u32",E,E,41,[[[R[1410]],["u32"]],["color"]]],[11,"rgb",E,E,41,N],[11,"rgba",E,E,41,N],[11,"raw",E,E,45,N],[11,"from_ll",E,E,45,N],[18,"RGBA32",E,E,43,N],[18,"ARGB32",E,E,43,N],[18,"BGRA32",E,E,43,N],[18,"ABGR32",E,E,43,N],[11,"from_masks",E,E,43,[[[R[1412]]],[R[1407]]]],[11,"into_masks",E,E,43,[[["self"]],[R[14],[R[1412],"string"]]]],[11,"byte_size_from_pitch_and_height",E,"Calculates the total byte size of an image buffer, given…",43,[[["self"],[R[9]],[R[9]]],[R[9]]]],[11,"byte_size_of_pixels",E,E,43,[[["self"],[R[9]]],[R[9]]]],[11,"byte_size_per_pixel",E,E,43,[[["self"]],[R[9]]]],[11,"supports_alpha",E,E,43,[[["self"]],["bool"]]],[0,"video","sdl2",E,N,N],[6,"VkInstance",R[1421],E,N,N],[6,R[1659],E,E,N,N],[3,R[1605],E,E,N,N],[3,R[1599],E,E,N,N],[12,"format",E,E,46,N],[12,"w",E,E,46,N],[12,"h",E,E,46,N],[12,R[1652],E,E,46,N],[3,"GLContext",E,E,N,N],[3,R[1606],E,"Holds a `SDL_Window`",N,N],[3,"Window",E,"Represents the \"shell\" of a `Window`.",N,N],[3,R[1607],E,"The type that allows you to build windows.",N,N],[3,R[1434],E,E,N,N],[4,"GLProfile",E,E,N,N],[13,"Core",E,"OpenGL core profile - deprecated functions are disabled",47,N],[13,"Compatibility",E,"OpenGL compatibility profile - deprecated functions are…",47,N],[13,"GLES",E,"OpenGL ES profile - only a subset of the base OpenGL…",47,N],[13,"Unknown",E,"Unknown profile - SDL will tend to return 0 if you ask…",47,N],[4,R[1600],E,E,N,N],[13,"Off",E,E,48,N],[13,"True",E,E,48,N],[13,"Desktop",E,E,48,N],[4,"WindowPos",E,E,N,N],[13,"Undefined",E,E,49,N],[13,"Centered",E,E,49,N],[13,"Positioned",E,E,49,N],[4,R[1601],E,"Represents a setting for vsync/swap interval.",N,N],[13,"Immediate",E,E,50,N],[13,"VSync",E,E,50,N],[13,"LateSwapTearing",E,E,50,N],[4,R[1602],E,E,N,N],[13,R[1436],E,E,51,N],[13,R[1435],E,E,51,N],[13,R[1485],E,E,51,N],[13,R[1437],E,E,51,N],[5,"drivers",E,"Gets an iterator of all video drivers compiled into the…",N,[[],[R[1445]]]],[0,"gl_attr",E,"OpenGL context getters and setters",N,N],[3,"GLAttr",R[1413],"OpenGL context getters and setters. Obtain with…",N,N],[3,R[1603],E,"The type that allows you to build a OpenGL context…",N,N],[3,R[1604],E,E,N,N],[11,"gl_attr","sdl2","Obtains access to the OpenGL window attributes.",2,[[["self"]],["glattr"]]],[11,"set_red_size",R[1413],R[1418],52,[[["self"],["u8"]]]],[11,"red_size",E,R[1419],52,[[["self"]],["u8"]]],[11,"set_green_size",E,R[1414],52,[[["self"],["u8"]]]],[11,"green_size",E,R[1415],52,[[["self"]],["u8"]]],[11,"set_blue_size",E,R[1414],52,[[["self"],["u8"]]]],[11,"blue_size",E,R[1415],52,[[["self"]],["u8"]]],[11,"set_alpha_size",E,R[1414],52,[[["self"],["u8"]]]],[11,"alpha_size",E,R[1415],52,[[["self"]],["u8"]]],[11,"set_buffer_size",E,"Sets the attribute: the minimum number of bits for frame…",52,[[["self"],["u8"]]]],[11,"buffer_size",E,"Gets the attribute: the minimum number of bits for frame…",52,[[["self"]],["u8"]]],[11,"set_double_buffer",E,"Sets the attribute: whether the output is single or double…",52,[[["self"],["bool"]]]],[11,"double_buffer",E,"Gets the attribute: whether the output is single or double…",52,[[["self"]],["bool"]]],[11,"set_depth_size",E,R[1416],52,[[["self"],["u8"]]]],[11,"depth_size",E,R[1417],52,[[["self"]],["u8"]]],[11,"set_stencil_size",E,R[1416],52,[[["self"],["u8"]]]],[11,"stencil_size",E,R[1417],52,[[["self"]],["u8"]]],[11,"set_accum_red_size",E,R[1418],52,[[["self"],["u8"]]]],[11,"accum_red_size",E,R[1419],52,[[["self"]],["u8"]]],[11,"set_accum_green_size",E,R[1414],52,[[["self"],["u8"]]]],[11,"accum_green_size",E,R[1415],52,[[["self"]],["u8"]]],[11,"set_accum_blue_size",E,R[1414],52,[[["self"],["u8"]]]],[11,"accum_blue_size",E,R[1415],52,[[["self"]],["u8"]]],[11,"set_accum_alpha_size",E,R[1414],52,[[["self"],["u8"]]]],[11,"accum_alpha_size",E,R[1415],52,[[["self"]],["u8"]]],[11,"set_stereo",E,"Sets the attribute: whether the output is stereo 3D;…",52,[[["self"],["bool"]]]],[11,"stereo",E,"Gets the attribute: whether the output is stereo 3D;…",52,[[["self"]],["bool"]]],[11,"set_multisample_buffers",E,"Sets the attribute: the number of buffers used for…",52,[[["self"],["u8"]]]],[11,"multisample_buffers",E,"Gets the attribute: the number of buffers used for…",52,[[["self"]],["u8"]]],[11,"set_multisample_samples",E,"Sets the attribute: the number of samples used around the…",52,[[["self"],["u8"]]]],[11,"multisample_samples",E,"Gets the attribute: the number of samples used around the…",52,[[["self"]],["u8"]]],[11,"set_accelerated_visual",E,"Sets the attribute: whether to require hardware…",52,[[["self"],["bool"]]]],[11,"accelerated_visual",E,"Gets the attribute: whether to require hardware…",52,[[["self"]],["bool"]]],[11,"set_context_major_version",E,"Sets the attribute:  OpenGL context major version",52,[[["self"],["u8"]]]],[11,"context_major_version",E,"Gets the attribute:  OpenGL context major version",52,[[["self"]],["u8"]]],[11,"set_context_minor_version",E,"Sets the attribute:  OpenGL context minor version",52,[[["self"],["u8"]]]],[11,"context_minor_version",E,"Gets the attribute:  OpenGL context minor version",52,[[["self"]],["u8"]]],[11,"set_context_profile",E,"Sets the attribute: type of GL context (Core,…",52,[[["self"],[R[1549]]]]],[11,"context_profile",E,"Gets the attribute: type of GL context (Core,…",52,[[["self"]],[R[1549]]]],[11,"set_share_with_current_context",E,"Sets the attribute: OpenGL context sharing; defaults to…",52,[[["self"],["bool"]]]],[11,"share_with_current_context",E,"Gets the attribute: OpenGL context sharing; defaults to…",52,[[["self"]],["bool"]]],[11,"set_framebuffer_srgb_compatible",E,"Sets the attribute: requests sRGB capable visual; defaults…",52,[[["self"],["bool"]]]],[11,"framebuffer_srgb_compatible",E,"Gets the attribute: requests sRGB capable visual; defaults…",52,[[["self"]],["bool"]]],[11,"set_context_version",E,"Sets the OpenGL context major and minor versions.",52,[[["self"],["u8"],["u8"]]]],[11,"context_version",E,"Gets the OpenGL context major and minor versions as a tuple.",52,N],[11,"set",E,"Finishes the builder and applies the GL context flags to…",53,[[["self"]]]],[11,"debug",E,"Sets the context into \"debug\" mode.",53,[[["self"]],[R[1420]]]],[11,"forward_compatible",E,"Sets the context into \"forward compatible\" mode.",53,[[["self"]],[R[1420]]]],[11,"robust_access",E,E,53,[[["self"]],[R[1420]]]],[11,"reset_isolation",E,E,53,[[["self"]],[R[1420]]]],[11,"has_debug",E,E,54,[[["self"]],["bool"]]],[11,"has_forward_compatible",E,E,54,[[["self"]],["bool"]]],[11,"has_robust_access",E,E,54,[[["self"]],["bool"]]],[11,"has_reset_isolation",E,E,54,[[["self"]],["bool"]]],[11,"set_context_flags",E,"Sets any combination of OpenGL context configuration flags.",52,[[["self"]],[R[1420]]]],[11,"context_flags",E,"Gets the applied OpenGL context configuration flags.",52,[[["self"]],["contextflags"]]],[11,"update_window",R[1421],"Updates the change made to the inner Surface to the Window…",55,[[["self"]],[R[14],["string"]]]],[11,"update_window_rects",E,"Same as `update_window`, but only update the parts…",55,N],[11,"finish",E,"Gives up this WindowSurfaceRef, allowing to use the window…",55,[[["self"]],[R[14],["string"]]]],[11,"new",E,E,46,[[[R[1407]],["i32"],["i32"],["i32"]],[R[1422]]]],[11,"from_ll",E,E,46,[[[R[1423]]],[R[1422]]]],[11,"to_ll",E,E,46,[[["self"]],[R[1423]]]],[11,"from_window_flags",E,E,48,[[["u32"]],[R[1430]]]],[11,"is_current",E,"Returns true if the OpenGL context is the current one in…",56,[[["self"]],["bool"]]],[11,"from_ll",E,"Unsafe if the `*mut SDL_Window` is used after the…",57,N],[11,"raw",E,E,56,[[["self"]],["sdl_glcontext"]]],[11,"window","sdl2","Initializes a new `WindowBuilder`; a convenience method…",2,[[["self"],["str"],["u32"],["u32"]],[R[1424]]]],[11,"current_video_driver",E,E,2,[[["self"]],["str"]]],[11,"num_video_displays",E,E,2,[[["self"]],[R[14],["i32","string"]]]],[11,R[1656],E,"Get the name of the display at the index `display_name`.",2,[[["self"],["i32"]],[R[14],["string","string"]]]],[11,"display_bounds",E,E,2,[[["self"],["i32"]],[R[14],["rect","string"]]]],[11,"num_display_modes",E,E,2,[[["self"],["i32"]],[R[14],["i32","string"]]]],[11,R[1428],E,E,2,[[["self"],["i32"],["i32"]],[R[14],[R[1422],"string"]]]],[11,"desktop_display_mode",E,E,2,[[["self"],["i32"]],[R[14],[R[1422],"string"]]]],[11,"current_display_mode",E,E,2,[[["self"],["i32"]],[R[14],[R[1422],"string"]]]],[11,"closest_display_mode",E,E,2,[[["self"],["i32"],[R[1422]]],[R[14],[R[1422],"string"]]]],[11,"display_dpi",E,"Return a triplet `(ddpi, hdpi, vdpi)` containing the…",2,[[["self"],["i32"]],[R[14],["string"]]]],[11,"is_screen_saver_enabled",E,E,2,[[["self"]],["bool"]]],[11,"enable_screen_saver",E,E,2,[[["self"]]]],[11,"disable_screen_saver",E,E,2,[[["self"]]]],[11,"gl_load_library_default",E,"Loads the default OpenGL library.",2,[[["self"]],[R[14],["string"]]]],[11,"gl_load_library",E,"Loads the OpenGL library using a platform-dependent OpenGL…",2,[[["self"],["p"]],[R[14],["string"]]]],[11,"gl_unload_library",E,"Unloads the current OpenGL library.",2,[[["self"]]]],[11,"gl_get_proc_address",E,"Gets the pointer to the named OpenGL function.",2,N],[11,"gl_extension_supported",E,E,2,[[["self"],["str"]],["bool"]]],[11,"gl_get_current_window_id",E,E,2,[[["self"]],[R[14],["u32","string"]]]],[11,"gl_release_current_context",E,"Releases the thread's current OpenGL context, i.e. sets…",2,[[["self"]],[R[14],["string"]]]],[11,"gl_set_swap_interval",E,E,2,[[["self"],["s"]],[R[14],["string"]]]],[11,"gl_get_swap_interval",E,E,2,[[["self"]],[R[1551]]]],[11,"vulkan_load_library_default",E,"Loads the default Vulkan library.",2,[[["self"]],[R[14],["string"]]]],[11,"vulkan_load_library",E,"Loads the Vulkan library using a platform-dependent Vulkan…",2,[[["self"],["p"]],[R[14],["string"]]]],[11,"vulkan_unload_library",E,"Unloads the current Vulkan library.",2,[[["self"]]]],[11,"vulkan_get_proc_address_function",E,"Gets the pointer to the `vkGetInstanceProcAddr` Vulkan…",2,[[["self"]],[R[14],["string"]]]],[11,"new",R[1421],"Initializes a new `WindowBuilder`.",58,[[[R[1425]],["str"],["u32"],["u32"]],[R[1424]]]],[11,"build",E,"Builds the window.",58,[[["self"]],[R[14],["window","windowbuilderror"]]]],[11,R[1429],E,"Gets the underlying window flags.",58,[[["self"]],["u32"]]],[11,"set_window_flags",E,"Sets the underlying window flags. This will effectively…",58,[[["self"],["u32"]],[R[1424]]]],[11,"position",E,"Sets the window position.",58,[[["self"],["i32"],["i32"]],[R[1424]]]],[11,"position_centered",E,"Centers the window.",58,[[["self"]],[R[1424]]]],[11,"fullscreen",E,"Sets the window to fullscreen.",58,[[["self"]],[R[1424]]]],[11,"fullscreen_desktop",E,"Sets the window to fullscreen at the current desktop…",58,[[["self"]],[R[1424]]]],[11,"opengl",E,"Sets the window to be usable with an OpenGL context",58,[[["self"]],[R[1424]]]],[11,"vulkan",E,"Sets the window to be usable with a Vulkan instance",58,[[["self"]],[R[1424]]]],[11,"hidden",E,"Hides the window.",58,[[["self"]],[R[1424]]]],[11,"borderless",E,"Removes the window decoration.",58,[[["self"]],[R[1424]]]],[11,"resizable",E,"Sets the window to be resizable.",58,[[["self"]],[R[1424]]]],[11,"minimized",E,"Minimizes the window.",58,[[["self"]],[R[1424]]]],[11,"maximized",E,"Maximizes the window.",58,[[["self"]],[R[1424]]]],[11,"input_grabbed",E,"Sets the window to have grabbed input focus.",58,[[["self"]],[R[1424]]]],[11,"allow_highdpi",E,"Creates the window in high-DPI mode if supported (>= SDL…",58,[[["self"]],[R[1424]]]],[11,"raw",E,E,59,N],[11,"from_ll",E,E,59,N],[11,"from_ref",E,"Create a new `Window` without taking ownership of the…",59,[[["rc",[R[1427]]]],["window"]]],[11,R[369],E,E,59,[[["self"]],[R[1425]]]],[11,R[1426],E,"Initializes a new `CanvasBuilder`; a convenience method…",59,[[["self"]],[R[1453]]]],[11,"context",E,E,59,[[["self"]],["rc",[R[1427]]]]],[11,"id",E,E,59,[[["self"]],["u32"]]],[11,"gl_create_context",E,E,59,[[["self"]],[R[14],["glcontext","string"]]]],[11,"gl_set_context_to_current",E,"Set the window's OpenGL context to the current context on…",59,[[["self"]],[R[14],["string"]]]],[11,"gl_make_current",E,E,59,[[["self"],["glcontext"]],[R[14],["string"]]]],[11,"gl_swap_window",E,E,59,[[["self"]]]],[11,"vulkan_instance_extensions",E,"Get the names of the Vulkan instance extensions needed to…",59,[[["self"]],[R[14],["vec","string"]]]],[11,"vulkan_create_surface",E,"Create a Vulkan rendering surface for a window.",59,[[["self"],["vkinstance"]],[R[14],["vksurfacekhr","string"]]]],[11,"display_index",E,E,59,[[["self"]],[R[14],["i32","string"]]]],[11,"set_display_mode",E,E,59,[[["self"],["d"]],[R[14],["string"]]]],[11,R[1428],E,E,59,[[["self"]],[R[14],[R[1422],"string"]]]],[11,"window_pixel_format",E,E,59,[[["self"]],[R[1407]]]],[11,R[1429],E,E,59,[[["self"]],["u32"]]],[11,"set_title",E,E,59,[[["self"],["str"]],[R[14],["nulerror"]]]],[11,"title",E,E,59,[[["self"]],["str"]]],[11,"set_icon",E,E,59,[[["self"],["s"]]]],[11,R[1515],E,E,59,[[["self"],[R[1550]],[R[1550]]]]],[11,"position",E,E,59,N],[11,"border_size",E,"Use this function to get the size of a window's borders…",59,[[["self"]],[R[14],["string"]]]],[11,"set_size",E,E,59,[[["self"],["u32"],["u32"]],[R[14],[R[1334]]]]],[11,"size",E,E,59,N],[11,"drawable_size",E,E,59,N],[11,"vulkan_drawable_size",E,E,59,N],[11,"set_minimum_size",E,E,59,[[["self"],["u32"],["u32"]],[R[14],[R[1334]]]]],[11,"minimum_size",E,E,59,N],[11,"set_maximum_size",E,E,59,[[["self"],["u32"],["u32"]],[R[14],[R[1334]]]]],[11,"maximum_size",E,E,59,N],[11,"set_bordered",E,E,59,[[["self"],["bool"]]]],[11,"show",E,E,59,[[["self"]]]],[11,"hide",E,E,59,[[["self"]]]],[11,"raise",E,E,59,[[["self"]]]],[11,"maximize",E,E,59,[[["self"]]]],[11,"minimize",E,E,59,[[["self"]]]],[11,"restore",E,E,59,[[["self"]]]],[11,"fullscreen_state",E,E,59,[[["self"]],[R[1430]]]],[11,"set_fullscreen",E,E,59,[[["self"],[R[1430]]],[R[14],["string"]]]],[11,"surface",E,"Returns a WindowSurfaceRef, which can be used like a…",59,[[["self"],[R[1431]]],[R[14],["windowsurfaceref","string"]]]],[11,"set_grab",E,E,59,[[["self"],["bool"]]]],[11,"grab",E,E,59,[[["self"]],["bool"]]],[11,"set_brightness",E,E,59,[[["self"],["f64"]],[R[14],["string"]]]],[11,"brightness",E,E,59,[[["self"]],["f64"]]],[11,"set_gamma_ramp",E,E,59,[[["self"],["r"],["g"],["b"]],[R[14],["string"]]]],[11,"gamma_ramp",E,E,59,[[["self"]],[R[14],["string"]]]],[11,"set_opacity",E,"Set the transparency of the window. The given value will…",59,[[["self"],["f32"]],[R[14],["string"]]]],[11,"opacity",E,"Returns the transparency of the window, as a value between…",59,[[["self"]],[R[14],["f32","string"]]]],[0,"timer","sdl2",E,N,N],[3,"Timer",R[1432],E,N,N],[6,"TimerCallback",E,E,N,N],[11,"add_timer","sdl2","Constructs a new timer using the boxed closure `callback`.",60,[[["self"],["u32"],[R[1433]]],["timer"]]],[11,"ticks",E,"Gets the number of milliseconds elapsed since the timer…",60,[[["self"]],["u32"]]],[11,"delay",E,"Sleeps the current thread for the specified amount of…",60,[[["self"],["u32"]]]],[11,"performance_counter",E,E,60,[[["self"]],["u64"]]],[11,"performance_frequency",E,E,60,[[["self"]],["u64"]]],[11,"into_inner",R[1432],"Returns the closure as a trait-object and cancels the…",61,[[["self"]],[R[1433]]]],[0,"render","sdl2","2D accelerated rendering",N,N],[3,R[1437],R[1440],"Contains the description of an error returned by SDL",N,N],[3,R[1609],E,"A structure that contains information on the capabilities…",N,N],[12,"name",E,E,62,N],[12,"flags",E,E,62,N],[12,R[1653],E,E,62,N],[12,R[1654],E,E,62,N],[12,R[1655],E,E,62,N],[3,R[1617],E,"Manages what keeps a `SDL_Renderer` alive",N,N],[3,"Canvas",E,"Manages and owns a target (`Surface` or `Window`) and…",N,N],[3,R[1619],E,"Creates Textures that cannot outlive the creator",N,N],[3,R[1618],E,"The type that allows you to build Window-based renderers.",N,N],[3,R[1610],E,E,N,N],[12,"format",E,E,63,N],[12,"access",E,E,63,N],[12,"width",E,E,63,N],[12,"height",E,E,63,N],[3,"Texture",E,"A texture for a rendering context.",N,N],[3,R[1434],E,E,N,N],[4,R[1611],E,"Possible errors returned by targeting a `Canvas` to render…",N,N],[13,R[1437],E,E,64,N],[13,"NotSupported",E,E,64,N],[4,R[1612],E,E,N,N],[13,"Static",E,E,65,N],[13,"Streaming",E,E,65,N],[13,"Target",E,E,65,N],[4,"BlendMode",E,E,N,N],[13,"None",E,E,66,N],[13,"Blend",E,E,66,N],[13,"Add",E,E,66,N],[13,"Mod",E,E,66,N],[13,"Invalid",E,E,66,N],[4,R[1613],E,E,N,N],[13,R[1435],E,E,67,N],[13,R[1436],E,E,67,N],[13,R[1438],E,E,67,N],[13,R[1437],E,E,67,N],[4,R[1614],E,E,N,N],[13,R[1439],E,E,68,N],[13,"PitchMustBeMultipleOfTwoForFormat",E,E,68,N],[13,R[1442],E,E,68,N],[13,R[1443],E,E,68,N],[13,R[1438],E,E,68,N],[13,R[1444],E,E,68,N],[13,R[1437],E,E,68,N],[4,R[1615],E,E,N,N],[13,R[1439],E,E,69,N],[12,"plane",R[1441],E,69,N],[12,"value",E,E,69,N],[13,"InvalidPlaneLength",R[1440],E,69,N],[12,"plane",R[1441],E,69,N],[12,"length",E,E,69,N],[12,"pitch",E,E,69,N],[12,"height",E,E,69,N],[13,R[1442],R[1440],E,69,N],[13,R[1443],E,E,69,N],[13,R[1438],E,E,69,N],[13,R[1444],E,E,69,N],[13,"RectNotInsideTexture",E,E,69,N],[13,R[1437],E,E,69,N],[5,"drivers",E,"Gets an iterator of all render drivers compiled into the…",N,[[],[R[1445]]]],[6,"SurfaceCanvas",E,"Alias for a `Canvas` that was created out of a `Surface`",N,N],[6,"WindowCanvas",E,E,N,N],[8,R[1616],E,"Represents structs which can be the target of a…",N,N],[16,"Context",E,E,70,N],[11,"from_ll",E,E,62,[[[R[1673]]],[R[1446]]]],[11,"info",E,"Gets information about the rendering context.",71,[[["self"]],[R[1446]]]],[11,"raw",E,"Gets the raw pointer to the SDL_Renderer",71,N],[11,"from_ll",E,E,71,N],[11,R[1447],E,"Creates a 2D software rendering context for a surface.",72,[[["surface"]],[R[14],["string"]]]],[11,"surface",E,"Gets a reference to the associated surface of the Canvas",72,[[["self"]],[R[1411]]]],[11,"surface_mut",E,"Gets a mutable reference to the associated surface of the…",72,[[["self"]],[R[1411]]]],[11,"into_surface",E,"Gets the associated surface of the Canvas and destroys the…",72,[[["self"]],["surface"]]],[11,R[1449],E,R[1450],72,[[["self"]],[R[1451],[R[1448]]]]],[11,"window",E,"Gets a reference to the associated window of the Canvas",72,[[["self"]],["window"]]],[11,"window_mut",E,"Gets a mutable reference to the associated window of the…",72,[[["self"]],["window"]]],[11,"into_window",E,"Gets the associated window of the Canvas and destroys the…",72,[[["self"]],["window"]]],[11,R[1454],E,E,72,[[["self"]],[R[1407]]]],[11,R[1449],E,R[1450],72,[[["self"]],[R[1451],[R[1427]]]]],[11,"render_target_supported",E,"Determine whether a window supports the use of render…",72,[[["self"]],["bool"]]],[11,"with_texture_canvas",E,"Temporarily sets the target of `Canvas` to a `Texture`.…",72,[[["self"],["texture"],["f"]],[R[14],[R[1452]]]]],[11,"with_multiple_texture_canvas",E,"Same as `with_texture_canvas`, but allows to change…",72,[[["self"],["i"],["f"]],[R[14],[R[1452]]]]],[11,"new",E,"Initializes a new `CanvasBuilder`.",73,[[["window"]],[R[1453]]]],[11,"build",E,"Builds the renderer.",73,[[["self"]],[R[14],["windowcanvas",R[1334]]]]],[11,"index",E,"Sets the index of the rendering driver to initialize. If…",73,[[["self"],["u32"]],[R[1453]]]],[11,"software",E,"Set the renderer to a software fallback. This flag is…",73,[[["self"]],[R[1453]]]],[11,"accelerated",E,"Set the renderer to use hardware acceleration. This flag…",73,[[["self"]],[R[1453]]]],[11,"present_vsync",E,"Synchronize renderer `present` method calls with the…",73,[[["self"]],[R[1453]]]],[11,"target_texture",E,"Set the renderer to support rendering to a texture. This…",73,[[["self"]],[R[1453]]]],[11,"raw",E,E,74,N],[11,R[1454],E,E,74,[[["self"]],[R[1407]]]],[11,"create_texture",E,"Creates a texture for a rendering context.",74,[[["self"],["f"],[R[1552]],["u32"],["u32"]],[R[14],["texture",R[1455]]]]],[11,"create_texture_static",E,R[1456],74,[[["self"],["f"],["u32"],["u32"]],[R[14],["texture",R[1455]]]]],[11,"create_texture_streaming",E,R[1456],74,[[["self"],["f"],["u32"],["u32"]],[R[14],["texture",R[1455]]]]],[11,"create_texture_target",E,R[1456],74,[[["self"],["f"],["u32"],["u32"]],[R[14],["texture",R[1455]]]]],[11,"create_texture_from_surface",E,"Creates a texture from an existing surface.",74,[[["self"],["s"]],[R[14],["texture",R[1455]]]]],[11,"raw_create_texture",E,"Create a texture from its raw `SDL_Texture`.",74,N],[11,"raw",E,E,72,N],[11,"set_draw_color",E,"Sets the color used for drawing operations (Rect, Line and…",72,[[["self"],["c"]]]],[11,"draw_color",E,"Gets the color used for drawing operations (Rect, Line and…",72,[[["self"]],["color"]]],[11,R[1457],E,R[1463],72,[[["self"],[R[1458]]]]],[11,R[1464],E,"Gets the blend mode used for drawing operations.",72,[[["self"]],[R[1458]]]],[11,"clear",E,"Clears the current rendering target with the drawing color.",72,[[["self"]]]],[11,"present",E,"Updates the screen with any rendering performed since the…",72,[[["self"]]]],[11,"output_size",E,"Gets the output size of a rendering context.",72,[[["self"]],[R[14],["string"]]]],[11,"set_logical_size",E,"Sets a device independent resolution for rendering.",72,[[["self"],["u32"],["u32"]],[R[14],[R[1334]]]]],[11,"logical_size",E,"Gets device independent resolution for rendering.",72,N],[11,"set_viewport",E,"Sets the drawing area for rendering on the current target.",72,[[["self"],["r"]]]],[11,"viewport",E,"Gets the drawing area for the current target.",72,[[["self"]],["rect"]]],[11,R[1459],E,"Sets the clip rectangle for rendering on the specified…",72,[[["self"],["r"]]]],[11,"clip_rect",E,"Gets the clip rectangle for the current target.",72,[[["self"]],[R[42],["rect"]]]],[11,"set_scale",E,"Sets the drawing scale for rendering on the current target.",72,[[["self"],["f32"],["f32"]],[R[14],["string"]]]],[11,"scale",E,"Gets the drawing scale for the current target.",72,N],[11,"draw_point",E,"Draws a point on the current rendering target. Errors if…",72,[[["self"],["p"]],[R[14],["string"]]]],[11,"draw_points",E,"Draws multiple points on the current rendering target.…",72,[[["self"],["p"]],[R[14],["string"]]]],[11,"draw_line",E,"Draws a line on the current rendering target. Errors if…",72,[[["self"],["p1"],["p2"]],[R[14],["string"]]]],[11,"draw_lines",E,"Draws a series of connected lines on the current rendering…",72,[[["self"],["p"]],[R[14],["string"]]]],[11,"draw_rect",E,"Draws a rectangle on the current rendering target. Errors…",72,[[["self"],["rect"]],[R[14],["string"]]]],[11,"draw_rects",E,"Draws some number of rectangles on the current rendering…",72,N],[11,"fill_rect",E,"Fills a rectangle on the current rendering target with the…",72,[[["self"],["r"]],[R[14],["string"]]]],[11,"fill_rects",E,"Fills some number of rectangles on the current rendering…",72,N],[11,"copy",E,R[1460],72,[[["self"],["texture"],["r1"],["r2"]],[R[14],["string"]]]],[11,"copy_ex",E,R[1460],72,[[["self"],["texture"],["r1"],["r2"],["f64"],["p"],["bool"],["bool"]],[R[14],["string"]]]],[11,"read_pixels",E,"Reads pixels from the current rendering target. # Remarks…",72,[[["self"],["r"],[R[1407]]],[R[14],["vec","string"]]]],[11,"query",E,"Queries the attributes of the texture.",75,[[["self"]],[R[1553]]]],[11,R[1461],E,"Sets an additional color value multiplied into render copy…",75,[[["self"],["u8"],["u8"],["u8"]]]],[11,"color_mod",E,"Gets the additional color value multiplied into render…",75,N],[11,R[1462],E,"Sets an additional alpha value multiplied into render copy…",75,[[["self"],["u8"]]]],[11,"alpha_mod",E,"Gets the additional alpha value multiplied into render…",75,[[["self"]],["u8"]]],[11,R[1457],E,R[1463],75,[[["self"],[R[1458]]]]],[11,R[1464],E,"Gets the blend mode used for texture copy operations.",75,[[["self"]],[R[1458]]]],[11,"update",E,"Updates the given texture rectangle with new pixel data.",75,N],[11,"update_yuv",E,"Updates a rectangle within a planar YV12 or IYUV texture…",75,N],[11,"with_lock",E,"Locks the texture for write-only pixel access. The texture…",75,[[["self"],["r2"],["f"]],[R[14],["string"]]]],[11,"gl_bind_texture",E,"Binds an OpenGL/ES/ES2 texture to the current context for…",75,N],[11,"gl_unbind_texture",E,"Unbinds an OpenGL/ES/ES2 texture from the current context.",75,[[["self"]]]],[11,"gl_with_bind",E,"Binds and unbinds an OpenGL/ES/ES2 texture from the…",75,[[["self"],["f"]],["r"]]],[11,"raw",E,E,75,N],[0,"rwops","sdl2",E,N,N],[3,"RWops",R[1523],"A structure that provides an abstract interface to stream…",N,N],[11,"raw",E,E,76,N],[11,"from_ll",E,E,76,N],[11,R[1516],E,"Creates an SDL file stream.",76,[[["p"],["str"]],[R[14],["rwops","string"]]]],[11,"from_bytes",E,"Prepares a read-only memory buffer for use with `RWops`.",76,N],[11,"from_read",E,"Reads a `Read` object into a buffer and then passes it to…",76,[[[T],["vec"]],[R[14],["rwops","string"]]]],[11,"from_bytes_mut",E,"Prepares a read-write memory buffer for use with `RWops`.",76,N],[11,"len",E,"Gets the stream's total size in bytes.",76,[[["self"]],[R[42],[R[9]]]]],[11,R[38],E,E,76,[[["self"]],["bool"]]],[0,"log","sdl2",E,N,N],[4,"Category",R[1559],E,N,N],[13,R[1353],E,E,77,N],[13,"Error",E,E,77,N],[13,"Assert",E,E,77,N],[13,"System",E,E,77,N],[13,"Audio",E,E,77,N],[13,"Video",E,E,77,N],[13,"Render",E,E,77,N],[13,"Input",E,E,77,N],[13,"Test",E,E,77,N],[13,"Custom",E,E,77,N],[13,"Unknown",E,E,77,N],[4,"Priority",E,E,N,N],[13,"Verbose",E,E,78,N],[13,"Debug",E,E,78,N],[13,"Info",E,E,78,N],[13,"Warn",E,E,78,N],[13,"Error",E,E,78,N],[13,"Critical",E,E,78,N],[5,"set_output_function",E,E,N,N],[5,"log",E,"Standard log function which takes as priority INFO and as…",N,[[["str"]]]],[11,"audio","sdl2","Initializes the audio subsystem.",27,[[["self"]],[R[14],[R[1478],"string"]]]],[11,"event",E,"Initializes the event subsystem.",27,[[["self"]],[R[14],[R[1470],"string"]]]],[11,"joystick",E,"Initializes the joystick subsystem.",27,[[["self"]],[R[14],[R[1465],"string"]]]],[11,"haptic",E,"Initializes the haptic subsystem.",27,[[["self"]],[R[14],[R[1466],"string"]]]],[11,"game_controller",E,"Initializes the game controller subsystem.",27,[[["self"]],[R[14],[R[1467],"string"]]]],[11,"timer",E,"Initializes the timer subsystem.",27,[[["self"]],[R[14],[R[1469],"string"]]]],[11,"video",E,"Initializes the video subsystem.",27,[[["self"]],[R[14],[R[1425],"string"]]]],[11,"event_pump",E,"Obtains the SDL event pump.",27,[[["self"]],[R[14],[R[1431],"string"]]]],[11,"sdl",E,R[1468],79,[[["self"]],["sdl"]]],[11,"sdl",E,R[1468],19,[[["self"]],["sdl"]]],[11,"sdl",E,R[1468],21,[[["self"]],["sdl"]]],[11,"sdl",E,R[1468],12,[[["self"]],["sdl"]]],[11,"sdl",E,R[1468],2,[[["self"]],["sdl"]]],[11,"clone",E,E,60,[[["self"]],[R[1469]]]],[11,"sdl",E,R[1468],60,[[["self"]],["sdl"]]],[11,"clone",E,E,7,[[["self"]],[R[1470]]]],[11,"sdl",E,R[1468],7,[[["self"]],["sdl"]]],[0,"audio",E,"Audio Functions",N,N],[3,R[1434],R[1474],E,N,N],[3,R[1621],E,E,N,N],[12,"freq",E,E,80,N],[12,"format",E,E,80,N],[12,"channels",E,E,80,N],[3,R[1622],E,E,N,N],[12,"freq",E,"DSP frequency (samples per second). Set to None for the…",81,N],[12,"channels",E,"Number of separate audio channels. Set to None for the…",81,N],[12,"samples",E,"Audio buffer size in samples (power of 2). Set to None for…",81,N],[3,"AudioSpec",E,E,N,N],[12,"freq",E,E,82,N],[12,"format",E,E,82,N],[12,"channels",E,E,82,N],[12,"silence",E,E,82,N],[12,"samples",E,E,82,N],[12,"size",E,E,82,N],[3,"AudioQueue",E,R[1471],N,N],[3,R[1626],E,R[1471],N,N],[3,R[1649],E,"Similar to `std::sync::MutexGuard`, but for use with…",N,N],[3,"AudioCVT",E,E,N,N],[4,R[1512],E,E,N,N],[13,"U8",E,"Unsigned 8-bit samples",83,N],[13,"S8",E,"Signed 8-bit samples",83,N],[13,"U16LSB",E,"Unsigned 16-bit samples, little-endian",83,N],[13,"U16MSB",E,"Unsigned 16-bit samples, big-endian",83,N],[13,"S16LSB",E,"Signed 16-bit samples, little-endian",83,N],[13,"S16MSB",E,"Signed 16-bit samples, big-endian",83,N],[13,"S32LSB",E,"Signed 32-bit samples, little-endian",83,N],[13,"S32MSB",E,"Signed 32-bit samples, big-endian",83,N],[13,"F32LSB",E,"32-bit floating point samples, little-endian",83,N],[13,"F32MSB",E,"32-bit floating point samples, big-endian",83,N],[4,R[1623],E,E,N,N],[13,"Stopped",E,E,84,N],[13,"Playing",E,E,84,N],[13,"Paused",E,E,84,N],[5,"drivers",E,"Gets an iterator of all audio drivers compiled into the…",N,[[],[R[1445]]]],[8,R[1624],E,E,N,N],[16,"Channel",E,E,85,N],[10,R[367],E,E,85,N],[8,R[1625],E,"A phantom type for retrieving the `SDL_AudioFormat` of a…",N,N],[10,"audio_format",E,E,86,[[],[R[1475]]]],[10,"zero",E,E,86,[[],["self"]]],[11,R[1479],"sdl2",R[1477],79,[[["self"],["d"],[R[1472]],["f"]],[R[14],[R[1473],"string"]]]],[11,R[1480],E,R[1481],79,[[["self"],["d"],[R[1472]],["f"]],[R[14],[R[1473],"string"]]]],[11,"open_queue",E,"Opens a new audio device which uses queueing rather than…",79,[[["self"],["d"],[R[1472]]],[R[14],["audioqueue","string"]]]],[11,"current_audio_driver",E,E,79,[[["self"]],["str"]]],[11,"num_audio_playback_devices",E,E,79,[[["self"]],[R[42],["u32"]]]],[11,"audio_playback_device_name",E,E,79,[[["self"],["u32"]],[R[14],["string","string"]]]],[11,"u16_sys",R[1474],"Unsigned 16-bit samples, native endian",83,[[],[R[1475]]]],[11,"s16_sys",E,"Signed 16-bit samples, native endian",83,[[],[R[1475]]]],[11,"s32_sys",E,"Signed 32-bit samples, native endian",83,[[],[R[1475]]]],[11,"f32_sys",E,"32-bit floating point samples, native endian",83,[[],[R[1475]]]],[11,"load_wav",E,"Loads a WAVE from the file path.",80,[[["p"]],[R[14],[R[1476],"string"]]]],[11,"load_wav_rw",E,"Loads a WAVE from the data source.",80,[[["rwops"]],[R[14],[R[1476],"string"]]]],[11,"buffer",E,E,80,N],[11,"open_queue",E,R[1477],87,[[[R[1478]],["d"],[R[1472]]],[R[14],["audioqueue","string"]]]],[11,R[369],E,E,87,[[["self"]],[R[1478]]]],[11,"spec",E,E,87,[[["self"]],[R[1554]]]],[11,"status",E,E,87,[[["self"]],[R[1482]]]],[11,"pause",E,R[1483],87,[[["self"]]]],[11,"resume",E,R[1484],87,[[["self"]]]],[11,"queue",E,"Adds data to the audio queue.",87,N],[11,"size",E,E,87,[[["self"]],["u32"]]],[11,"clear",E,"Clears all data from the current audio queue.",87,[[["self"]]]],[11,R[1479],E,"Opens a new audio device for playback (given the desired…",88,[[[R[1478]],["d"],[R[1472]],["f"]],[R[14],[R[1473],"string"]]]],[11,R[1480],E,R[1481],88,[[[R[1478]],["d"],[R[1472]],["f"]],[R[14],[R[1473],"string"]]]],[11,R[369],E,E,88,[[["self"]],[R[1478]]]],[11,"spec",E,E,88,[[["self"]],[R[1554]]]],[11,"status",E,E,88,[[["self"]],[R[1482]]]],[11,"pause",E,R[1483],88,[[["self"]]]],[11,"resume",E,R[1484],88,[[["self"]]]],[11,"lock",E,"Locks the audio device using `SDL_LockAudioDevice`.",88,[[["self"]],["audiodevicelockguard"]]],[11,"close_and_get_callback",E,"Closes the audio device and saves the callback data from…",88,[[["self"]],["cb"]]],[11,"new",E,E,89,[[[R[1475]],["u8"],["i32"],[R[1475]],["u8"],["i32"]],[R[14],["audiocvt","string"]]]],[11,"convert",E,"Convert audio data to a desired audio format.",89,[[["self"],["vec",["u8"]]],["vec",["u8"]]]],[11,"is_conversion_needed",E,"Checks if any conversion is needed. i.e. if the buffer…",89,[[["self"]],["bool"]]],[11,"capacity",E,"Gets the buffer capacity that can contain both the…",89,[[["self"],[R[9]]],[R[9]]]],[0,"version","sdl2","Querying SDL Version",N,N],[3,"Version",R[1524],"A structure that contains information about the version of…",N,N],[12,"major",E,"major version",90,N],[12,"minor",E,"minor version",90,N],[12,"patch",E,"update version (patchlevel)",90,N],[5,"version",E,"Get the version of SDL that is linked against your program.",N,[[],["version"]]],[5,"revision",E,"Get the code revision of SDL that is linked against your…",N,[[],["string"]]],[5,"revision_number",E,"Get the revision number of SDL that is linked against your…",N,[[],["i32"]]],[11,"from_ll",E,"Convert a raw *SDL_version to Version.",90,[[[R[1674]]],["version"]]],[0,"messagebox","sdl2",E,N,N],[3,R[1630],R[1525],E,N,N],[3,R[1631],E,E,N,N],[3,R[1627],E,E,N,N],[12,"background",E,E,91,N],[12,"text",E,E,91,N],[12,"button_border",E,E,91,N],[12,"button_background",E,E,91,N],[12,"button_selected",E,E,91,N],[3,"ButtonData",E,"`button_id` is the integer that will be returned by…",N,N],[12,"flags",E,E,92,N],[12,"button_id",E,E,92,N],[12,"text",E,E,92,N],[4,R[1628],E,E,N,N],[13,"CloseButton",E,E,93,N],[13,"CustomButton",E,E,93,N],[4,R[1629],E,E,N,N],[13,R[1485],E,E,94,N],[13,"InvalidMessage",E,E,94,N],[13,"InvalidButton",E,"Second argument of the tuple (i32) corresponds to the…",94,N],[13,R[1437],E,E,94,N],[5,"show_simple_message_box",E,"Show a simple message box, meant to be informative only.",N,[[[R[1487]],["str"],["str"],["w"]],[R[14],["showmessageerror"]]]],[5,"show_message_box",E,"Show a customizable message box.",N,N],[18,"ERROR",E,E,95,N],[18,"WARNING",E,E,95,N],[18,"INFORMATION",E,E,95,N],[11,"empty",E,R[1486],95,[[],[R[1487]]]],[11,"all",E,R[1488],95,[[],[R[1487]]]],[11,"bits",E,R[1489],95,[[["self"]],["u32"]]],[11,R[1504],E,R[1490],95,[[["u32"]],[R[42],[R[1487]]]]],[11,R[1491],E,R[1492],95,[[["u32"]],[R[1487]]]],[11,R[38],E,R[1493],95,[[["self"]],["bool"]]],[11,"is_all",E,R[1494],95,[[["self"]],["bool"]]],[11,R[1502],E,R[1495],95,[[["self"],[R[1487]]],["bool"]]],[11,R[1513],E,R[1496],95,[[["self"],[R[1487]]],["bool"]]],[11,"insert",E,R[1497],95,[[["self"],[R[1487]]]]],[11,"remove",E,R[1498],95,[[["self"],[R[1487]]]]],[11,"toggle",E,R[1499],95,[[["self"],[R[1487]]]]],[11,"set",E,R[1500],95,[[["self"],[R[1487]],["bool"]]]],[18,"ESCAPEKEY_DEFAULT",E,E,96,N],[18,"RETURNKEY_DEFAULT",E,E,96,N],[18,"NOTHING",E,E,96,N],[11,"empty",E,R[1486],96,[[],[R[1501]]]],[11,"all",E,R[1488],96,[[],[R[1501]]]],[11,"bits",E,R[1489],96,[[["self"]],["u32"]]],[11,R[1504],E,R[1490],96,[[["u32"]],[R[42],[R[1501]]]]],[11,R[1491],E,R[1492],96,[[["u32"]],[R[1501]]]],[11,R[38],E,R[1493],96,[[["self"]],["bool"]]],[11,"is_all",E,R[1494],96,[[["self"]],["bool"]]],[11,R[1502],E,R[1495],96,[[["self"],[R[1501]]],["bool"]]],[11,R[1513],E,R[1496],96,[[["self"],[R[1501]]],["bool"]]],[11,"insert",E,R[1497],96,[[["self"],[R[1501]]]]],[11,"remove",E,R[1498],96,[[["self"],[R[1501]]]]],[11,"toggle",E,R[1499],96,[[["self"],[R[1501]]]]],[11,"set",E,R[1500],96,[[["self"],[R[1501]],["bool"]]]],[0,"hint","sdl2",E,N,N],[4,"Hint","sdl2::hint",E,N,N],[13,"Default",E,E,97,N],[13,"Normal",E,E,97,N],[13,"Override",E,E,97,N],[5,"set_video_minimize_on_focus_loss",E,R[1503],N,[[["bool"]],["bool"]]],[5,"set_video_minimize_on_focus_loss_with_priority",E,R[1503],N,[[["bool"],["hint"]],["bool"]]],[5,"get_video_minimize_on_focus_loss",E,R[1503],N,[[],["bool"]]],[5,"set",E,E,N,[[["str"],["str"]],["bool"]]],[5,"get",E,E,N,[[["str"]],[R[42],["string"]]]],[5,"set_with_priority",E,E,N,[[["str"],["str"],["hint"]],["bool"]]],[0,"ttf","sdl2","A binding for the library `SDL2_ttf`",N,N],[3,R[1634],R[1543],"A context manager for `SDL2_TTF` to manage C code…",N,N],[3,"Font",E,"A loaded TTF font.",N,N],[3,"FontStyle",E,"The styling of a font.",N,N],[3,R[1632],E,"Information about a specific glyph (character) in a font…",N,N],[12,"minx",E,E,98,N],[12,"maxx",E,E,98,N],[12,"miny",E,E,98,N],[12,"maxy",E,E,98,N],[12,"advance",E,E,98,N],[3,R[1633],E,"A builder for a font rendering.",N,N],[4,"InitError",E,"An error for when `sdl2_ttf` is attempted initialized…",N,N],[13,"InitializationError",E,E,99,N],[13,"AlreadyInitializedError",E,E,99,N],[4,"Hinting",E,"Information about the hinting of a font. See wikipedia",N,N],[13,"Normal",E,E,100,N],[13,"Light",E,E,100,N],[13,"Mono",E,E,100,N],[13,"None",E,E,100,N],[4,"FontError",E,"A font-related error.",N,N],[13,"InvalidLatin1Text",E,"A Latin-1 encoded byte string is invalid.",101,N],[13,R[1437],E,"A SDL2-related error occured.",101,N],[5,"init",E,"Initializes the truetype font API and returns a context…",N,[[],[R[14],["sdl2ttfcontext","initerror"]]]],[5,"has_been_initialized",E,"Returns whether library has been initialized already.",N,[[],["bool"]]],[5,R[1510],E,"Returns the version of the dynamically linked `SDL_TTF`…",N,[[],["version"]]],[18,"NORMAL",E,E,102,N],[18,"BOLD",E,E,102,N],[18,"ITALIC",E,E,102,N],[18,"UNDERLINE",E,E,102,N],[18,"STRIKETHROUGH",E,E,102,N],[11,"empty",E,R[1486],102,[[],[R[1505]]]],[11,"all",E,R[1488],102,[[],[R[1505]]]],[11,"bits",E,R[1489],102,[[["self"]],["i32"]]],[11,R[1504],E,R[1490],102,[[["i32"]],[R[42],[R[1505]]]]],[11,R[1491],E,R[1492],102,[[["i32"]],[R[1505]]]],[11,R[38],E,R[1493],102,[[["self"]],["bool"]]],[11,"is_all",E,R[1494],102,[[["self"]],["bool"]]],[11,R[1502],E,R[1495],102,[[["self"],[R[1505]]],["bool"]]],[11,R[1513],E,R[1496],102,[[["self"],[R[1505]]],["bool"]]],[11,"insert",E,R[1497],102,[[["self"],[R[1505]]]]],[11,"remove",E,R[1498],102,[[["self"],[R[1505]]]]],[11,"toggle",E,R[1499],102,[[["self"],[R[1505]]]]],[11,"set",E,R[1500],102,[[["self"],[R[1505]],["bool"]]]],[11,"solid",E,"Renders the text in solid mode. See the SDL2_TTF docs for…",103,[[["self"],[T]],[R[1506],["surface"]]]],[11,"shaded",E,"Renders the text in shaded mode. See the SDL2_TTF docs for…",103,[[["self"],[T],[T]],[R[1506],["surface"]]]],[11,"blended",E,"Renders the text in blended mode. See the SDL2_TTF docs…",103,[[["self"],[T]],[R[1506],["surface"]]]],[11,"blended_wrapped",E,"Renders the text in blended mode but wrapping the words if…",103,[[["self"],[T],["u32"]],[R[1506],["surface"]]]],[11,"render",E,R[1507],104,[[["self"],["str"]],[R[1508]]]],[11,"render_latin1",E,"Starts specifying a rendering of the given Latin-1-encoded…",104,N],[11,"render_char",E,R[1507],104,[[["self"],["char"]],[R[1508]]]],[11,"size_of",E,R[1509],104,[[["self"],["str"]],[R[1506]]]],[11,"size_of_latin1",E,R[1509],104,N],[11,"size_of_char",E,R[1509],104,[[["self"],["char"]],[R[1506]]]],[11,"get_style",E,"Returns the font's style flags.",104,[[["self"]],[R[1505]]]],[11,"set_style",E,"Sets the font's style flags.",104,[[["self"],[R[1505]]]]],[11,"get_outline_width",E,"Returns the width of the font's outline.",104,[[["self"]],["u16"]]],[11,"set_outline_width",E,"Sets the width of the font's outline.",104,[[["self"],["u16"]]]],[11,"get_hinting",E,"Returns the font's freetype hints.",104,[[["self"]],["hinting"]]],[11,"set_hinting",E,"Sets the font's freetype hints.",104,[[["self"],["hinting"]]]],[11,"get_kerning",E,"Returns whether the font is kerning.",104,[[["self"]],["bool"]]],[11,"set_kerning",E,"Sets whether the font should use kerning.",104,[[["self"],["bool"]]]],[11,"height",E,"Get font maximum total height.",104,[[["self"]],["i32"]]],[11,"ascent",E,"Returns the font's highest ascent (height above base).",104,[[["self"]],["i32"]]],[11,"descent",E,"Returns the font's lowest descent (height below base).…",104,[[["self"]],["i32"]]],[11,"recommended_line_spacing",E,"Returns the recommended line spacing for text rendered…",104,[[["self"]],["i32"]]],[11,"face_count",E,"Returns the number of faces in this font.",104,[[["self"]],["u16"]]],[11,"face_is_fixed_width",E,"Returns whether the font is monospaced.",104,[[["self"]],["bool"]]],[11,"face_family_name",E,"Returns the family name of the current font face.",104,[[["self"]],[R[42],["string"]]]],[11,"face_style_name",E,"Returns the name of the current font face.",104,[[["self"]],[R[42],["string"]]]],[11,"find_glyph",E,"Returns the index of the given character in this font face.",104,[[["self"],["char"]],[R[42],["u16"]]]],[11,"find_glyph_metrics",E,"Returns the glyph metrics of the given character in this…",104,[[["self"],["char"]],[R[42],[R[1555]]]]],[11,"load_font",E,"Loads a font from the given file with the given size in…",105,[[["self"],["p"],["u16"]],[R[14],["font","string"]]]],[11,"load_font_at_index",E,"Loads the font at the given index of the file, with the…",105,[[["self"],["p"],["u32"],["u16"]],[R[14],["font","string"]]]],[11,"load_font_from_rwops",E,"Loads a font from the given SDL2 rwops object with the…",105,[[["self"],["rwops"],["u16"]],[R[14],["font","string"]]]],[11,"load_font_at_index_from_rwops",E,"Loads the font at the given index of the SDL2 rwops object…",105,[[["self"],["rwops"],["u32"],["u16"]],[R[14],["font","string"]]]],[6,"FontResult",E,"The result of an `SDL2_TTF` font operation.",N,N],[0,"image","sdl2","A binding for the library `SDL2_image`",N,N],[3,"InitFlag",R[1526],E,N,N],[3,R[1650],E,"Context manager for `sdl2_image` to manage quitting. Can't…",N,N],[5,"init",E,"Initializes `SDL2_image` with `InitFlags`. If not every…",N,[[[R[1511]]],[R[14],["sdl2imagecontext","string"]]]],[5,R[1510],E,"Returns the version of the dynamically linked `SDL_image`…",N,[[],["version"]]],[8,R[1635],E,"Static method extensions for creating Surfaces",N,N],[10,R[1516],E,E,106,[[["p"]],[R[14],["string"]]]],[10,R[1529],E,E,106,N],[8,R[1636],E,"Method extensions to Surface for saving to disk",N,N],[10,"save",E,E,107,[[["self"],["p"]],[R[14],["string"]]]],[10,"save_rw",E,E,107,[[["self"],["rwops"]],[R[14],["string"]]]],[8,R[1637],E,"Method extensions for creating Textures from a…",N,N],[10,R[1530],E,E,108,[[["self"],["p"]],[R[14],["texture","string"]]]],[8,"ImageRWops",E,E,N,N],[10,"load",E,"load as a surface. except TGA",109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_typed",E,"load as a surface. This can load all supported image…",109,[[["self"],["str"]],[R[14],["surface","string"]]]],[10,"load_cur",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_ico",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_bmp",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_pnm",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_xpm",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_xcf",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_pcx",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_gif",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_jpg",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_tif",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_png",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_tga",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_lbm",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_xv",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"load_webp",E,E,109,[[["self"]],[R[14],["surface","string"]]]],[10,"is_cur",E,E,109,[[["self"]],["bool"]]],[10,"is_ico",E,E,109,[[["self"]],["bool"]]],[10,"is_bmp",E,E,109,[[["self"]],["bool"]]],[10,"is_pnm",E,E,109,[[["self"]],["bool"]]],[10,"is_xpm",E,E,109,[[["self"]],["bool"]]],[10,"is_xcf",E,E,109,[[["self"]],["bool"]]],[10,"is_pcx",E,E,109,[[["self"]],["bool"]]],[10,"is_gif",E,E,109,[[["self"]],["bool"]]],[10,"is_jpg",E,E,109,[[["self"]],["bool"]]],[10,"is_tif",E,E,109,[[["self"]],["bool"]]],[10,"is_png",E,E,109,[[["self"]],["bool"]]],[10,"is_lbm",E,E,109,[[["self"]],["bool"]]],[10,"is_xv",E,E,109,[[["self"]],["bool"]]],[10,"is_webp",E,E,109,[[["self"]],["bool"]]],[18,"JPG",E,E,110,N],[18,"PNG",E,E,110,N],[18,"TIF",E,E,110,N],[18,"WEBP",E,E,110,N],[11,"empty",E,R[1486],110,[[],[R[1511]]]],[11,"all",E,R[1488],110,[[],[R[1511]]]],[11,"bits",E,R[1489],110,[[["self"]],["u32"]]],[11,R[1504],E,R[1490],110,[[["u32"]],[R[42],[R[1511]]]]],[11,R[1491],E,R[1492],110,[[["u32"]],[R[1511]]]],[11,R[38],E,R[1493],110,[[["self"]],["bool"]]],[11,"is_all",E,R[1494],110,[[["self"]],["bool"]]],[11,R[1502],E,R[1495],110,[[["self"],[R[1511]]],["bool"]]],[11,R[1513],E,R[1496],110,[[["self"],[R[1511]]],["bool"]]],[11,"insert",E,R[1497],110,[[["self"],[R[1511]]]]],[11,"remove",E,R[1498],110,[[["self"],[R[1511]]]]],[11,"toggle",E,R[1499],110,[[["self"],[R[1511]]]]],[11,"set",E,R[1500],110,[[["self"],[R[1511]],["bool"]]]],[0,"mixer","sdl2","A binding for the library `SDL2_mixer`",N,N],[3,"InitFlag",R[1527],E,N,N],[3,R[1651],E,"Context manager for `sdl2_mixer` to manage init and quit",N,N],[3,"Chunk",E,"The internal format for an audio chunk.",N,N],[12,"raw",E,E,111,N],[12,"owned",E,E,111,N],[3,"Channel",E,"Sound effect channel.",N,N],[12,"0",E,E,112,N],[3,"Group",E,"Sound effect channel grouping.",N,N],[12,"0",E,E,113,N],[3,"Music",E,"This is an opaque data type used for Music data.",N,N],[12,"raw",E,E,114,N],[12,"owned",E,E,114,N],[4,"Fading",E,"Fader effect type enumerations",N,N],[13,"NoFading",E,E,115,N],[13,"FadingOut",E,E,115,N],[13,"FadingIn",E,E,115,N],[4,"MusicType",E,"Music type enumerations",N,N],[13,"MusicNone",E,E,116,N],[13,"MusicCmd",E,E,116,N],[13,"MusicWav",E,E,116,N],[13,"MusicMod",E,E,116,N],[13,"MusicMid",E,E,116,N],[13,"MusicOgg",E,E,116,N],[13,"MusicMp3",E,E,116,N],[13,"MusicMp3Mad",E,E,116,N],[13,"MusicFlac",E,E,116,N],[13,"MusicModPlug",E,E,116,N],[5,R[1510],E,"Returns the version of the dynamically linked `SDL_mixer`…",N,[[],["version"]]],[5,"init",E,"Loads dynamic libraries and prepares them for use. Flags…",N,[[[R[1511]]],[R[14],["sdl2mixercontext","string"]]]],[5,"open_audio",E,"Open the mixer with a certain audio format.",N,[[["i32"],[R[1475]],["i32"],["i32"]],[R[14],["string"]]]],[5,"close_audio",E,"Shutdown and cleanup the mixer API.",N,[[]]],[5,"query_spec",E,"Get the actual audio format in use by the opened audio…",N,[[],[R[14],["string"]]]],[5,"get_chunk_decoders_number",E,"Get the number of sample chunk decoders available from the…",N,[[],["i32"]]],[5,"get_chunk_decoder",E,"Get the name of the indexed sample chunk decoder.",N,[[["i32"]],["string"]]],[5,"channel",E,"Return a channel object.",N,[[["i32"]],["channel"]]],[5,"allocate_channels",E,"Set the number of channels being mixed.",N,[[["i32"]],["i32"]]],[5,"set_channel_finished",E,"When channel playback is halted, then the specified…",N,N],[5,"unset_channel_finished",E,"Unhooks the specified function set before, so no function…",N,[[]]],[5,"get_playing_channels_number",E,"Returns how many channels are currently playing.",N,[[],["i32"]]],[5,"get_paused_channels_number",E,"Returns how many channels are currently paused.",N,[[],["i32"]]],[5,"reserve_channels",E,"Reserve num channels from being used when playing samples…",N,[[["i32"]],["i32"]]],[5,"get_music_decoders_number",E,"Get the number of music decoders available.",N,[[],["i32"]]],[5,"get_music_decoder",E,"Get the name of the indexed music decoder.",N,[[["i32"]],["string"]]],[6,R[1512],E,E,N,N],[17,"AUDIO_U8",E,E,N,N],[17,"AUDIO_S8",E,E,N,N],[17,R[1660],E,E,N,N],[17,R[1661],E,E,N,N],[17,R[1662],E,E,N,N],[17,R[1663],E,E,N,N],[17,"AUDIO_U16",E,E,N,N],[17,"AUDIO_S16",E,E,N,N],[17,R[1664],E,E,N,N],[17,R[1665],E,E,N,N],[17,"AUDIO_S32",E,E,N,N],[17,R[1666],E,E,N,N],[17,R[1667],E,E,N,N],[17,"AUDIO_F32",E,E,N,N],[17,R[1668],E,E,N,N],[17,R[1669],E,E,N,N],[17,R[1670],E,E,N,N],[17,R[1671],E,E,N,N],[17,"DEFAULT_FORMAT",E,"The suggested default is signed 16bit samples in host byte…",N,N],[17,"DEFAULT_CHANNELS",E,"Default channels: Stereo.",N,N],[17,"DEFAULT_FREQUENCY",E,"Good default sample rate in Hz (samples per second) for PC…",N,N],[17,"MAX_VOLUME",E,"Maximum value for any volume setting.",N,N],[8,R[1638],E,"Loader trait for `RWops`",N,N],[10,"load_wav",E,R[1531],117,[[["self"]],[R[14],["chunk","string"]]]],[10,"load_music",E,E,117,[[["self"]],[R[14],["music","string"]]]],[18,"FLAC",E,E,118,N],[18,"MOD",E,E,118,N],[18,"MP3",E,E,118,N],[18,"OGG",E,E,118,N],[18,"MID",E,E,118,N],[11,"empty",E,R[1486],118,[[],[R[1511]]]],[11,"all",E,R[1488],118,[[],[R[1511]]]],[11,"bits",E,R[1489],118,[[["self"]],["u32"]]],[11,R[1504],E,R[1490],118,[[["u32"]],[R[42],[R[1511]]]]],[11,R[1491],E,R[1492],118,[[["u32"]],[R[1511]]]],[11,R[38],E,R[1493],118,[[["self"]],["bool"]]],[11,"is_all",E,R[1494],118,[[["self"]],["bool"]]],[11,R[1502],E,R[1495],118,[[["self"],[R[1511]]],["bool"]]],[11,R[1513],E,R[1496],118,[[["self"],[R[1511]]],["bool"]]],[11,"insert",E,R[1497],118,[[["self"],[R[1511]]]]],[11,"remove",E,R[1498],118,[[["self"],[R[1511]]]]],[11,"toggle",E,R[1499],118,[[["self"],[R[1511]]]]],[11,"set",E,R[1500],118,[[["self"],[R[1511]],["bool"]]]],[11,R[1516],E,"Load file for use as a sample.",111,[[["p"]],[R[14],["chunk","string"]]]],[11,R[1518],E,"Set chunk->volume to volume.",111,[[["self"],["i32"]],["i32"]]],[11,R[1517],E,"current volume for the chunk.",111,[[["self"]],["i32"]]],[11,"all",E,"Represent for all channels (-1)",112,[[],["channel"]]],[11,"post",E,"This is the MIX_CHANNEL_POST (-2)",112,[[],["channel"]]],[11,R[1518],E,"Set the volume for any allocated channel.",112,[[["self"],["i32"]],["i32"]]],[11,R[1517],E,"Returns the channels volume on scale of 0 to 128.",112,[[["self"]],["i32"]]],[11,"play",E,R[1514],112,[[["self"],["chunk"],["i32"]],[R[14],["channel","string"]]]],[11,"play_timed",E,E,112,[[["self"],["chunk"],["i32"],["i32"]],[R[14],["channel","string"]]]],[11,"fade_in",E,R[1514],112,[[["self"],["chunk"],["i32"],["i32"]],[R[14],["channel","string"]]]],[11,"fade_in_timed",E,E,112,[[["self"],["chunk"],["i32"],["i32"],["i32"]],[R[14],["channel","string"]]]],[11,"pause",E,"Pause channel, or all playing channels if -1 is passed in.",112,[[["self"]]]],[11,"resume",E,"Unpause channel, or all playing and paused channels if -1…",112,[[["self"]]]],[11,"halt",E,"Halt channel playback",112,[[["self"]]]],[11,"expire",E,"Halt channel playback, after ticks milliseconds.",112,[[["self"],["i32"]],["i32"]]],[11,"fade_out",E,"Gradually fade out which channel over ms milliseconds…",112,[[["self"],["i32"]],["i32"]]],[11,"is_playing",E,"if channel is playing, or not.",112,[[["self"]],["bool"]]],[11,"is_paused",E,"if channel is paused, or not.",112,[[["self"]],["bool"]]],[11,"get_fading",E,"if channel is fading in, out, or not",112,[[["self"]],["fading"]]],[11,"get_chunk",E,"Get the most recent sample chunk pointer played on channel.",112,[[["self"]],[R[42],["chunk"]]]],[11,"unregister_all_effects",E,"This removes all effects registered to channel.",112,[[["self"]],[R[14],["string"]]]],[11,"set_panning",E,"Sets a panning effect, where left and right is the volume…",112,[[["self"],["u8"],["u8"]],[R[14],["string"]]]],[11,"unset_panning",E,"Unregisters panning effect.",112,[[["self"]],[R[14],["string"]]]],[11,"set_distance",E,"This effect simulates a simple attenuation of volume due…",112,[[["self"],["u8"]],[R[14],["string"]]]],[11,"unset_distance",E,"Unregisters distance effect.",112,[[["self"]],[R[14],["string"]]]],[11,R[1515],E,"This effect emulates a simple 3D audio effect. angle…",112,[[["self"],["i16"],["u8"]],[R[14],["string"]]]],[11,"unset_position",E,"Unregisters position effect.",112,[[["self"]],[R[14],["string"]]]],[11,"set_reverse_stereo",E,"Simple reverse stereo, swaps left and right channel sound.…",112,[[["self"],["bool"]],[R[14],["string"]]]],[11,"add_channels_range",E,"Add channels starting at from up through to to group tag,…",113,[[["self"],["i32"],["i32"]],["i32"]]],[11,"add_channel",E,"Add which channel to group tag, or reset it's group to the…",113,[[["self"],["channel"]],["bool"]]],[11,"count",E,"Count the number of channels in group",113,[[["self"]],["i32"]]],[11,"find_available",E,"Find the first available (not playing) channel in group",113,[[["self"]],[R[42],["channel"]]]],[11,"find_oldest",E,"Find the oldest actively playing channel in group",113,[[["self"]],[R[42],["channel"]]]],[11,"find_newest",E,"Find the newest, most recently started, actively playing…",113,[[["self"]],[R[42],["channel"]]]],[11,"fade_out",E,"Gradually fade out channels in group over some…",113,[[["self"],["i32"]],["i32"]]],[11,"halt",E,"Halt playback on all channels in group.",113,[[["self"]]]],[11,R[1516],E,"Load music file to use.",114,[[["p"]],[R[14],["music","string"]]]],[11,"from_static_bytes",E,"Load music from a static byte buffer.",114,N],[11,"get_type",E,"The file format encoding of the music.",114,[[["self"]],["musictype"]]],[11,"play",E,"Play the loaded music loop times through from start to…",114,[[["self"],["i32"]],[R[14],["string"]]]],[11,"fade_in",E,"Fade in over ms milliseconds of time, the loaded music,…",114,[[["self"],["i32"],["i32"]],[R[14],["string"]]]],[11,"fade_in_from_pos",E,"Fade in over ms milliseconds of time, from position.",114,[[["self"],["i32"],["i32"],["f64"]],[R[14],["string"]]]],[11,R[1517],E,"Returns current volume",114,[[],["i32"]]],[11,R[1518],E,"Set the volume on a scale of 0 to 128. Values greater than…",114,[[["i32"]]]],[11,"pause",E,"Pause the music playback.",114,[[]]],[11,"resume",E,"Unpause the music.",114,[[]]],[11,"rewind",E,"Rewind the music to the start.",114,[[]]],[11,"set_pos",E,"Set the position of the currently playing music.",114,[[["f64"]],[R[14],["string"]]]],[11,"set_command",E,"Setup a command line music player to use to play music.",114,[[["str"]],[R[14],["string"]]]],[11,"halt",E,"Halt playback of music.",114,[[]]],[11,"fade_out",E,"Gradually fade out the music over ms milliseconds starting…",114,[[["i32"]],[R[14],["string"]]]],[11,"hook_finished",E,"Sets up a function to be called when music playback is…",114,N],[11,"unhook_finished",E,"A previously set up function would no longer be called…",114,[[]]],[11,"is_playing",E,"If music is actively playing, or not.",114,[[],["bool"]]],[11,"is_paused",E,"If music is paused, or not.",114,[[],["bool"]]],[11,"get_fading",E,"If music is fading, or not.",114,[[],["fading"]]],[0,"gfx","sdl2","A binding for the library `SDL2_gfx`",N,N],[0,"primitives",R[1519],"Graphic Primitives",N,N],[5,"set_font","sdl2::gfx::primitives","Sets or resets the current global font data.",N,[[["f"],["u32"],["u32"]]]],[5,"set_font_rotation",E,"Sets current global font character rotation steps.",N,[[["u32"]]]],[8,"ToColor",E,"generic Color type",N,N],[10,"as_rgba",E,E,119,N],[11,"as_u32",E,E,119,[[["self"]],["u32"]]],[8,R[1639],E,"For drawing with rust-sdl2 Renderer",N,N],[10,"pixel",E,E,120,[[["self"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"hline",E,E,120,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"vline",E,E,120,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"rectangle",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,R[1532],E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"box_",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,R[1533],E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"line",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"aa_line",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"thick_line",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["u8"],["c"]],[R[14],["string"]]]],[10,"circle",E,E,120,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"aa_circle",E,E,120,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,R[1534],E,E,120,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"arc",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"ellipse",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"aa_ellipse",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,R[1535],E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"pie",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"filled_pie",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"trigon",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"aa_trigon",E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,R[1536],E,E,120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[10,"polygon",E,E,120,N],[10,"aa_polygon",E,E,120,N],[10,R[1537],E,E,120,N],[10,R[1538],E,E,120,N],[10,"bezier",E,E,120,N],[10,"character",E,E,120,[[["self"],["i16"],["i16"],["char"],["c"]],[R[14],["string"]]]],[10,"string",E,E,120,[[["self"],["i16"],["i16"],["str"],["c"]],[R[14],["string"]]]],[0,"rotozoom",R[1519],"Surface Rotozoomer",N,N],[17,"PI","sdl2::gfx::rotozoom","Archimedes' constant (π)",N,N],[5,"get_zoom_size",E,E,N,N],[5,"get_rotozoom_size",E,E,N,N],[5,"get_rotozoom_xy_size",E,E,N,N],[8,R[1640],E,"`RotozoomSurface` for work with rust-sdl2 Surface type",N,N],[10,"rotozoom",E,"Rotates and zooms a surface and optional anti-aliasing.",121,[[["self"],["f64"],["f64"],["bool"]],[R[14],["surface","string"]]]],[10,R[1539],E,"Rotates and zooms a surface with different horizontal and…",121,[[["self"],["f64"],["f64"],["f64"],["bool"]],[R[14],["surface","string"]]]],[10,"zoom",E,"Zoom a surface by independent horizontal and vertical…",121,[[["self"],["f64"],["f64"],["bool"]],[R[14],["surface","string"]]]],[10,"shrink",E,"Shrink a surface by an integer ratio using averaging.",121,[[["self"],["i32"],["i32"]],[R[14],["surface","string"]]]],[10,R[1540],E,"Rotates a 8/16/24/32 bit surface in increments of 90…",121,[[["self"],["i32"]],[R[14],["surface","string"]]]],[0,"framerate",R[1519],"Framerate control",N,N],[3,"FPSManager",R[1528],"Structure holding the state and timing information of the…",N,N],[11,"new",E,"Create the framerate manager.",122,[[],["fpsmanager"]]],[11,"set_framerate",E,"Set the framerate in Hz.",122,[[["self"],["u32"]],[R[14],["string"]]]],[11,"get_framerate",E,"Return the current target framerate in Hz.",122,[[["self"]],["i32"]]],[11,"get_frame_count",E,"Return the current framecount.",122,[[["self"]],["i32"]]],[11,"delay",E,"Delay execution to maintain a constant framerate and…",122,[[["self"]],["u32"]]],[0,R[1658],R[1519],"MMX image filters",N,N],[5,"mmx_detect","sdl2::gfx::imagefilter","MMX detection routine (with override flag).",N,[[],["bool"]]],[5,"mmx_off",E,"Disable MMX check for filter functions and and force to…",N,[[]]],[5,"mmx_on",E,"Enable MMX check for filter functions and use MMX code if…",N,[[]]],[5,"add",E,"Filter using Add: D = saturation255(S1 + S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"mean",E,"Filter using Mean: D = S1/2 + S2/2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"sub",E,"Filter using Sub: D = saturation0(S1 - S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"abs_diff",E,"Filter using `AbsDiff`: D = | S1 - S2 |.",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"mult",E,"Filter using Mult: D = saturation255(S1 * S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"mult_nor",E,"Filter using `MultNor`: D = S1 * S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"mult_div_by2",E,"Filter using `MultDivby2`: D = saturation255(S1/2 * S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"mult_div_by4",E,"Filter using `MultDivby4`: D = saturation255(S1/2 * S2/2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"bit_and",E,"Filter using `BitAnd`: D = S1 & S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"bit_or",E,"Filter using `BitOr`: D = S1 | S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"div",E,"Filter using Div: D = S1 / S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"bit_negation",E,"Filter using `BitNegation`: D = !S.",N,[[["cvec",["u8"]]],[R[14],["cvec","string"]]]],[5,"add_byte",E,"Filter using `AddByte`: D = saturation255(S + C).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"add_uint",E,"Filter using `AddUint`: D = saturation255((S[i] + Cs[i %…",N,[[["cvec",["u8"]],["u32"]],[R[14],["cvec","string"]]]],[5,"add_byte_to_half",E,"Filter using `AddByteToHalf`: D = saturation255(S/2 + C).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"sub_byte",E,"Filter using `SubByte`: D = saturation0(S - C).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"sub_uint",E,"Filter using `SubUint`: D = saturation0(S[i] - Cs[i % 4]),…",N,[[["cvec",["u8"]],["u32"]],[R[14],["cvec","string"]]]],[5,"shift_right",E,"Filter using `ShiftRight`: D = saturation0(S >> N).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"shift_right_uint",E,"Filter using `ShiftRightUint`: D = saturation0((uint)S[i]…",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"mult_by_byte",E,"Filter using `MultByByte`: D = saturation255(S * C).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"shift_right_and_mult_by_byte",E,"Filter using `ShiftRightAndMultByByte`: D =…",N,[[["cvec",["u8"]],["u8"],["u8"]],[R[14],["cvec","string"]]]],[5,"shift_left_byte",E,"Filter using `ShiftLeftByte`: D = (S << N).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"shift_left_uint",E,"Filter using `ShiftLeftUint`: D = ((uint)S << N).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"shift_left",E,"Filter `ShiftLeft`: D = saturation255(S << N).",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"binarize_using_threshold",E,"Filter using `BinarizeUsingThreshold`: D = (S >= T) ? 255:0.",N,[[["cvec",["u8"]],["u8"]],[R[14],["cvec","string"]]]],[5,"clip_to_range",E,"Filter using `ClipToRange`: D = (S >= Tmin) & (S <= Tmax)…",N,[[["cvec",["u8"]],["u8"],["u8"]],[R[14],["cvec","string"]]]],[5,"normalize_linear",E,"Filter using `NormalizeLinear`: D = saturation255((Nmax -…",N,[[["cvec",["u8"]],["i32"],["i32"],["i32"],["i32"]],[R[14],["cvec","string"]]]],[11,"into","sdl2",E,27,[[["self"]],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,N],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[14]]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[47]]]],[11,R[12],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[R[14]]]],[11,"into",E,E,79,[[["self"]],[U]]],[11,R[16],E,E,79,[[["self"]],[T]]],[11,R[17],E,E,79,N],[11,"from",E,E,79,[[[T]],[T]]],[11,R[11],E,E,79,[[[U]],[R[14]]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[18],E,E,79,[[["self"]],[R[47]]]],[11,R[12],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[R[14]]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,N],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[14]]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[47]]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[R[14]]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,N],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[14]]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[47]]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[R[14]]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,N],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[14]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[47]]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[R[14]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,60,[[["self"]],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[11],E,E,60,[[[U]],[R[14]]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[18],E,E,60,[[["self"]],[R[47]]]],[11,R[12],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[R[14]]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[14]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[47]]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[R[14]]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[14]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[47]]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[110],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[110],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",R[1296],E,3,[[["self"]],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",R[1298],E,123,[[["self"]],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[41],E,E,123,[[["self"]],["i"]]],[11,R[11],E,E,123,[[[U]],[R[14]]]],[11,R[46],E,E,123,[[["self"]],[T]]],[11,R[18],E,E,123,[[["self"]],[R[47]]]],[11,R[12],E,E,123,[[["self"]],[T]]],[11,R[13],E,E,123,[[["self"]],[R[14]]]],[11,"into",E,E,124,[[["self"]],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[41],E,E,124,[[["self"]],["i"]]],[11,R[11],E,E,124,[[[U]],[R[14]]]],[11,R[46],E,E,124,[[["self"]],[T]]],[11,R[18],E,E,124,[[["self"]],[R[47]]]],[11,R[12],E,E,124,[[["self"]],[T]]],[11,R[13],E,E,124,[[["self"]],[R[14]]]],[11,"into",E,E,125,[[["self"]],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[41],E,E,125,[[["self"]],["i"]]],[11,R[11],E,E,125,[[[U]],[R[14]]]],[11,R[46],E,E,125,[[["self"]],[T]]],[11,R[18],E,E,125,[[["self"]],[R[47]]]],[11,R[12],E,E,125,[[["self"]],[T]]],[11,R[13],E,E,125,[[["self"]],[R[14]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,N],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[47]]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[14]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,N],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[14]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[47]]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[R[14]]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,N],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[14]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[47]]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[R[14]]]],[11,"into",R[1520],E,9,[[["self"]],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[110],E,E,9,[[["self"]],["string"]]],[11,R[11],E,E,9,[[[U]],[R[14]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[47]]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[R[14]]]],[11,"into",R[1335],E,13,[[["self"]],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[14]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[47]]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[R[14]]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,N],[11,"from",E,E,14,[[[T]],[T]]],[11,R[110],E,E,14,[[["self"]],["string"]]],[11,R[11],E,E,14,[[[U]],[R[14]]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[47]]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[R[14]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[14]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[47]]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[R[14]]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,N],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[14]]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[47]]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[R[14]]]],[11,"into",R[1344],E,20,[[["self"]],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[14]]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[47]]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[R[14]]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[110],E,E,15,[[["self"]],["string"]]],[11,R[11],E,E,15,[[[U]],[R[14]]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[47]]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[R[14]]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,N],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[14]]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[47]]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[R[14]]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,N],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[14]]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[47]]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[R[14]]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,N],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[14]]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[47]]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[R[14]]]],[11,"into",R[1348],E,22,[[["self"]],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[14]]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[47]]]],[11,R[12],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[R[14]]]],[11,"into",R[1384],E,25,[[["self"]],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,N],[11,"from",E,E,25,[[[T]],[T]]],[11,R[110],E,E,25,[[["self"]],["string"]]],[11,R[11],E,E,25,[[[U]],[R[14]]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[47]]]],[11,R[12],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[R[14]]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[14]]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[47]]]],[11,R[12],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[R[14]]]],[11,"into",E,E,126,[[["self"]],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[41],E,E,126,[[["self"]],["i"]]],[11,R[11],E,E,126,[[[U]],[R[14]]]],[11,R[46],E,E,126,[[["self"]],[T]]],[11,R[18],E,E,126,[[["self"]],[R[47]]]],[11,R[12],E,E,126,[[["self"]],[T]]],[11,R[13],E,E,126,[[["self"]],[R[14]]]],[11,"into",E,E,127,[[["self"]],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[41],E,E,127,[[["self"]],["i"]]],[11,R[11],E,E,127,[[[U]],[R[14]]]],[11,R[46],E,E,127,[[["self"]],[T]]],[11,R[18],E,E,127,[[["self"]],[R[47]]]],[11,R[12],E,E,127,[[["self"]],[T]]],[11,R[13],E,E,127,[[["self"]],[R[14]]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[14]]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[47]]]],[11,R[12],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[R[14]]]],[11,"into",E,E,29,[[["self"]],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[14]]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[47]]]],[11,R[12],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[R[14]]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,N],[11,"from",E,E,23,[[[T]],[T]]],[11,R[110],E,E,23,[[["self"]],["string"]]],[11,R[11],E,E,23,[[[U]],[R[14]]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[47]]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[R[14]]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,N],[11,"from",E,E,24,[[[T]],[T]]],[11,R[110],E,E,24,[[["self"]],["string"]]],[11,R[11],E,E,24,[[[U]],[R[14]]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[47]]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[R[14]]]],[11,"into",R[1406],E,33,[[["self"]],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,N],[11,"from",E,E,33,[[[T]],[T]]],[11,R[11],E,E,33,[[[U]],[R[14]]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[47]]]],[11,R[12],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[R[14]]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[11],E,E,34,[[[U]],[R[14]]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[47]]]],[11,R[12],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[R[14]]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,N],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[14]]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[47]]]],[11,R[12],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[R[14]]]],[11,"into",E,E,128,[[["self"]],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[41],E,E,128,[[["self"]],["i"]]],[11,R[11],E,E,128,[[[U]],[R[14]]]],[11,R[46],E,E,128,[[["self"]],[T]]],[11,R[18],E,E,128,[[["self"]],[R[47]]]],[11,R[12],E,E,128,[[["self"]],[T]]],[11,R[13],E,E,128,[[["self"]],[R[14]]]],[11,"into",E,E,129,[[["self"]],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[41],E,E,129,[[["self"]],["i"]]],[11,R[11],E,E,129,[[[U]],[R[14]]]],[11,R[46],E,E,129,[[["self"]],[T]]],[11,R[18],E,E,129,[[["self"]],[R[47]]]],[11,R[12],E,E,129,[[["self"]],[T]]],[11,R[13],E,E,129,[[["self"]],[R[14]]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[11],E,E,36,[[[U]],[R[14]]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[47]]]],[11,R[12],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[R[14]]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,N],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[14]]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[47]]]],[11,R[12],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[R[14]]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,N],[11,"from",E,E,31,[[[T]],[T]]],[11,R[11],E,E,31,[[[U]],[R[14]]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[47]]]],[11,R[12],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[R[14]]]],[11,"into",E,E,32,[[["self"]],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,N],[11,"from",E,E,32,[[[T]],[T]]],[11,R[11],E,E,32,[[[U]],[R[14]]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[47]]]],[11,R[12],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[R[14]]]],[11,"into",R[1541],E,37,[[["self"]],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,N],[11,"from",E,E,37,[[[T]],[T]]],[11,R[11],E,E,37,[[[U]],[R[14]]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[["self"]],[R[47]]]],[11,R[12],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[R[14]]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,N],[11,"from",E,E,38,[[[T]],[T]]],[11,R[11],E,E,38,[[[U]],[R[14]]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[["self"]],[R[47]]]],[11,R[12],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[R[14]]]],[11,"into",R[1521],E,130,[[["self"]],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[11],E,E,130,[[[U]],[R[14]]]],[11,R[46],E,E,130,[[["self"]],[T]]],[11,R[18],E,E,130,[[["self"]],[R[47]]]],[11,R[12],E,E,130,[[["self"]],[T]]],[11,R[13],E,E,130,[[["self"]],[R[14]]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[11],E,E,39,[[[U]],[R[14]]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[["self"]],[R[47]]]],[11,R[12],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[R[14]]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[11],E,E,40,[[[U]],[R[14]]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[["self"]],[R[47]]]],[11,R[12],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[R[14]]]],[11,"into",R[1522],E,44,[[["self"]],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[11],E,E,44,[[[U]],[R[14]]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[47]]]],[11,R[12],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[R[14]]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,N],[11,"from",E,E,41,[[[T]],[T]]],[11,R[11],E,E,41,[[[U]],[R[14]]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[["self"]],[R[47]]]],[11,R[12],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[R[14]]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[[U]],[R[14]]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[47]]]],[11,R[12],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[R[14]]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[11],E,E,45,[[[U]],[R[14]]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[47]]]],[11,R[12],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[R[14]]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,N],[11,"from",E,E,43,[[[T]],[T]]],[11,R[11],E,E,43,[[[U]],[R[14]]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[47]]]],[11,R[12],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[R[14]]]],[11,"into",R[1421],E,55,[[["self"]],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[11],E,E,55,[[[U]],[R[14]]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[47]]]],[11,R[12],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[R[14]]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,N],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[[U]],[R[14]]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[47]]]],[11,R[12],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[R[14]]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[11],E,E,56,[[[U]],[R[14]]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[47]]]],[11,R[12],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[R[14]]]],[11,"into",E,E,57,[[["self"]],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[11],E,E,57,[[[U]],[R[14]]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[47]]]],[11,R[12],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[R[14]]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[11],E,E,59,[[[U]],[R[14]]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[["self"]],[R[47]]]],[11,R[12],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[R[14]]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[11],E,E,58,[[[U]],[R[14]]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[["self"]],[R[47]]]],[11,R[12],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[R[14]]]],[11,"into",E,E,131,[[["self"]],[U]]],[11,R[16],E,E,131,[[["self"]],[T]]],[11,R[17],E,E,131,N],[11,"from",E,E,131,[[[T]],[T]]],[11,R[41],E,E,131,[[["self"]],["i"]]],[11,R[11],E,E,131,[[[U]],[R[14]]]],[11,R[46],E,E,131,[[["self"]],[T]]],[11,R[18],E,E,131,[[["self"]],[R[47]]]],[11,R[12],E,E,131,[[["self"]],[T]]],[11,R[13],E,E,131,[[["self"]],[R[14]]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,N],[11,"from",E,E,47,[[[T]],[T]]],[11,R[11],E,E,47,[[[U]],[R[14]]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[47]]]],[11,R[12],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[R[14]]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,N],[11,"from",E,E,48,[[[T]],[T]]],[11,R[11],E,E,48,[[[U]],[R[14]]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[47]]]],[11,R[12],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[R[14]]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,N],[11,"from",E,E,49,[[[T]],[T]]],[11,R[11],E,E,49,[[[U]],[R[14]]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[R[47]]]],[11,R[12],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[R[14]]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,N],[11,"from",E,E,50,[[[T]],[T]]],[11,R[11],E,E,50,[[[U]],[R[14]]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[R[47]]]],[11,R[12],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[R[14]]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[110],E,E,51,[[["self"]],["string"]]],[11,R[11],E,E,51,[[[U]],[R[14]]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[R[47]]]],[11,R[12],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[R[14]]]],[11,"into",R[1413],E,52,[[["self"]],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[11],E,E,52,[[[U]],[R[14]]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[R[47]]]],[11,R[12],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[R[14]]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[11],E,E,53,[[[U]],[R[14]]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[47]]]],[11,R[12],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[R[14]]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[11],E,E,54,[[[U]],[R[14]]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[47]]]],[11,R[12],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[R[14]]]],[11,"into",R[1432],E,61,[[["self"]],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[11],E,E,61,[[[U]],[R[14]]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[18],E,E,61,[[["self"]],[R[47]]]],[11,R[12],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[R[14]]]],[11,"into",R[1440],E,132,[[["self"]],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[110],E,E,132,[[["self"]],["string"]]],[11,R[11],E,E,132,[[[U]],[R[14]]]],[11,R[46],E,E,132,[[["self"]],[T]]],[11,R[18],E,E,132,[[["self"]],[R[47]]]],[11,R[12],E,E,132,[[["self"]],[T]]],[11,R[13],E,E,132,[[["self"]],[R[14]]]],[11,"into",E,E,62,[[["self"]],[U]]],[11,R[16],E,E,62,[[["self"]],[T]]],[11,R[17],E,E,62,N],[11,"from",E,E,62,[[[T]],[T]]],[11,R[11],E,E,62,[[[U]],[R[14]]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[18],E,E,62,[[["self"]],[R[47]]]],[11,R[12],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[R[14]]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[11],E,E,71,[[[U]],[R[14]]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[18],E,E,71,[[["self"]],[R[47]]]],[11,R[12],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[R[14]]]],[11,"into",E,E,72,[[["self"]],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[11],E,E,72,[[[U]],[R[14]]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[18],E,E,72,[[["self"]],[R[47]]]],[11,R[12],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[R[14]]]],[11,"into",E,E,74,[[["self"]],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[11],E,E,74,[[[U]],[R[14]]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[["self"]],[R[47]]]],[11,R[12],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[R[14]]]],[11,"into",E,E,73,[[["self"]],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[11],E,E,73,[[[U]],[R[14]]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[18],E,E,73,[[["self"]],[R[47]]]],[11,R[12],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[R[14]]]],[11,"into",E,E,63,[[["self"]],[U]]],[11,R[16],E,E,63,[[["self"]],[T]]],[11,R[17],E,E,63,N],[11,"from",E,E,63,[[[T]],[T]]],[11,R[11],E,E,63,[[[U]],[R[14]]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[18],E,E,63,[[["self"]],[R[47]]]],[11,R[12],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[R[14]]]],[11,"into",E,E,75,[[["self"]],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[11],E,E,75,[[[U]],[R[14]]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[18],E,E,75,[[["self"]],[R[47]]]],[11,R[12],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[R[14]]]],[11,"into",E,E,133,[[["self"]],[U]]],[11,R[16],E,E,133,[[["self"]],[T]]],[11,R[17],E,E,133,N],[11,"from",E,E,133,[[[T]],[T]]],[11,R[41],E,E,133,[[["self"]],["i"]]],[11,R[11],E,E,133,[[[U]],[R[14]]]],[11,R[46],E,E,133,[[["self"]],[T]]],[11,R[18],E,E,133,[[["self"]],[R[47]]]],[11,R[12],E,E,133,[[["self"]],[T]]],[11,R[13],E,E,133,[[["self"]],[R[14]]]],[11,"into",E,E,64,[[["self"]],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[110],E,E,64,[[["self"]],["string"]]],[11,R[11],E,E,64,[[[U]],[R[14]]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[18],E,E,64,[[["self"]],[R[47]]]],[11,R[12],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[R[14]]]],[11,"into",E,E,65,[[["self"]],[U]]],[11,R[16],E,E,65,[[["self"]],[T]]],[11,R[17],E,E,65,N],[11,"from",E,E,65,[[[T]],[T]]],[11,R[11],E,E,65,[[[U]],[R[14]]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[["self"]],[R[47]]]],[11,R[12],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[R[14]]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[16],E,E,66,[[["self"]],[T]]],[11,R[17],E,E,66,N],[11,"from",E,E,66,[[[T]],[T]]],[11,R[11],E,E,66,[[[U]],[R[14]]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[18],E,E,66,[[["self"]],[R[47]]]],[11,R[12],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[R[14]]]],[11,"into",E,E,67,[[["self"]],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[110],E,E,67,[[["self"]],["string"]]],[11,R[11],E,E,67,[[[U]],[R[14]]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[18],E,E,67,[[["self"]],[R[47]]]],[11,R[12],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[R[14]]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[110],E,E,68,[[["self"]],["string"]]],[11,R[11],E,E,68,[[[U]],[R[14]]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[18],E,E,68,[[["self"]],[R[47]]]],[11,R[12],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[R[14]]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[110],E,E,69,[[["self"]],["string"]]],[11,R[11],E,E,69,[[[U]],[R[14]]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[18],E,E,69,[[["self"]],[R[47]]]],[11,R[12],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[R[14]]]],[11,"into",R[1523],E,76,[[["self"]],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[11],E,E,76,[[[U]],[R[14]]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[18],E,E,76,[[["self"]],[R[47]]]],[11,R[12],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[R[14]]]],[11,"into",R[1559],E,77,[[["self"]],[U]]],[11,R[16],E,E,77,[[["self"]],[T]]],[11,R[17],E,E,77,N],[11,"from",E,E,77,[[[T]],[T]]],[11,R[11],E,E,77,[[[U]],[R[14]]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[18],E,E,77,[[["self"]],[R[47]]]],[11,R[12],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[R[14]]]],[11,"into",E,E,78,[[["self"]],[U]]],[11,R[16],E,E,78,[[["self"]],[T]]],[11,R[17],E,E,78,N],[11,"from",E,E,78,[[[T]],[T]]],[11,R[11],E,E,78,[[[U]],[R[14]]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[18],E,E,78,[[["self"]],[R[47]]]],[11,R[12],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[R[14]]]],[11,"into",R[1474],E,134,[[["self"]],[U]]],[11,R[16],E,E,134,[[["self"]],[T]]],[11,R[17],E,E,134,N],[11,"from",E,E,134,[[[T]],[T]]],[11,R[41],E,E,134,[[["self"]],["i"]]],[11,R[11],E,E,134,[[[U]],[R[14]]]],[11,R[46],E,E,134,[[["self"]],[T]]],[11,R[18],E,E,134,[[["self"]],[R[47]]]],[11,R[12],E,E,134,[[["self"]],[T]]],[11,R[13],E,E,134,[[["self"]],[R[14]]]],[11,"into",E,E,80,[[["self"]],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[11],E,E,80,[[[U]],[R[14]]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[18],E,E,80,[[["self"]],[R[47]]]],[11,R[12],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[R[14]]]],[11,"into",E,E,81,[[["self"]],[U]]],[11,R[16],E,E,81,[[["self"]],[T]]],[11,R[17],E,E,81,N],[11,"from",E,E,81,[[[T]],[T]]],[11,R[11],E,E,81,[[[U]],[R[14]]]],[11,R[46],E,E,81,[[["self"]],[T]]],[11,R[18],E,E,81,[[["self"]],[R[47]]]],[11,R[12],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[R[14]]]],[11,"into",E,E,82,[[["self"]],[U]]],[11,R[16],E,E,82,[[["self"]],[T]]],[11,R[17],E,E,82,N],[11,"from",E,E,82,[[[T]],[T]]],[11,R[11],E,E,82,[[[U]],[R[14]]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[18],E,E,82,[[["self"]],[R[47]]]],[11,R[12],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[R[14]]]],[11,"into",E,E,87,[[["self"]],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[11],E,E,87,[[[U]],[R[14]]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[["self"]],[R[47]]]],[11,R[12],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[R[14]]]],[11,"into",E,E,88,[[["self"]],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[11],E,E,88,[[[U]],[R[14]]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[18],E,E,88,[[["self"]],[R[47]]]],[11,R[12],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[R[14]]]],[11,"into",E,E,135,[[["self"]],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[11],E,E,135,[[[U]],[R[14]]]],[11,R[46],E,E,135,[[["self"]],[T]]],[11,R[18],E,E,135,[[["self"]],[R[47]]]],[11,R[12],E,E,135,[[["self"]],[T]]],[11,R[13],E,E,135,[[["self"]],[R[14]]]],[11,"into",E,E,89,[[["self"]],[U]]],[11,R[16],E,E,89,[[["self"]],[T]]],[11,R[17],E,E,89,N],[11,"from",E,E,89,[[[T]],[T]]],[11,R[11],E,E,89,[[[U]],[R[14]]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[18],E,E,89,[[["self"]],[R[47]]]],[11,R[12],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[R[14]]]],[11,"into",E,E,83,[[["self"]],[U]]],[11,R[16],E,E,83,[[["self"]],[T]]],[11,R[17],E,E,83,N],[11,"from",E,E,83,[[[T]],[T]]],[11,R[11],E,E,83,[[[U]],[R[14]]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[18],E,E,83,[[["self"]],[R[47]]]],[11,R[12],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[R[14]]]],[11,"into",E,E,84,[[["self"]],[U]]],[11,R[16],E,E,84,[[["self"]],[T]]],[11,R[17],E,E,84,N],[11,"from",E,E,84,[[[T]],[T]]],[11,R[11],E,E,84,[[[U]],[R[14]]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[["self"]],[R[47]]]],[11,R[12],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[R[14]]]],[11,"into",R[1524],E,90,[[["self"]],[U]]],[11,R[16],E,E,90,[[["self"]],[T]]],[11,R[17],E,E,90,N],[11,"from",E,E,90,[[[T]],[T]]],[11,R[110],E,E,90,[[["self"]],["string"]]],[11,R[11],E,E,90,[[[U]],[R[14]]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[18],E,E,90,[[["self"]],[R[47]]]],[11,R[12],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[R[14]]]],[11,"into",R[1525],E,95,[[["self"]],[U]]],[11,R[16],E,E,95,[[["self"]],[T]]],[11,R[17],E,E,95,N],[11,"from",E,E,95,[[[T]],[T]]],[11,R[11],E,E,95,[[[U]],[R[14]]]],[11,R[46],E,E,95,[[["self"]],[T]]],[11,R[18],E,E,95,[[["self"]],[R[47]]]],[11,R[12],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[R[14]]]],[11,"into",E,E,96,[[["self"]],[U]]],[11,R[16],E,E,96,[[["self"]],[T]]],[11,R[17],E,E,96,N],[11,"from",E,E,96,[[[T]],[T]]],[11,R[11],E,E,96,[[[U]],[R[14]]]],[11,R[46],E,E,96,[[["self"]],[T]]],[11,R[18],E,E,96,[[["self"]],[R[47]]]],[11,R[12],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[R[14]]]],[11,"into",E,E,91,[[["self"]],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[11],E,E,91,[[[U]],[R[14]]]],[11,R[46],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[["self"]],[R[47]]]],[11,R[12],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[R[14]]]],[11,"into",E,E,92,[[["self"]],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[11],E,E,92,[[[U]],[R[14]]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[18],E,E,92,[[["self"]],[R[47]]]],[11,R[12],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[R[14]]]],[11,"into",E,E,93,[[["self"]],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[11],E,E,93,[[[U]],[R[14]]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[18],E,E,93,[[["self"]],[R[47]]]],[11,R[12],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[R[14]]]],[11,"into",E,E,94,[[["self"]],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[110],E,E,94,[[["self"]],["string"]]],[11,R[11],E,E,94,[[[U]],[R[14]]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[18],E,E,94,[[["self"]],[R[47]]]],[11,R[12],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[R[14]]]],[11,"into","sdl2::hint",E,97,[[["self"]],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[11],E,E,97,[[[U]],[R[14]]]],[11,R[46],E,E,97,[[["self"]],[T]]],[11,R[18],E,E,97,[[["self"]],[R[47]]]],[11,R[12],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[R[14]]]],[11,"into",R[1543],E,105,[[["self"]],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[11],E,E,105,[[[U]],[R[14]]]],[11,R[46],E,E,105,[[["self"]],[T]]],[11,R[18],E,E,105,[[["self"]],[R[47]]]],[11,R[12],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[R[14]]]],[11,"into",E,E,104,[[["self"]],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[11],E,E,104,[[[U]],[R[14]]]],[11,R[46],E,E,104,[[["self"]],[T]]],[11,R[18],E,E,104,[[["self"]],[R[47]]]],[11,R[12],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[R[14]]]],[11,"into",E,E,102,[[["self"]],[U]]],[11,R[16],E,E,102,[[["self"]],[T]]],[11,R[17],E,E,102,N],[11,"from",E,E,102,[[[T]],[T]]],[11,R[11],E,E,102,[[[U]],[R[14]]]],[11,R[46],E,E,102,[[["self"]],[T]]],[11,R[18],E,E,102,[[["self"]],[R[47]]]],[11,R[12],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[R[14]]]],[11,"into",E,E,98,[[["self"]],[U]]],[11,R[16],E,E,98,[[["self"]],[T]]],[11,R[17],E,E,98,N],[11,"from",E,E,98,[[[T]],[T]]],[11,R[11],E,E,98,[[[U]],[R[14]]]],[11,R[46],E,E,98,[[["self"]],[T]]],[11,R[18],E,E,98,[[["self"]],[R[47]]]],[11,R[12],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[R[14]]]],[11,"into",E,E,103,[[["self"]],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[11],E,E,103,[[[U]],[R[14]]]],[11,R[46],E,E,103,[[["self"]],[T]]],[11,R[18],E,E,103,[[["self"]],[R[47]]]],[11,R[12],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[R[14]]]],[11,"into",E,E,99,[[["self"]],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[110],E,E,99,[[["self"]],["string"]]],[11,R[11],E,E,99,[[[U]],[R[14]]]],[11,R[46],E,E,99,[[["self"]],[T]]],[11,R[18],E,E,99,[[["self"]],[R[47]]]],[11,R[12],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[R[14]]]],[11,"into",E,E,100,[[["self"]],[U]]],[11,R[16],E,E,100,[[["self"]],[T]]],[11,R[17],E,E,100,N],[11,"from",E,E,100,[[[T]],[T]]],[11,R[11],E,E,100,[[[U]],[R[14]]]],[11,R[46],E,E,100,[[["self"]],[T]]],[11,R[18],E,E,100,[[["self"]],[R[47]]]],[11,R[12],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[R[14]]]],[11,"into",E,E,101,[[["self"]],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[110],E,E,101,[[["self"]],["string"]]],[11,R[11],E,E,101,[[[U]],[R[14]]]],[11,R[46],E,E,101,[[["self"]],[T]]],[11,R[18],E,E,101,[[["self"]],[R[47]]]],[11,R[12],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[R[14]]]],[11,"into",R[1526],E,110,[[["self"]],[U]]],[11,R[16],E,E,110,[[["self"]],[T]]],[11,R[17],E,E,110,N],[11,"from",E,E,110,[[[T]],[T]]],[11,R[110],E,E,110,[[["self"]],["string"]]],[11,R[11],E,E,110,[[[U]],[R[14]]]],[11,R[46],E,E,110,[[["self"]],[T]]],[11,R[18],E,E,110,[[["self"]],[R[47]]]],[11,R[12],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[R[14]]]],[11,"into",E,E,136,[[["self"]],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[11],E,E,136,[[[U]],[R[14]]]],[11,R[46],E,E,136,[[["self"]],[T]]],[11,R[18],E,E,136,[[["self"]],[R[47]]]],[11,R[12],E,E,136,[[["self"]],[T]]],[11,R[13],E,E,136,[[["self"]],[R[14]]]],[11,"into",R[1527],E,118,[[["self"]],[U]]],[11,R[16],E,E,118,[[["self"]],[T]]],[11,R[17],E,E,118,N],[11,"from",E,E,118,[[[T]],[T]]],[11,R[110],E,E,118,[[["self"]],["string"]]],[11,R[11],E,E,118,[[[U]],[R[14]]]],[11,R[46],E,E,118,[[["self"]],[T]]],[11,R[18],E,E,118,[[["self"]],[R[47]]]],[11,R[12],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[R[14]]]],[11,"into",E,E,137,[[["self"]],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[11],E,E,137,[[[U]],[R[14]]]],[11,R[46],E,E,137,[[["self"]],[T]]],[11,R[18],E,E,137,[[["self"]],[R[47]]]],[11,R[12],E,E,137,[[["self"]],[T]]],[11,R[13],E,E,137,[[["self"]],[R[14]]]],[11,"into",E,E,111,[[["self"]],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[11],E,E,111,[[[U]],[R[14]]]],[11,R[46],E,E,111,[[["self"]],[T]]],[11,R[18],E,E,111,[[["self"]],[R[47]]]],[11,R[12],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[R[14]]]],[11,"into",E,E,112,[[["self"]],[U]]],[11,R[16],E,E,112,[[["self"]],[T]]],[11,R[17],E,E,112,N],[11,"from",E,E,112,[[[T]],[T]]],[11,R[11],E,E,112,[[[U]],[R[14]]]],[11,R[46],E,E,112,[[["self"]],[T]]],[11,R[18],E,E,112,[[["self"]],[R[47]]]],[11,R[12],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[R[14]]]],[11,"into",E,E,113,[[["self"]],[U]]],[11,R[16],E,E,113,[[["self"]],[T]]],[11,R[17],E,E,113,N],[11,"from",E,E,113,[[[T]],[T]]],[11,R[11],E,E,113,[[[U]],[R[14]]]],[11,R[46],E,E,113,[[["self"]],[T]]],[11,R[18],E,E,113,[[["self"]],[R[47]]]],[11,R[12],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[R[14]]]],[11,"into",E,E,114,[[["self"]],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[11],E,E,114,[[[U]],[R[14]]]],[11,R[46],E,E,114,[[["self"]],[T]]],[11,R[18],E,E,114,[[["self"]],[R[47]]]],[11,R[12],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[R[14]]]],[11,"into",E,E,115,[[["self"]],[U]]],[11,R[16],E,E,115,[[["self"]],[T]]],[11,R[17],E,E,115,N],[11,"from",E,E,115,[[[T]],[T]]],[11,R[11],E,E,115,[[[U]],[R[14]]]],[11,R[46],E,E,115,[[["self"]],[T]]],[11,R[18],E,E,115,[[["self"]],[R[47]]]],[11,R[12],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[R[14]]]],[11,"into",E,E,116,[[["self"]],[U]]],[11,R[16],E,E,116,[[["self"]],[T]]],[11,R[17],E,E,116,N],[11,"from",E,E,116,[[[T]],[T]]],[11,R[11],E,E,116,[[[U]],[R[14]]]],[11,R[46],E,E,116,[[["self"]],[T]]],[11,R[18],E,E,116,[[["self"]],[R[47]]]],[11,R[12],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[R[14]]]],[11,"into",R[1528],E,122,[[["self"]],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[11],E,E,122,[[[U]],[R[14]]]],[11,R[46],E,E,122,[[["self"]],[T]]],[11,R[18],E,E,122,[[["self"]],[R[47]]]],[11,R[12],E,E,122,[[["self"]],[T]]],[11,R[13],E,E,122,[[["self"]],[R[14]]]],[11,R[1516],R[1521],"Loads an SDL Surface from a file",39,[[["p"]],[R[14],["surface","string"]]]],[11,R[1529],E,"Loads an SDL Surface from XPM data",39,N],[11,"save",E,"Saves an SDL Surface to a file",39,[[["self"],["p"]],[R[14],["string"]]]],[11,"save_rw",E,"Saves an SDL Surface to an RWops",39,[[["self"],["rwops"]],[R[14],["string"]]]],[11,R[1530],R[1440],"Loads an SDL Texture from a file",74,[[["self"],["p"]],[R[14],["texture","string"]]]],[11,"load",R[1523],E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_typed",E,E,76,[[["self"],["str"]],[R[14],["surface","string"]]]],[11,"load_cur",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_ico",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_bmp",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_pnm",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_xpm",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_xcf",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_pcx",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_gif",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_jpg",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_tif",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_png",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_tga",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_lbm",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_xv",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"load_webp",E,E,76,[[["self"]],[R[14],["surface","string"]]]],[11,"is_cur",E,E,76,[[["self"]],["bool"]]],[11,"is_ico",E,E,76,[[["self"]],["bool"]]],[11,"is_bmp",E,E,76,[[["self"]],["bool"]]],[11,"is_pnm",E,E,76,[[["self"]],["bool"]]],[11,"is_xpm",E,E,76,[[["self"]],["bool"]]],[11,"is_xcf",E,E,76,[[["self"]],["bool"]]],[11,"is_pcx",E,E,76,[[["self"]],["bool"]]],[11,"is_gif",E,E,76,[[["self"]],["bool"]]],[11,"is_jpg",E,E,76,[[["self"]],["bool"]]],[11,"is_tif",E,E,76,[[["self"]],["bool"]]],[11,"is_png",E,E,76,[[["self"]],["bool"]]],[11,"is_lbm",E,E,76,[[["self"]],["bool"]]],[11,"is_xv",E,E,76,[[["self"]],["bool"]]],[11,"is_webp",E,E,76,[[["self"]],["bool"]]],[11,"load_wav",E,R[1531],76,[[["self"]],[R[14],["chunk","string"]]]],[11,"load_music",E,"Load src for use as music.",76,[[["self"]],[R[14],["music","string"]]]],[11,"as_rgba",R[1522],E,41,N],[11,"pixel",R[1440],E,72,[[["self"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"hline",E,E,72,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"vline",E,E,72,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"rectangle",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,R[1532],E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"box_",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,R[1533],E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"line",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"aa_line",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"thick_line",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["u8"],["c"]],[R[14],["string"]]]],[11,"circle",E,E,72,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"aa_circle",E,E,72,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,R[1534],E,E,72,[[["self"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"arc",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"ellipse",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"aa_ellipse",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,R[1535],E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"pie",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"filled_pie",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"trigon",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"aa_trigon",E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,R[1536],E,E,72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],[R[14],["string"]]]],[11,"polygon",E,E,72,N],[11,"aa_polygon",E,E,72,N],[11,R[1537],E,E,72,N],[11,R[1538],E,E,72,N],[11,"bezier",E,E,72,N],[11,"character",E,E,72,[[["self"],["i16"],["i16"],["char"],["c"]],[R[14],["string"]]]],[11,"string",E,E,72,[[["self"],["i16"],["i16"],["str"],["c"]],[R[14],["string"]]]],[11,"rotozoom",R[1521],E,39,[[["self"],["f64"],["f64"],["bool"]],[R[14],["surface","string"]]]],[11,R[1539],E,E,39,[[["self"],["f64"],["f64"],["f64"],["bool"]],[R[14],["surface","string"]]]],[11,"zoom",E,E,39,[[["self"],["f64"],["f64"],["bool"]],[R[14],["surface","string"]]]],[11,"shrink",E,E,39,[[["self"],["i32"],["i32"]],[R[14],["surface","string"]]]],[11,R[1540],E,E,39,[[["self"],["i32"]],[R[14],["surface","string"]]]],[11,"into",R[1541],E,37,[[["self"]],[R[1573]]]],[11,"into",E,E,37,N],[11,"into",E,E,38,[[["self"]],[R[1556]]]],[11,"into",E,E,38,N],[11,"into",R[1522],E,41,[[["self"]],["sdl_color"]]],[11,"into",E,E,43,[[["self"]],["uint32_t"]]],[11,"into",R[1525],E,91,[[["self"]],[R[1557]]]],[11,"extend",R[1384],E,25,[[["self"],[T]]]],[11,"extend",R[1525],E,95,[[["self"],[T]]]],[11,"extend",E,E,96,[[["self"],[T]]]],[11,"extend",R[1543],E,102,[[["self"],[T]]]],[11,"extend",R[1526],E,110,[[["self"],[T]]]],[11,"extend",R[1527],E,118,[[["self"],[T]]]],[11,"next",R[1298],E,123,[[["self"]],[R[42],["event"]]]],[11,"next",E,E,124,[[["self"]],[R[42],["event"]]]],[11,"next",E,E,125,[[["self"]],[R[42],["event"]]]],[11,"next",R[1384],E,126,[[["self"]],[R[42]]]],[11,"next",E,E,127,[[["self"]],[R[42],[R[1383]]]]],[11,"next",R[1406],E,128,[[["self"]],[R[42]]]],[11,"next",E,E,129,[[["self"]],[R[42],[R[1386]]]]],[11,"next",R[1421],E,131,[[["self"]],[R[42],["str"]]]],[11,R[985],E,E,131,N],[11,"next",R[1440],E,133,[[["self"]],[R[42],[R[1446]]]]],[11,R[985],E,E,133,N],[11,"next",R[1474],E,134,[[["self"]],[R[42],["str"]]]],[11,R[985],E,E,134,N],[11,R[1542],R[1384],E,25,[[["self"],["mod"]],[R[42],[R[1558]]]]],[11,"lt",E,E,25,[[["self"],["mod"]],["bool"]]],[11,"le",E,E,25,[[["self"],["mod"]],["bool"]]],[11,"gt",E,E,25,[[["self"],["mod"]],["bool"]]],[11,"ge",E,E,25,[[["self"],["mod"]],["bool"]]],[11,R[1542],R[1525],E,95,[[["self"],[R[1487]]],[R[42],[R[1558]]]]],[11,"lt",E,E,95,[[["self"],[R[1487]]],["bool"]]],[11,"le",E,E,95,[[["self"],[R[1487]]],["bool"]]],[11,"gt",E,E,95,[[["self"],[R[1487]]],["bool"]]],[11,"ge",E,E,95,[[["self"],[R[1487]]],["bool"]]],[11,R[1542],E,E,96,[[["self"],[R[1501]]],[R[42],[R[1558]]]]],[11,"lt",E,E,96,[[["self"],[R[1501]]],["bool"]]],[11,"le",E,E,96,[[["self"],[R[1501]]],["bool"]]],[11,"gt",E,E,96,[[["self"],[R[1501]]],["bool"]]],[11,"ge",E,E,96,[[["self"],[R[1501]]],["bool"]]],[11,R[1542],R[1543],E,102,[[["self"],[R[1505]]],[R[42],[R[1558]]]]],[11,"lt",E,E,102,[[["self"],[R[1505]]],["bool"]]],[11,"le",E,E,102,[[["self"],[R[1505]]],["bool"]]],[11,"gt",E,E,102,[[["self"],[R[1505]]],["bool"]]],[11,"ge",E,E,102,[[["self"],[R[1505]]],["bool"]]],[11,R[1542],R[1526],E,110,[[["self"],[R[1511]]],[R[42],[R[1558]]]]],[11,"lt",E,E,110,[[["self"],[R[1511]]],["bool"]]],[11,"le",E,E,110,[[["self"],[R[1511]]],["bool"]]],[11,"gt",E,E,110,[[["self"],[R[1511]]],["bool"]]],[11,"ge",E,E,110,[[["self"],[R[1511]]],["bool"]]],[11,R[1542],R[1527],E,118,[[["self"],[R[1511]]],[R[42],[R[1558]]]]],[11,"lt",E,E,118,[[["self"],[R[1511]]],["bool"]]],[11,"le",E,E,118,[[["self"],[R[1511]]],["bool"]]],[11,"gt",E,E,118,[[["self"],[R[1511]]],["bool"]]],[11,"ge",E,E,118,[[["self"],[R[1511]]],["bool"]]],[11,"default",E,E,113,[[],["group"]]],[11,"as_mut",R[1541],E,37,[[["self"]],[R[1573]]]],[11,"as_mut",E,E,38,[[["self"]],[R[1556]]]],[11,"as_mut",R[1521],E,39,[[["self"]],[R[1411]]]],[11,"eq",R[1298],E,4,[[["self"],[R[1332]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1544]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1544]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["event"]],["bool"]]],[11,"eq",R[1335],E,10,[[["self"],[R[1545]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["guid"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["hatstate"]],["bool"]]],[11,"eq",R[1344],E,16,[[["self"],["axis"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["button"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[1546]]],["bool"]]],[11,"eq",R[1384],E,23,[[["self"],["keycode"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[1383]]],["bool"]]],[11,"eq",E,E,25,[[["self"],["mod"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["mod"]],["bool"]]],[11,"eq",R[1406],E,33,[[["self"],[R[1385]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[1385]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[1547]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[1548]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[1548]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[1386]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[1387]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[1387]]],["bool"]]],[11,"eq",R[1541],E,37,[[["self"],["rect"]],["bool"]]],[11,"eq",E,E,38,[[["self"],["point"]],["bool"]]],[11,"eq",R[1522],E,41,[[["self"],["color"]],["bool"]]],[11,"ne",E,E,41,[[["self"],["color"]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[1407]]],["bool"]]],[11,"eq",R[1421],E,47,[[["self"],[R[1549]]],["bool"]]],[11,"ne",E,E,47,[[["self"],[R[1549]]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[1422]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[1422]]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[1430]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[1550]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[1550]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[1551]]],["bool"]]],[11,"eq",R[1440],E,65,[[["self"],[R[1552]]],["bool"]]],[11,"eq",E,E,62,[[["self"],[R[1446]]],["bool"]]],[11,"ne",E,E,62,[[["self"],[R[1446]]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[1458]]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[1553]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[1553]]],["bool"]]],[11,"eq",R[1559],E,77,[[["self"],["category"]],["bool"]]],[11,"eq",E,E,78,[[["self"],["priority"]],["bool"]]],[11,"eq","sdl2",E,0,[[["self"],["error"]],["bool"]]],[11,"eq",R[1474],E,83,[[["self"],[R[1475]]],["bool"]]],[11,"eq",E,E,84,[[["self"],[R[1482]]],["bool"]]],[11,"eq",E,E,82,[[["self"],[R[1554]]],["bool"]]],[11,"ne",E,E,82,[[["self"],[R[1554]]],["bool"]]],[11,"eq",R[1524],E,90,[[["self"],["version"]],["bool"]]],[11,"ne",E,E,90,[[["self"],["version"]],["bool"]]],[11,"eq",R[1525],E,95,[[["self"],[R[1487]]],["bool"]]],[11,"ne",E,E,95,[[["self"],[R[1487]]],["bool"]]],[11,"eq",E,E,96,[[["self"],[R[1501]]],["bool"]]],[11,"ne",E,E,96,[[["self"],[R[1501]]],["bool"]]],[11,"eq",R[1543],E,102,[[["self"],[R[1505]]],["bool"]]],[11,"ne",E,E,102,[[["self"],[R[1505]]],["bool"]]],[11,"eq",E,E,100,[[["self"],["hinting"]],["bool"]]],[11,"eq",E,E,98,[[["self"],[R[1555]]],["bool"]]],[11,"ne",E,E,98,[[["self"],[R[1555]]],["bool"]]],[11,"eq",R[1526],E,110,[[["self"],[R[1511]]],["bool"]]],[11,"ne",E,E,110,[[["self"],[R[1511]]],["bool"]]],[11,"eq",R[1527],E,118,[[["self"],[R[1511]]],["bool"]]],[11,"ne",E,E,118,[[["self"],[R[1511]]],["bool"]]],[11,"eq",E,E,111,[[["self"],["chunk"]],["bool"]]],[11,"ne",E,E,111,[[["self"],["chunk"]],["bool"]]],[11,"eq",E,E,115,[[["self"],["fading"]],["bool"]]],[11,"eq",E,E,112,[[["self"],["channel"]],["bool"]]],[11,"ne",E,E,112,[[["self"],["channel"]],["bool"]]],[11,"eq",E,E,116,[[["self"],["musictype"]],["bool"]]],[11,"eq",E,E,114,[[["self"],["music"]],["bool"]]],[11,"ne",E,E,114,[[["self"],["music"]],["bool"]]],[11,"eq","sdl2",E,1,[[["self"],[R[1334]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1334]]],["bool"]]],[11,"from",R[1541],E,37,[[[R[1573]]],["rect"]]],[11,"from",E,E,37,N],[11,"from",E,E,38,[[[R[1556]]],["point"]]],[11,"from",E,E,38,N],[11,"from",R[1522],E,41,[[["sdl_color"]],["color"]]],[11,"from",E,E,41,N],[11,"from",E,E,41,N],[11,"from",E,E,43,[[[R[1410]]],[R[1407]]]],[11,"from",R[1421],E,50,[[["i32"]],["self"]]],[11,"from",E,E,59,[[[R[1427]]],["window"]]],[11,"from",R[1440],E,73,[[["window"]],[R[1453]]]],[11,"from",R[1525],E,91,[[[R[1557]]],["messageboxcolorscheme"]]],[11,R[110],R[1527],E,118,[[["self"]],["string"]]],[11,"as_ref",R[1541],E,37,[[["self"]],[R[1573]]]],[11,"as_ref",E,E,38,[[["self"]],[R[1556]]]],[11,"as_ref",R[1521],E,40,[[["self"]],[R[1411]]]],[11,"as_ref",E,E,39,[[["self"]],[R[1411]]]],[11,"cmp",R[1384],E,25,[[["self"],["mod"]],[R[1558]]]],[11,"cmp",R[1525],E,95,[[["self"],[R[1487]]],[R[1558]]]],[11,"cmp",E,E,96,[[["self"],[R[1501]]],[R[1558]]]],[11,"cmp",R[1543],E,102,[[["self"],[R[1505]]],[R[1558]]]],[11,"cmp",R[1526],E,110,[[["self"],[R[1511]]],[R[1558]]]],[11,"cmp",R[1527],E,118,[[["self"],[R[1511]]],[R[1558]]]],[11,"clone",R[1298],E,4,[[["self"]],[R[1332]]]],[11,"clone",E,E,5,[[["self"]],[R[1544]]]],[11,"clone",E,E,6,[[["self"]],["event"]]],[11,"clone",R[1335],E,10,[[["self"]],[R[1545]]]],[11,"clone",E,E,14,[[["self"]],["guid"]]],[11,"clone",E,E,11,[[["self"]],["hatstate"]]],[11,"clone",R[1344],E,16,[[["self"]],["axis"]]],[11,"clone",E,E,17,[[["self"]],["button"]]],[11,"clone",E,E,18,[[["self"]],[R[1546]]]],[11,"clone",R[1384],E,23,[[["self"]],["keycode"]]],[11,"clone",E,E,24,[[["self"]],[R[1383]]]],[11,"clone",E,E,25,[[["self"]],["mod"]]],[11,"clone",R[1406],E,33,[[["self"]],[R[1385]]]],[11,"clone",E,E,30,[[["self"]],[R[1547]]]],[11,"clone",E,E,31,[[["self"]],[R[1548]]]],[11,"clone",E,E,32,[[["self"]],[R[1386]]]],[11,"clone",E,E,35,[[["self"]],[R[1387]]]],[11,"clone",R[1541],E,37,[[["self"]],["rect"]]],[11,"clone",E,E,38,[[["self"]],["point"]]],[11,"clone",R[1522],E,41,[[["self"]],["color"]]],[11,"clone",E,E,43,[[["self"]],[R[1407]]]],[11,"clone",R[1421],E,47,[[["self"]],[R[1549]]]],[11,"clone",E,E,46,[[["self"]],[R[1422]]]],[11,"clone",E,E,48,[[["self"]],[R[1430]]]],[11,"clone",E,E,49,[[["self"]],[R[1550]]]],[11,"clone",E,E,50,[[["self"]],[R[1551]]]],[11,"clone",E,E,131,[[["self"]],[R[1445]]]],[11,"clone",R[1440],E,65,[[["self"]],[R[1552]]]],[11,"clone",E,E,62,[[["self"]],[R[1446]]]],[11,"clone",E,E,66,[[["self"]],[R[1458]]]],[11,"clone",E,E,63,[[["self"]],[R[1553]]]],[11,"clone",E,E,133,[[["self"]],[R[1445]]]],[11,"clone",R[1559],E,77,[[["self"]],["category"]]],[11,"clone",E,E,78,[[["self"]],["priority"]]],[11,"clone","sdl2",E,0,[[["self"]],["error"]]],[11,"clone",E,E,27,[[["self"]],["sdl"]]],[11,"clone",E,E,79,[[["self"]],[R[1478]]]],[11,"clone",E,E,19,[[["self"]],[R[1467]]]],[11,"clone",E,E,21,[[["self"]],[R[1466]]]],[11,"clone",E,E,12,[[["self"]],[R[1465]]]],[11,"clone",E,E,2,[[["self"]],[R[1425]]]],[11,"clone",R[1474],E,83,[[["self"]],[R[1475]]]],[11,"clone",E,E,84,[[["self"]],[R[1482]]]],[11,"clone",E,E,134,[[["self"]],[R[1445]]]],[11,"clone",E,E,81,[[["self"]],[R[1472]]]],[11,"clone",E,E,82,[[["self"]],[R[1554]]]],[11,"clone",E,E,89,[[["self"]],["audiocvt"]]],[11,"clone",R[1524],E,90,[[["self"]],["version"]]],[11,"clone",R[1525],E,95,[[["self"]],[R[1487]]]],[11,"clone",E,E,96,[[["self"]],[R[1501]]]],[11,"clone",R[1543],E,102,[[["self"]],[R[1505]]]],[11,"clone",E,E,100,[[["self"]],["hinting"]]],[11,"clone",E,E,98,[[["self"]],[R[1555]]]],[11,"clone",R[1526],E,110,[[["self"]],[R[1511]]]],[11,"clone",R[1527],E,118,[[["self"]],[R[1511]]]],[11,"clone",E,E,115,[[["self"]],["fading"]]],[11,"clone",E,E,112,[[["self"]],["channel"]]],[11,"clone",E,E,113,[[["self"]],["group"]]],[11,"clone",E,E,116,[[["self"]],["musictype"]]],[11,"clone","sdl2",E,1,[[["self"]],[R[1334]]]],[11,"drop",R[1335],E,13,[[["self"]]]],[11,"drop",R[1344],E,20,[[["self"]]]],[11,"drop",R[1348],E,22,[[["self"]]]],[11,"drop",R[1406],E,34,[[["self"]]]],[11,"drop",R[1521],E,130,[[["self"]]]],[11,"drop",R[1522],E,44,[[["self"]]]],[11,"drop",R[1421],E,56,[[["self"]]]],[11,"drop",E,E,57,[[["self"]]]],[11,"drop",R[1432],E,61,[[["self"]]]],[11,"drop",R[1440],E,71,[[["self"]]]],[11,"drop",E,E,75,[[["self"]]]],[11,"drop",R[1523],E,76,[[["self"]]]],[11,"drop","sdl2",E,8,[[["self"]]]],[11,"drop",R[1474],E,80,[[["self"]]]],[11,"drop",E,E,135,[[["self"]]]],[11,"drop",R[1543],E,104,[[["self"]]]],[11,"drop",E,E,105,[[["self"]]]],[11,"drop",R[1526],E,136,[[["self"]]]],[11,"drop",R[1527],E,137,[[["self"]]]],[11,"drop",E,E,111,[[["self"]]]],[11,"drop",E,E,114,[[["self"]]]],[11,"drop",R[1528],E,122,[[["self"]]]],[11,"fmt",R[1520],E,9,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1335],E,14,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",R[1344],E,15,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1384],E,23,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,24,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1421],E,51,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1440],E,132,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,64,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,67,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,68,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,69,[[["self"],[R[28]]],[R[14]]]],[11,"fmt","sdl2",E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1524],E,90,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1525],E,94,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1543],E,101,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,99,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",R[1526],E,110,[[["self"],[R[28]]],[R[14]]]],[11,"fmt","sdl2",E,1,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1298],E,4,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,5,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,6,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1520],E,9,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1335],E,10,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,11,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1344],E,15,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,16,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,17,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,18,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1384],E,23,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,24,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1406],E,30,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,31,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,32,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,35,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1541],E,37,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,38,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",R[1522],E,41,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,43,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1421],E,47,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,46,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,48,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,49,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,50,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,51,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,58,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1440],E,132,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,64,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,65,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,62,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,66,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,67,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,63,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,68,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,69,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1559],E,77,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,78,[[["self"],[R[28]]],[R[14]]]],[11,"fmt","sdl2",E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,79,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,19,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,21,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,12,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,2,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1474],E,83,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,84,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,82,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1524],E,90,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1525],E,95,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,96,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,91,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,92,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,93,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,94,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1543],E,102,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,100,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,98,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,101,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,99,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1526],E,110,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1527],E,118,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,115,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,112,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,116,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,"Shows the original regular expression.",114,[[["self"],[R[28]]],[R[14]]]],[11,"fmt","sdl2",E,1,[[["self"],[R[28]]],[R[14]]]],[11,"add",R[1541],E,38,[[["self"],["point"]],["point"]]],[11,"sub",R[1384],R[1560],25,[[["self"],["mod"]],["mod"]]],[11,"sub",R[1541],E,38,[[["self"],["point"]],["point"]]],[11,"sub",R[1525],R[1560],95,[[["self"],[R[1487]]],[R[1487]]]],[11,"sub",E,R[1560],96,[[["self"],[R[1501]]],[R[1501]]]],[11,"sub",R[1543],R[1560],102,[[["self"],[R[1505]]],[R[1505]]]],[11,"sub",R[1526],R[1560],110,[[["self"],[R[1511]]],[R[1511]]]],[11,"sub",R[1527],R[1560],118,[[["self"],[R[1511]]],[R[1511]]]],[11,"mul",R[1541],E,38,[[["self"],["i32"]],["point"]]],[11,"div",E,E,38,[[["self"],["i32"]],["point"]]],[11,"neg",E,E,38,[[["self"]],["point"]]],[11,"add_assign",E,E,38,[[["self"],["point"]]]],[11,R[1561],R[1384],R[1562],25,[[["self"],["mod"]]]],[11,R[1561],R[1541],E,38,[[["self"],["point"]]]],[11,R[1561],R[1525],R[1562],95,[[["self"],[R[1487]]]]],[11,R[1561],E,R[1562],96,[[["self"],[R[1501]]]]],[11,R[1561],R[1543],R[1562],102,[[["self"],[R[1505]]]]],[11,R[1561],R[1526],R[1562],110,[[["self"],[R[1511]]]]],[11,R[1561],R[1527],R[1562],118,[[["self"],[R[1511]]]]],[11,"mul_assign",R[1541],E,38,[[["self"],["i32"]]]],[11,"div_assign",E,E,38,[[["self"],["i32"]]]],[11,"not",R[1384],R[1563],25,[[["self"]],["mod"]]],[11,"not",R[1525],R[1563],95,[[["self"]],[R[1487]]]],[11,"not",E,R[1563],96,[[["self"]],[R[1501]]]],[11,"not",R[1543],R[1563],102,[[["self"]],[R[1505]]]],[11,"not",R[1526],R[1563],110,[[["self"]],[R[1511]]]],[11,"not",R[1527],R[1563],118,[[["self"]],[R[1511]]]],[11,"bitand",R[1384],R[1564],25,[[["self"],["mod"]],["mod"]]],[11,"bitand",R[1541],E,37,[[["self"],["rect"]],[R[42],["rect"]]]],[11,"bitand",R[1525],R[1564],95,[[["self"],[R[1487]]],[R[1487]]]],[11,"bitand",E,R[1564],96,[[["self"],[R[1501]]],[R[1501]]]],[11,"bitand",R[1543],R[1564],102,[[["self"],[R[1505]]],[R[1505]]]],[11,"bitand",R[1526],R[1564],110,[[["self"],[R[1511]]],[R[1511]]]],[11,"bitand",R[1527],R[1564],118,[[["self"],[R[1511]]],[R[1511]]]],[11,"bitor",R[1384],R[1565],25,[[["self"],["mod"]],["mod"]]],[11,"bitor",R[1541],E,37,[[["self"],["rect"]],["rect"]]],[11,"bitor",R[1525],R[1565],95,[[["self"],[R[1487]]],[R[1487]]]],[11,"bitor",E,R[1565],96,[[["self"],[R[1501]]],[R[1501]]]],[11,"bitor",R[1543],R[1565],102,[[["self"],[R[1505]]],[R[1505]]]],[11,"bitor",R[1526],R[1565],110,[[["self"],[R[1511]]],[R[1511]]]],[11,"bitor",R[1527],R[1565],118,[[["self"],[R[1511]]],[R[1511]]]],[11,"bitxor",R[1384],R[1566],25,[[["self"],["mod"]],["mod"]]],[11,"bitxor",R[1525],R[1566],95,[[["self"],[R[1487]]],[R[1487]]]],[11,"bitxor",E,R[1566],96,[[["self"],[R[1501]]],[R[1501]]]],[11,"bitxor",R[1543],R[1566],102,[[["self"],[R[1505]]],[R[1505]]]],[11,"bitxor",R[1526],R[1566],110,[[["self"],[R[1511]]],[R[1511]]]],[11,"bitxor",R[1527],R[1566],118,[[["self"],[R[1511]]],[R[1511]]]],[11,R[1567],R[1384],R[1568],25,[[["self"],["mod"]]]],[11,R[1567],R[1525],R[1568],95,[[["self"],[R[1487]]]]],[11,R[1567],E,R[1568],96,[[["self"],[R[1501]]]]],[11,R[1567],R[1543],R[1568],102,[[["self"],[R[1505]]]]],[11,R[1567],R[1526],R[1568],110,[[["self"],[R[1511]]]]],[11,R[1567],R[1527],R[1568],118,[[["self"],[R[1511]]]]],[11,R[1569],R[1384],R[1570],25,[[["self"],["mod"]]]],[11,R[1569],R[1525],R[1570],95,[[["self"],[R[1487]]]]],[11,R[1569],E,R[1570],96,[[["self"],[R[1501]]]]],[11,R[1569],R[1543],R[1570],102,[[["self"],[R[1505]]]]],[11,R[1569],R[1526],R[1570],110,[[["self"],[R[1511]]]]],[11,R[1569],R[1527],R[1570],118,[[["self"],[R[1511]]]]],[11,R[1571],R[1384],R[1572],25,[[["self"],["mod"]]]],[11,R[1571],R[1525],R[1572],95,[[["self"],[R[1487]]]]],[11,R[1571],E,R[1572],96,[[["self"],[R[1501]]]]],[11,R[1571],R[1543],R[1572],102,[[["self"],[R[1505]]]]],[11,R[1571],R[1526],R[1572],110,[[["self"],[R[1511]]]]],[11,R[1571],R[1527],R[1572],118,[[["self"],[R[1511]]]]],[11,"deref",R[1541],"Example",37,[[["self"]],[R[1573]]]],[11,"deref",E,"Example",38,[[["self"]],[R[1556]]]],[11,"deref",R[1521],E,39,[[["self"]],[R[1411]]]],[11,"deref",R[1421],E,55,[[["self"]],[R[1411]]]],[11,"deref",R[1440],E,72,[[["self"]],["renderercontext"]]],[11,"deref",R[1474],E,135,[[["self"]],["cb"]]],[11,R[1574],R[1541],"Example",37,[[["self"]],[R[1573]]]],[11,R[1574],E,"Example",38,[[["self"]],[R[1556]]]],[11,R[1574],R[1521],E,39,[[["self"]],[R[1411]]]],[11,R[1574],R[1421],E,55,[[["self"]],[R[1411]]]],[11,R[1574],R[1474],E,135,[[["self"]],["cb"]]],[11,"hash",R[1298],E,4,N],[11,"hash",E,E,5,N],[11,"hash",R[1335],E,10,N],[11,"hash",E,E,11,N],[11,"hash",R[1344],E,16,N],[11,"hash",E,E,17,N],[11,"hash",E,E,18,N],[11,"hash",R[1384],E,23,N],[11,"hash",E,E,24,N],[11,"hash",E,E,25,N],[11,"hash",R[1406],E,33,N],[11,"hash",E,E,30,N],[11,"hash",E,E,31,N],[11,"hash",E,E,32,N],[11,"hash",E,E,35,N],[11,"hash",R[1541],E,37,[[["self"],["h"]]]],[11,"hash",E,E,38,[[["self"],["h"]]]],[11,"hash",R[1522],E,41,N],[11,"hash",E,E,43,N],[11,"hash",R[1421],E,47,N],[11,"hash",E,E,46,N],[11,"hash",E,E,48,N],[11,"hash",E,E,49,N],[11,"hash",E,E,50,N],[11,"hash",R[1440],E,65,N],[11,"hash",E,E,62,N],[11,"hash",E,E,66,N],[11,"hash",E,E,63,N],[11,"hash",R[1559],E,77,N],[11,"hash",E,E,78,N],[11,"hash","sdl2",E,0,N],[11,"hash",R[1474],E,83,N],[11,"hash",E,E,84,N],[11,"hash",E,E,82,N],[11,"hash",R[1524],E,90,N],[11,"hash",R[1525],E,95,N],[11,"hash",E,E,96,N],[11,"hash",R[1543],E,102,N],[11,"hash",R[1526],E,110,N],[11,"hash",R[1527],E,118,N],[11,"hash",E,E,115,N],[11,"hash",E,E,116,N],[11,R[1575],R[1384],E,25,[[[T]],["mod"]]],[11,R[1575],R[1525],E,95,[[[T]],[R[1487]]]],[11,R[1575],E,E,96,[[[T]],[R[1501]]]],[11,R[1575],R[1543],E,102,[[[T]],[R[1505]]]],[11,R[1575],R[1526],E,110,[[[T]],[R[1511]]]],[11,R[1575],R[1527],E,118,[[[T]],[R[1511]]]],[11,"fmt",R[1384],E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1525],E,95,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,96,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1543],E,102,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1526],E,110,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1527],E,118,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1384],E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1525],E,95,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,96,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1543],E,102,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1526],E,110,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1527],E,118,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1384],E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1525],E,95,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,96,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1543],E,102,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1526],E,110,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1527],E,118,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1384],E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1525],E,95,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,96,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1543],E,102,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1526],E,110,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[1527],E,118,[[["self"],[R[28]]],[R[14]]]],[11,"read",R[1523],E,76,N],[11,"write",E,E,76,N],[11,"flush",E,E,76,[[["self"]],[R[14]]]],[11,"seek",E,E,76,[[["self"],["seekfrom"]],[R[14],["u64"]]]],[11,R[29],R[1520],E,9,[[["self"]],["str"]]],[11,R[29],R[1344],E,15,[[["self"]],["str"]]],[11,R[29],R[1421],E,51,[[["self"]],["str"]]],[11,R[29],R[1440],E,132,[[["self"]],["str"]]],[11,R[29],E,E,64,[[["self"]],["str"]]],[11,R[29],E,E,67,[[["self"]],["str"]]],[11,R[29],E,E,68,[[["self"]],["str"]]],[11,R[29],E,E,69,[[["self"]],["str"]]],[11,R[29],"sdl2",E,0,[[["self"]],["str"]]],[11,R[29],R[1525],E,94,[[["self"]],["str"]]],[11,R[29],R[1543],E,101,[[["self"]],["str"]]],[11,"cause",E,E,101,[[["self"]],[R[42],["error"]]]],[11,R[29],E,E,99,[[["self"]],["str"]]],[11,"cause",E,E,99,[[["self"]],[R[42],["error"]]]],[11,R[29],"sdl2",E,1,[[["self"]],["str"]]],[11,R[1576],R[1298],E,4,[[["i64"]],[R[42],[R[1332]]]]],[11,R[1577],E,E,4,[[["u64"]],[R[42],[R[1332]]]]],[11,R[1576],R[1522],E,43,[[["i64"]],[R[42],[R[1407]]]]],[11,R[1577],E,E,43,[[["u64"]],[R[42],[R[1407]]]]],[11,R[1576],R[1440],E,65,[[["i64"]],[R[42],[R[1552]]]]],[11,R[1577],E,E,65,[[["u64"]],[R[42],[R[1552]]]]],[11,R[1576],E,E,66,[[["i64"]],[R[42],[R[1458]]]]],[11,R[1577],E,E,66,[[["u64"]],[R[42],[R[1458]]]]],[11,R[1576],R[1474],E,84,[[["i64"]],[R[42],[R[1482]]]]],[11,R[1577],E,E,84,[[["u64"]],[R[42],[R[1482]]]]]],"p":[[4,"Error"],[4,R[1578]],[3,R[1579]],[3,R[1580]],[4,"EventType"],[4,R[1581]],[4,"Event"],[3,R[1582]],[3,"EventPump"],[4,R[1583]],[4,"PowerLevel"],[4,"HatState"],[3,R[1584]],[3,"Joystick"],[3,"Guid"],[4,R[1585]],[4,"Axis"],[4,"Button"],[4,R[1586]],[3,R[1587]],[3,R[1588]],[3,R[1589]],[3,"Haptic"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,R[1590]],[3,"Sdl"],[3,R[1591]],[3,R[1592]],[4,R[1593]],[4,R[1594]],[4,R[1595]],[3,R[1596]],[3,"Cursor"],[3,"MouseState"],[3,"MouseUtil"],[3,"Rect"],[3,"Point"],[3,"Surface"],[3,"SurfaceRef"],[3,"Color"],[3,"PixelMasks"],[4,R[1597]],[3,"Palette"],[3,R[1598]],[3,R[1599]],[4,"GLProfile"],[4,R[1600]],[4,"WindowPos"],[4,R[1601]],[4,R[1602]],[3,"GLAttr"],[3,R[1603]],[3,R[1604]],[3,R[1605]],[3,"GLContext"],[3,R[1606]],[3,R[1607]],[3,"Window"],[3,R[1608]],[3,"Timer"],[3,R[1609]],[3,R[1610]],[4,R[1611]],[4,R[1612]],[4,"BlendMode"],[4,R[1613]],[4,R[1614]],[4,R[1615]],[8,R[1616]],[3,R[1617]],[3,"Canvas"],[3,R[1618]],[3,R[1619]],[3,"Texture"],[3,"RWops"],[4,"Category"],[4,"Priority"],[3,R[1620]],[3,R[1621]],[3,R[1622]],[3,"AudioSpec"],[4,R[1512]],[4,R[1623]],[8,R[1624]],[8,R[1625]],[3,"AudioQueue"],[3,R[1626]],[3,"AudioCVT"],[3,"Version"],[3,R[1627]],[3,"ButtonData"],[4,R[1628]],[4,R[1629]],[3,R[1630]],[3,R[1631]],[4,"Hint"],[3,R[1632]],[4,"InitError"],[4,"Hinting"],[4,"FontError"],[3,"FontStyle"],[3,R[1633]],[3,"Font"],[3,R[1634]],[8,R[1635]],[8,R[1636]],[8,R[1637]],[8,"ImageRWops"],[3,"InitFlag"],[3,"Chunk"],[3,"Channel"],[3,"Group"],[3,"Music"],[4,"Fading"],[4,"MusicType"],[8,R[1638]],[3,"InitFlag"],[8,"ToColor"],[8,R[1639]],[8,R[1640]],[3,"FPSManager"],[3,R[1641]],[3,R[1642]],[3,R[1643]],[3,R[1644]],[3,R[1645]],[3,R[1646]],[3,R[1647]],[3,R[1648]],[3,R[1434]],[3,R[1437]],[3,R[1434]],[3,R[1434]],[3,R[1649]],[3,R[1650]],[3,R[1651]]]};
searchIndex[R[0]]={"doc":R[50],"i":[[3,"Error",R[0],R[51],N,N],[12,"kind",E,R[52],0,N],[12,"msg",E,R[53],0,N],[4,R[30],E,R[54],N,N],[13,R[55],E,R[56],1,N],[13,R[57],E,R[58],1,N],[13,R[59],E,R[60],1,N],[13,R[61],E,R[62],1,N],[11,R[63],E,R[64],1,[[["self"]],["bool"]]],[11,R[65],E,R[66],1,[[["self"]],["bool"]]],[11,R[29],E,R[67],1,[[["self"]],["str"]]],[11,"new",E,R[68],0,[[[R[1]],["str"]],["self"]]],[11,R[69],E,R[70],0,[[[R[1]],["str"],["e"]],["self"]]],[11,R[71],E,R[72],0,[[["self"]],[R[42],["box"]]]],[0,"block",E,R[73],N,N],[3,R[31],R[15],R[2],N,N],[12,"core",E,R[3],2,N],[3,R[32],E,R[2],N,N],[12,"core",E,R[3],3,N],[8,R[33],E,R[74],N,N],[16,"Item",E,R[75],4,N],[16,"Results",E,R[76],4,N],[10,R[77],E,R[78],4,N],[11,"new",E,R[4],2,[[["r"]],[R[26]]]],[11,"index",E,R[5],2,[[["self"]],[R[9]]]],[11,"reset",E,R[6],2,[[["self"]]]],[11,R[7],E,R[8],2,[[["self"],[R[9]]]]],[11,"new",E,R[4],3,[[["r"]],[R[27]]]],[11,"index",E,R[5],3,[[["self"]],[R[9]]]],[11,"reset",E,R[6],3,[[["self"]]]],[11,R[7],E,R[8],3,[[["self"],[R[9]]]]],[0,"impls",R[0],R[79],N,N],[5,R[80],R[81],R[82],N,[[["r"]],["u64"]]],[5,R[83],E,R[84],N,N],[5,R[85],E,R[10],N,N],[5,R[86],E,R[10],N,N],[5,R[87],E,R[88],N,[[["r"]],["u32"]]],[5,R[89],E,R[90],N,[[["r"]],["u64"]]],[0,"le",R[0],R[91],N,N],[5,R[92],R[93],R[94],N,N],[5,R[95],E,R[96],N,N],[8,R[97],R[0],R[98],N,N],[10,R[19],E,R[99],5,[[["self"]],["u32"]]],[10,R[20],E,R[100],5,[[["self"]],["u64"]]],[10,R[21],E,R[101],5,N],[10,R[22],E,R[102],5,N],[8,R[103],E,R[104],N,N],[8,R[34],E,R[105],N,N],[16,"Seed",E,R[106],6,N],[10,R[23],E,R[107],6,N],[11,R[24],E,R[108],6,[[["u64"]],["self"]]],[11,R[25],E,R[109],6,[[["r"]],[R[14],["error"]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[110],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",R[15],E,2,[[["self"]],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,R[19],E,E,2,[[["self"]],["u32"]]],[11,R[20],E,E,2,[[["self"]],["u64"]]],[11,R[21],E,E,2,N],[11,R[22],E,E,2,N],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,N],[11,R[22],E,E,3,N],[11,R[23],E,E,2,N],[11,R[24],E,E,2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[["s"]],[R[14],["error"]]]],[11,R[23],E,E,3,N],[11,R[24],E,E,3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[["s"]],[R[14],["error"]]]],[11,"eq",R[0],E,1,[[["self"],[R[1]]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",R[15],E,2,[[["self"]],[R[26]]]],[11,"clone",E,E,3,[[["self"]],[R[27]]]],[11,"fmt",R[0],E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[15],E,2,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14]]]],[11,"read",R[0],E,5,N],[11,R[29],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[R[42],["stderror"]]]]],"p":[[3,"Error"],[4,R[30]],[3,R[31]],[3,R[32]],[8,R[33]],[8,R[97]],[8,R[34]]]};
searchIndex[R[0]]={"doc":R[50],"i":[[4,R[30],R[0],R[54],N,N],[13,R[55],E,R[56],0,N],[13,R[57],E,R[58],0,N],[13,R[59],E,R[60],0,N],[13,R[61],E,R[62],0,N],[3,"Error",E,R[51],N,N],[12,"kind",E,R[52],1,N],[12,"msg",E,R[53],1,N],[0,"block",E,R[73],N,N],[8,R[33],R[15],R[74],N,N],[16,"Item",E,R[75],2,N],[16,"Results",E,R[76],2,N],[10,R[77],E,R[78],2,N],[3,R[31],E,R[2],N,N],[12,"core",E,R[3],3,N],[3,R[32],E,R[2],N,N],[12,"core",E,R[3],4,N],[0,"impls",R[0],R[79],N,N],[5,R[80],R[81],R[82],N,[[["r"]],["u64"]]],[5,R[83],E,R[84],N,N],[5,R[85],E,R[10],N,N],[5,R[86],E,R[10],N,N],[5,R[87],E,R[88],N,[[["r"]],["u32"]]],[5,R[89],E,R[90],N,[[["r"]],["u64"]]],[0,"le",R[0],R[91],N,N],[5,R[92],R[93],R[94],N,N],[5,R[95],E,R[96],N,N],[8,R[97],R[0],R[98],N,N],[10,R[19],E,R[99],5,[[["self"]],["u32"]]],[10,R[20],E,R[100],5,[[["self"]],["u64"]]],[10,R[21],E,R[101],5,N],[10,R[22],E,R[102],5,N],[8,R[103],E,R[104],N,N],[8,R[34],E,R[105],N,N],[16,"Seed",E,R[106],6,N],[10,R[23],E,R[107],6,N],[11,R[24],E,R[108],6,[[["u64"]],["self"]]],[11,R[25],E,R[109],6,[[["r"]],[R[14],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[110],E,E,1,[[["self"]],["string"]]],[11,"from",R[15],E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[13],E,E,4,[[["self"]],[R[14]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[47]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,N],[11,"fmt",R[0],E,1,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"read",E,E,5,N],[11,R[23],R[15],E,3,N],[11,R[24],E,E,3,[[["u64"]],[R[26]]]],[11,R[25],E,E,3,[[["s"]],[R[14],[R[26],"error"]]]],[11,R[23],E,E,4,N],[11,R[24],E,E,4,[[["u64"]],[R[27]]]],[11,R[25],E,E,4,[[["s"]],[R[14],[R[27],"error"]]]],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,N],[11,R[22],E,E,3,N],[11,R[19],E,E,4,[[["self"]],["u32"]]],[11,R[20],E,E,4,[[["self"]],["u64"]]],[11,R[21],E,E,4,N],[11,R[22],E,E,4,N],[11,"eq",R[0],E,0,[[["self"],[R[1]]],["bool"]]],[11,"fmt",R[15],E,3,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",R[0],E,1,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",R[15],E,4,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",R[0],E,0,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"clone",E,E,0,[[["self"]],[R[1]]]],[11,"clone",R[15],E,3,[[["self"]],[R[26]]]],[11,"clone",E,E,4,[[["self"]],[R[27]]]],[11,R[29],R[0],E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[R[42],["error"]]]],[11,R[63],E,R[64],0,[[["self"]],["bool"]]],[11,R[65],E,R[66],0,[[["self"]],["bool"]]],[11,R[29],E,R[67],0,[[["self"]],["str"]]],[11,"new",E,R[68],1,[[[R[1]],["str"]],["error"]]],[11,R[69],E,R[70],1,[[[R[1]],["str"],["e"]],["error"]]],[11,R[71],E,R[72],1,[[["self"]],[R[42],["box"]]]],[11,"new",R[15],R[4],3,[[["r"]],[R[26]]]],[11,"index",E,R[5],3,[[["self"]],[R[9]]]],[11,"reset",E,R[6],3,N],[11,R[7],E,R[8],3,N],[11,"new",E,R[4],4,[[["r"]],[R[27]]]],[11,"index",E,R[5],4,[[["self"]],[R[9]]]],[11,"reset",E,R[6],4,N],[11,R[7],E,R[8],4,N]],"p":[[4,R[30]],[3,"Error"],[8,R[33]],[3,R[31]],[3,R[32]],[8,R[97]],[8,R[34]]]};
searchIndex[R[162]]={"doc":"Numeric traits for generic mathematics","i":[[3,R[233],R[162],E,N,N],[12,"kind",E,E,0,N],[4,R[234],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[1195],N,[[[T],[T],[T]],[T]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds",R[1121],N,N],[10,R[163],E,R[1122],2,[[],["self"]]],[10,R[164],E,R[1123],2,[[],["self"]]],[0,"cast",R[162],E,N,N],[5,"cast","num_traits::cast",R[1090],N,[[[T]],[R[42]]]],[8,R[235],E,R[1058],N,N],[11,"to_isize",E,R[1059],3,[[["self"]],[R[42],["isize"]]]],[11,"to_i8",E,R[1060],3,[[["self"]],[R[42],["i8"]]]],[11,"to_i16",E,R[1061],3,[[["self"]],[R[42],["i16"]]]],[11,"to_i32",E,R[1062],3,[[["self"]],[R[42],["i32"]]]],[10,"to_i64",E,R[1063],3,[[["self"]],[R[42],["i64"]]]],[11,"to_i128",E,R[1064],3,[[["self"]],[R[42],["i128"]]]],[11,"to_usize",E,R[1065],3,[[["self"]],[R[42],[R[9]]]]],[11,"to_u8",E,R[1066],3,[[["self"]],[R[42],["u8"]]]],[11,"to_u16",E,R[1067],3,[[["self"]],[R[42],["u16"]]]],[11,"to_u32",E,R[1068],3,[[["self"]],[R[42],["u32"]]]],[10,"to_u64",E,R[1069],3,[[["self"]],[R[42],["u64"]]]],[11,"to_u128",E,R[1070],3,[[["self"]],[R[42],["u128"]]]],[11,"to_f32",E,R[1071],3,[[["self"]],[R[42],["f32"]]]],[11,"to_f64",E,R[1072],3,[[["self"]],[R[42],["f64"]]]],[8,R[236],E,R[1073],N,N],[11,R[1125],E,R[1074],4,[[["isize"]],[R[42]]]],[11,"from_i8",E,R[1075],4,[[["i8"]],[R[42]]]],[11,"from_i16",E,R[1076],4,[[["i16"]],[R[42]]]],[11,"from_i32",E,R[1077],4,[[["i32"]],[R[42]]]],[10,R[1576],E,R[1078],4,[[["i64"]],[R[42]]]],[11,R[1202],E,R[1079],4,[[["i128"]],[R[42]]]],[11,R[1126],E,R[1080],4,[[[R[9]]],[R[42]]]],[11,"from_u8",E,R[1081],4,[[["u8"]],[R[42]]]],[11,"from_u16",E,R[1082],4,[[["u16"]],[R[42]]]],[11,"from_u32",E,R[1083],4,[[["u32"]],[R[42]]]],[10,R[1577],E,R[1084],4,[[["u64"]],[R[42]]]],[11,R[1203],E,R[1085],4,[[["u128"]],[R[42]]]],[11,"from_f32",E,R[1086],4,[[["f32"]],[R[42]]]],[11,"from_f64",E,R[1087],4,[[["f64"]],[R[42]]]],[8,"NumCast",E,R[1088],N,N],[10,"from",E,R[1089],5,[[[T]],[R[42]]]],[8,R[237],E,R[1127],N,N],[10,"as_",E,R[1128],6,[[["self"]],[T]]],[0,"float",R[162],E,N,N],[8,R[238],"num_traits::float",R[1204],N,N],[10,"infinity",E,R[1205],7,[[],["self"]]],[10,R[165],E,R[1206],7,[[],["self"]]],[10,"nan",E,R[1207],7,[[],["self"]]],[10,"neg_zero",E,R[166],7,[[],["self"]]],[10,R[163],E,R[167],7,[[],["self"]]],[10,R[168],E,R[169],7,[[],["self"]]],[10,"epsilon",E,R[170],7,[[],["self"]]],[10,R[164],E,R[171],7,[[],["self"]]],[11,"is_nan",E,R[1208],7,[[["self"]],["bool"]]],[11,R[172],E,R[1209],7,[[["self"]],["bool"]]],[11,R[173],E,R[1210],7,[[["self"]],["bool"]]],[11,R[174],E,R[175],7,[[["self"]],["bool"]]],[10,"classify",E,R[176],7,[[["self"]],[R[177]]]],[11,"floor",E,R[178],7,[[["self"]],["self"]]],[11,"ceil",E,R[179],7,[[["self"]],["self"]]],[11,"round",E,R[180],7,[[["self"]],["self"]]],[11,"trunc",E,R[181],7,[[["self"]],["self"]]],[11,"fract",E,R[182],7,[[["self"]],["self"]]],[11,"abs",E,R[183],7,[[["self"]],["self"]]],[11,"signum",E,R[184],7,[[["self"]],["self"]]],[11,R[185],E,R[1211],7,[[["self"]],["bool"]]],[11,R[186],E,R[1212],7,[[["self"]],["bool"]]],[11,"min",E,R[191],7,[[["self"],["self"]],["self"]]],[11,"max",E,R[190],7,[[["self"],["self"]],["self"]]],[11,"recip",E,R[1213],7,[[["self"]],["self"]]],[11,"powi",E,R[187],7,[[["self"],["i32"]],["self"]]],[10,R[188],E,R[1214],7,[[["self"]],["self"]]],[10,R[189],E,R[1215],7,[[["self"]],["self"]]],[10,R[192],E,R[193],7,N],[8,"Float",E,R[1129],N,N],[10,"nan",E,R[1130],8,[[],["self"]]],[10,"infinity",E,R[1131],8,[[],["self"]]],[10,R[165],E,R[1132],8,[[],["self"]]],[10,"neg_zero",E,R[166],8,[[],["self"]]],[10,R[163],E,R[167],8,[[],["self"]]],[10,R[168],E,R[169],8,[[],["self"]]],[11,"epsilon",E,R[170],8,[[],["self"]]],[10,R[164],E,R[171],8,[[],["self"]]],[10,"is_nan",E,R[1133],8,[[["self"]],["bool"]]],[10,R[172],E,R[1134],8,[[["self"]],["bool"]]],[10,R[173],E,R[1135],8,[[["self"]],["bool"]]],[10,R[174],E,R[175],8,[[["self"]],["bool"]]],[10,"classify",E,R[176],8,[[["self"]],[R[177]]]],[10,"floor",E,R[178],8,[[["self"]],["self"]]],[10,"ceil",E,R[179],8,[[["self"]],["self"]]],[10,"round",E,R[180],8,[[["self"]],["self"]]],[10,"trunc",E,R[181],8,[[["self"]],["self"]]],[10,"fract",E,R[182],8,[[["self"]],["self"]]],[10,"abs",E,R[183],8,[[["self"]],["self"]]],[10,"signum",E,R[184],8,[[["self"]],["self"]]],[10,R[185],E,R[200],8,[[["self"]],["bool"]]],[10,R[186],E,R[201],8,[[["self"]],["bool"]]],[10,"mul_add",E,R[197],8,[[["self"],["self"],["self"]],["self"]]],[10,"recip",E,R[202],8,[[["self"]],["self"]]],[10,"powi",E,R[187],8,[[["self"],["i32"]],["self"]]],[10,"powf",E,R[1136],8,[[["self"],["self"]],["self"]]],[10,"sqrt",E,R[203],8,[[["self"]],["self"]]],[10,"exp",E,R[204],8,[[["self"]],["self"]]],[10,"exp2",E,R[205],8,[[["self"]],["self"]]],[10,"ln",E,R[206],8,[[["self"]],["self"]]],[10,"log",E,R[207],8,[[["self"],["self"]],["self"]]],[10,"log2",E,R[208],8,[[["self"]],["self"]]],[10,"log10",E,R[209],8,[[["self"]],["self"]]],[11,R[188],E,R[210],8,[[["self"]],["self"]]],[11,R[189],E,R[211],8,[[["self"]],["self"]]],[10,"max",E,R[190],8,[[["self"],["self"]],["self"]]],[10,"min",E,R[191],8,[[["self"],["self"]],["self"]]],[10,"abs_sub",E,R[212],8,[[["self"],["self"]],["self"]]],[10,"cbrt",E,R[213],8,[[["self"]],["self"]]],[10,"hypot",E,R[214],8,[[["self"],["self"]],["self"]]],[10,"sin",E,R[215],8,[[["self"]],["self"]]],[10,"cos",E,R[216],8,[[["self"]],["self"]]],[10,"tan",E,R[217],8,[[["self"]],["self"]]],[10,"asin",E,R[218],8,[[["self"]],["self"]]],[10,"acos",E,R[219],8,[[["self"]],["self"]]],[10,"atan",E,R[220],8,[[["self"]],["self"]]],[10,"atan2",E,R[221],8,[[["self"],["self"]],["self"]]],[10,"sin_cos",E,R[222],8,N],[10,"exp_m1",E,R[223],8,[[["self"]],["self"]]],[10,"ln_1p",E,R[224],8,[[["self"]],["self"]]],[10,"sinh",E,R[225],8,[[["self"]],["self"]]],[10,"cosh",E,R[226],8,[[["self"]],["self"]]],[10,"tanh",E,R[227],8,[[["self"]],["self"]]],[10,"asinh",E,R[228],8,[[["self"]],["self"]]],[10,"acosh",E,R[229],8,[[["self"]],["self"]]],[10,"atanh",E,R[230],8,[[["self"]],["self"]]],[10,R[192],E,R[193],8,N],[8,R[239],E,E,N,N],[10,"E",E,R[1216],9,[[],["self"]]],[10,"FRAC_1_PI",E,R[1217],9,[[],["self"]]],[10,R[1218],E,R[1219],9,[[],["self"]]],[10,"FRAC_2_PI",E,R[1220],9,[[],["self"]]],[10,R[1221],E,R[1222],9,[[],["self"]]],[10,"FRAC_PI_2",E,R[1223],9,[[],["self"]]],[10,"FRAC_PI_3",E,R[1224],9,[[],["self"]]],[10,"FRAC_PI_4",E,R[1225],9,[[],["self"]]],[10,"FRAC_PI_6",E,R[1226],9,[[],["self"]]],[10,"FRAC_PI_8",E,R[1227],9,[[],["self"]]],[10,"LN_10",E,R[1228],9,[[],["self"]]],[10,"LN_2",E,R[1229],9,[[],["self"]]],[10,"LOG10_E",E,R[1230],9,[[],["self"]]],[10,"LOG2_E",E,R[1231],9,[[],["self"]]],[10,"PI",E,R[1232],9,[[],["self"]]],[10,"SQRT_2",E,R[1233],9,[[],["self"]]],[0,"identities",R[162],E,N,N],[5,"zero","num_traits::identities",R[1145],N,[[],[T]]],[5,"one",E,R[1146],N,[[],[T]]],[8,"Zero",E,R[1137],N,N],[10,"zero",E,R[1138],10,[[],["self"]]],[11,"set_zero",E,R[1139],10,[[["self"]]]],[10,"is_zero",E,R[1140],10,[[["self"]],["bool"]]],[8,"One",E,R[1141],N,N],[10,"one",E,R[1142],11,[[],["self"]]],[11,"set_one",E,R[1143],11,[[["self"]]]],[11,"is_one",E,R[1144],11,[[["self"]],["bool"]]],[0,"int",R[162],E,N,N],[8,"PrimInt","num_traits::int",R[1147],N,N],[10,R[1234],E,R[1148],12,[[["self"]],["u32"]]],[10,R[1149],E,R[1150],12,[[["self"]],["u32"]]],[10,R[1151],E,R[1152],12,[[["self"]],["u32"]]],[10,R[1153],E,R[1154],12,[[["self"]],["u32"]]],[10,R[1155],E,R[194],12,[[["self"],["u32"]],["self"]]],[10,R[1156],E,R[195],12,[[["self"],["u32"]],["self"]]],[10,R[1235],E,R[194],12,[[["self"],["u32"]],["self"]]],[10,R[1236],E,R[195],12,[[["self"],["u32"]],["self"]]],[10,R[1157],E,R[194],12,[[["self"],["u32"]],["self"]]],[10,R[1158],E,R[195],12,[[["self"],["u32"]],["self"]]],[10,R[1237],E,R[1159],12,[[["self"]],["self"]]],[10,"from_be",E,R[1160],12,[[["self"]],["self"]]],[10,"from_le",E,R[1161],12,[[["self"]],["self"]]],[10,"to_be",E,R[1162],12,[[["self"]],["self"]]],[10,"to_le",E,R[1163],12,[[["self"]],["self"]]],[10,"pow",E,R[1164],12,[[["self"],["u32"]],["self"]]],[0,"ops",R[162],E,N,N],[0,"checked",R[196],E,N,N],[8,R[240],"num_traits::ops::checked",R[1165],N,N],[10,R[1166],E,R[1167],13,[[["self"],["self"]],[R[42]]]],[8,R[241],E,R[1168],N,N],[10,R[1169],E,R[1170],14,[[["self"],["self"]],[R[42]]]],[8,R[242],E,R[1171],N,N],[10,R[1172],E,R[1173],15,[[["self"],["self"]],[R[42]]]],[8,R[243],E,R[1174],N,N],[10,R[1175],E,R[1176],16,[[["self"],["self"]],[R[42]]]],[8,R[244],E,R[1238],N,N],[10,R[1239],E,R[1240],17,[[["self"],["self"]],[R[42]]]],[8,R[245],E,R[1241],N,N],[10,R[1242],E,R[1243],18,[[["self"]],[R[42]]]],[8,R[246],E,R[1244],N,N],[10,R[1245],E,R[1246],19,[[["self"],["u32"]],[R[42]]]],[8,R[247],E,R[1247],N,N],[10,R[1248],E,R[1249],20,[[["self"],["u32"]],[R[42]]]],[0,"inv",R[196],E,N,N],[8,"Inv","num_traits::ops::inv",R[1250],N,N],[16,"Output",E,R[199],21,N],[10,"inv",E,R[1251],21,N],[0,"mul_add",R[196],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[197],N,N],[16,"Output",E,R[1252],22,N],[10,"mul_add",E,R[198],22,N],[8,R[248],E,R[1253],N,N],[10,R[1254],E,R[198],23,[[["self"],["a"],["b"]]]],[0,"saturating",R[196],E,N,N],[8,R[249],"num_traits::ops::saturating",R[1178],N,N],[10,R[1179],E,R[1180],24,[[["self"],["self"]],["self"]]],[10,R[1181],E,R[1182],24,[[["self"],["self"]],["self"]]],[0,"wrapping",R[196],E,N,N],[8,R[250],"num_traits::ops::wrapping",R[1255],N,N],[10,R[1256],E,R[1257],25,[[["self"],["self"]],["self"]]],[8,R[251],E,R[1258],N,N],[10,R[1259],E,R[1260],26,[[["self"],["self"]],["self"]]],[8,R[252],E,R[1261],N,N],[10,R[1262],E,R[1263],27,[[["self"],["self"]],["self"]]],[8,R[253],E,R[1264],N,N],[10,R[1265],E,R[1266],28,[[["self"],["u32"]],["self"]]],[8,R[254],E,R[1267],N,N],[10,R[1268],E,R[1269],29,[[["self"],["u32"]],["self"]]],[0,"pow",R[162],E,N,N],[5,"pow","num_traits::pow",R[1091],N,[[[T],[R[9]]],[T]]],[5,R[1092],E,R[1093],N,[[[T],[R[9]]],[R[42]]]],[8,"Pow",E,R[1183],N,N],[16,"Output",E,R[199],30,N],[10,"pow",E,R[1184],30,N],[0,"real",R[162],E,N,N],[8,"Real","num_traits::real",R[1270],N,N],[10,R[163],E,R[167],31,[[],["self"]]],[10,R[168],E,R[169],31,[[],["self"]]],[10,"epsilon",E,R[170],31,[[],["self"]]],[10,R[164],E,R[171],31,[[],["self"]]],[10,"floor",E,R[178],31,[[["self"]],["self"]]],[10,"ceil",E,R[179],31,[[["self"]],["self"]]],[10,"round",E,R[180],31,[[["self"]],["self"]]],[10,"trunc",E,R[181],31,[[["self"]],["self"]]],[10,"fract",E,R[182],31,[[["self"]],["self"]]],[10,"abs",E,R[183],31,[[["self"]],["self"]]],[10,"signum",E,R[184],31,[[["self"]],["self"]]],[10,R[185],E,R[200],31,[[["self"]],["bool"]]],[10,R[186],E,R[201],31,[[["self"]],["bool"]]],[10,"mul_add",E,R[197],31,[[["self"],["self"],["self"]],["self"]]],[10,"recip",E,R[202],31,[[["self"]],["self"]]],[10,"powi",E,R[187],31,[[["self"],["i32"]],["self"]]],[10,"powf",E,R[1271],31,[[["self"],["self"]],["self"]]],[10,"sqrt",E,R[203],31,[[["self"]],["self"]]],[10,"exp",E,R[204],31,[[["self"]],["self"]]],[10,"exp2",E,R[205],31,[[["self"]],["self"]]],[10,"ln",E,R[206],31,[[["self"]],["self"]]],[10,"log",E,R[207],31,[[["self"],["self"]],["self"]]],[10,"log2",E,R[208],31,[[["self"]],["self"]]],[10,"log10",E,R[209],31,[[["self"]],["self"]]],[10,R[188],E,R[210],31,[[["self"]],["self"]]],[10,R[189],E,R[211],31,[[["self"]],["self"]]],[10,"max",E,R[190],31,[[["self"],["self"]],["self"]]],[10,"min",E,R[191],31,[[["self"],["self"]],["self"]]],[10,"abs_sub",E,R[212],31,[[["self"],["self"]],["self"]]],[10,"cbrt",E,R[213],31,[[["self"]],["self"]]],[10,"hypot",E,R[214],31,[[["self"],["self"]],["self"]]],[10,"sin",E,R[215],31,[[["self"]],["self"]]],[10,"cos",E,R[216],31,[[["self"]],["self"]]],[10,"tan",E,R[217],31,[[["self"]],["self"]]],[10,"asin",E,R[218],31,[[["self"]],["self"]]],[10,"acos",E,R[219],31,[[["self"]],["self"]]],[10,"atan",E,R[220],31,[[["self"]],["self"]]],[10,"atan2",E,R[221],31,[[["self"],["self"]],["self"]]],[10,"sin_cos",E,R[222],31,N],[10,"exp_m1",E,R[223],31,[[["self"]],["self"]]],[10,"ln_1p",E,R[224],31,[[["self"]],["self"]]],[10,"sinh",E,R[225],31,[[["self"]],["self"]]],[10,"cosh",E,R[226],31,[[["self"]],["self"]]],[10,"tanh",E,R[227],31,[[["self"]],["self"]]],[10,"asinh",E,R[228],31,[[["self"]],["self"]]],[10,"acosh",E,R[229],31,[[["self"]],["self"]]],[10,"atanh",E,R[230],31,[[["self"]],["self"]]],[0,"sign",R[162],E,N,N],[5,"abs","num_traits::sign",R[231],N,[[[T]],[T]]],[5,"abs_sub",E,R[212],N,[[[T],[T]],[T]]],[5,"signum",E,R[232],N,[[[T]],[T]]],[8,"Signed",E,R[1185],N,N],[10,"abs",E,R[231],32,[[["self"]],["self"]]],[10,"abs_sub",E,R[212],32,[[["self"],["self"]],["self"]]],[10,"signum",E,R[232],32,[[["self"]],["self"]]],[10,R[1186],E,R[1187],32,[[["self"]],["bool"]]],[10,R[1188],E,R[1189],32,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1190],N,N],[8,"Num",R[162],R[1191],N,N],[16,R[1192],E,E,33,N],[10,R[1193],E,R[1194],33,[[["str"],["u32"]],[R[14]]]],[8,"NumOps",E,R[1272],N,N],[8,"NumRef",E,R[1273],N,N],[8,"RefNum",E,R[1274],N,N],[8,R[1275],E,R[1276],N,N],[8,"NumAssign",E,R[1277],N,N],[8,R[1278],E,R[1279],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[110],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]]],"p":[[3,R[233]],[4,R[234]],[8,"Bounded"],[8,R[235]],[8,R[236]],[8,"NumCast"],[8,R[237]],[8,R[238]],[8,"Float"],[8,R[239]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[240]],[8,R[241]],[8,R[242]],[8,R[243]],[8,R[244]],[8,R[245]],[8,R[246]],[8,R[247]],[8,"Inv"],[8,"MulAdd"],[8,R[248]],[8,R[249]],[8,R[250]],[8,R[251]],[8,R[252]],[8,R[253]],[8,R[254]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex[R[257]]={"doc":"The xorshift random number generator.","i":[[3,R[258],R[257],"An Xorshift random number generator.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["xorshiftrng"]]],[11,R[23],E,E,0,N],[11,R[25],E,E,0,[[["r"]],[R[14],["error"]]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N]],"p":[[3,R[258]]]};
searchIndex[R[259]]={"doc":"The ChaCha random number generator.","i":[[3,R[261],R[259],R[264],N,N],[3,R[262],E,"The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos",E,"Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos",E,"Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream",E,"Set the stream number.",0,[[["self"],["u64"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,0,[[[R[260]]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["chacharng"]]],[11,"clone",E,E,1,[[["self"]],[R[260]]]],[11,R[23],E,E,0,N],[11,R[25],E,E,0,[[["r"]],[R[14],["error"]]]],[11,R[23],E,E,1,N],[11,R[77],E,E,1,N],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N]],"p":[[3,R[261]],[3,R[262]]]};
searchIndex[R[265]]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac",R[265],"The ISAAC random number generator.",N,N],[3,"IsaacRng",R[268],"A random number generator that uses the ISAAC algorithm.",N,N],[3,R[275],E,"The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,R[266],E,R[270],0,[[["u64"]],["self"]]],[0,"isaac64",R[265],"The ISAAC-64 random number generator.",N,N],[3,R[273],R[269],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[274],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,R[266],E,R[267],1,[[["u64"]],["self"]]],[11,R[266],E,R[267],2,[[["u64"]],["self"]]],[11,"from",R[268],E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,"from",R[269],E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,"fmt",R[268],E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[269],E,1,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,2,[[["self"],[R[28]]],[R[14]]]],[11,"clone",R[268],E,0,[[["self"]],["isaacrng"]]],[11,"clone",E,E,3,[[["self"]],["isaaccore"]]],[11,"clone",R[269],E,1,[[["self"]],["isaac64rng"]]],[11,"clone",E,E,2,[[["self"]],["isaac64core"]]],[11,R[23],R[268],E,0,N],[11,R[24],E,R[270],0,[[["u64"]],["self"]]],[11,R[25],E,E,0,[[["s"]],[R[14],["error"]]]],[11,R[23],E,E,3,N],[11,R[24],E,R[270],3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[["r"]],[R[14],["error"]]]],[11,R[23],R[269],E,1,N],[11,R[24],E,R[270],1,[[["u64"]],["self"]]],[11,R[25],E,E,1,[[["s"]],[R[14],["error"]]]],[11,R[23],E,E,2,N],[11,R[24],E,E,2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[["r"]],[R[14],["error"]]]],[11,R[77],R[268],R[271],3,[[["self"],[R[272]]]]],[11,R[77],R[269],R[271],2,[[["self"],[R[272]]]]],[11,R[19],R[268],E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N],[11,R[19],R[269],E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,N],[11,R[22],E,E,1,N]],"p":[[3,"IsaacRng"],[3,R[273]],[3,R[274]],[3,R[275]]]};
searchIndex[R[276]]={"doc":"Non-physical true random number generator based on timing…","i":[[3,R[280],R[276],R[1040],N,N],[4,R[279],E,R[1041],N,N],[13,"NoTimer",E,R[1042],0,N],[13,R[1043],E,R[1044],0,N],[13,R[1045],E,R[1046],0,N],[13,R[1047],E,R[1048],0,N],[13,R[1049],E,R[1050],0,N],[11,"new",E,R[1051],1,[[],[R[14],[R[278],R[277]]]]],[11,R[1052],E,R[1053],1,N],[11,"set_rounds",E,R[1054],1,[[["self"],["u8"]]]],[11,"test_timer",E,R[1055],1,[[["self"]],[R[14],["u8",R[277]]]]],[11,R[1056],E,R[1057],1,[[["self"],["bool"]],["i64"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,R[110],E,E,0,[[["self"]],["string"]]],[11,"eq",E,E,0,[[["self"],[R[277]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],[R[277]]]],[11,"clone",E,E,1,[[["self"]],[R[278]]]],[11,R[29],E,E,0,[[["self"]],["str"]]],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,N],[11,R[22],E,E,1,N]],"p":[[4,R[279]],[3,R[280]]]};
searchIndex[R[281]]={"doc":"Integer trait and functions.","i":[[3,R[289],R[281],R[1280],N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[290],E,R[1281],N,N],[5,"cbrt",E,R[284],N,[[[T]],[T]]],[5,"nth_root",E,R[282],N,[[[T],["u32"]],[T]]],[5,"sqrt",E,R[283],N,[[[T]],[T]]],[5,"div_rem",E,R[1282],N,N],[5,R[285],E,R[1283],N,[[[T],[T]],[T]]],[5,R[286],E,R[1284],N,[[[T],[T]],[T]]],[5,R[287],E,R[1285],N,N],[5,"div_ceil",E,R[1286],N,[[[T],[T]],[T]]],[5,"gcd",E,R[1287],N,[[[T],[T]],[T]]],[5,"lcm",E,R[1288],N,[[[T],[T]],[T]]],[5,"gcd_lcm",E,R[1289],N,N],[5,"binomial",E,R[1290],N,[[[T],[T]],[T]]],[5,R[1291],E,R[1292],N,N],[8,"Roots",E,R[1293],N,N],[10,"nth_root",E,R[282],1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[283],1,[[["self"]],["self"]]],[11,"cbrt",E,R[284],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,R[285],E,R[1094],2,[[["self"],["self"]],["self"]]],[10,R[286],E,R[1095],2,[[["self"],["self"]],["self"]]],[11,"div_ceil",E,R[1096],2,[[["self"],["self"]],["self"]]],[10,"gcd",E,R[1097],2,[[["self"],["self"]],["self"]]],[10,"lcm",E,R[1098],2,[[["self"],["self"]],["self"]]],[11,"gcd_lcm",E,R[1099],2,N],[11,R[1100],E,R[1101],2,[[["self"],["self"]],[R[288]]]],[11,R[1102],E,R[1103],2,N],[10,"divides",E,R[1104],2,[[["self"],["self"]],["bool"]]],[10,R[1105],E,R[1106],2,[[["self"],["self"]],["bool"]]],[10,"is_even",E,R[1107],2,[[["self"]],["bool"]]],[10,"is_odd",E,R[1108],2,[[["self"]],["bool"]]],[10,"div_rem",E,R[1109],2,N],[11,R[287],E,R[1110],2,N],[11,R[1111],E,R[1112],2,[[["self"],["self"]],["self"]]],[11,R[1113],E,R[1114],2,[[["self"],["self"]],["self"]]],[11,"new",E,R[1294],3,[[[T]],[R[1295]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[41],E,E,3,[[["self"]],["i"]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,"eq",E,E,0,[[["self"],[R[288]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[288]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"next",E,E,3,[[["self"]],[R[42]]]],[11,"clone",E,E,0,[[["self"]],[R[288]]]],[11,"sqrt",E,R[283],1,[[["self"]],["self"]]],[11,"cbrt",E,R[284],1,[[["self"]],["self"]]]],"p":[[3,R[289]],[8,"Roots"],[8,"Integer"],[3,R[290]]]};
searchIndex[R[396]]={"doc":"This crate was mainly generated by `bindgen`. It should be…","i":[[3,R[765],R[396],E,N,N],[12,"__val",E,E,0,N],[3,R[965],E,E,N,N],[3,R[766],E,E,N,N],[12,"always_ignore",E,E,1,N],[12,"trigger_count",E,E,1,N],[12,R[378],E,E,1,N],[12,"filename",E,E,1,N],[12,"linenum",E,E,1,N],[12,"function",E,E,1,N],[12,"next",E,E,1,N],[3,R[767],E,"\\brief A type representing an atomic integer value. It is…",N,N],[12,"value",E,E,2,N],[3,R[966],E,E,N,N],[3,R[967],E,E,N,N],[3,"SDL_cond",E,E,N,N],[3,R[968],E,E,N,N],[3,R[768],E,"This is the read/write operation structure -- very basic.",N,N],[12,"size",E,"Return the size of the file in this rwops, or -1 if unknown",3,N],[12,"seek",E,"Seek to \\c offset relative to \\c whence, one of stdio's…",3,N],[12,"read",E,"Read up to \\c maxnum objects each of size \\c size from the…",3,N],[12,"write",E,"Write exactly \\c num objects each of size \\c size from the…",3,N],[12,"close",E,"Close and free an allocated SDL_RWops structure.",3,N],[12,"type_",E,E,3,N],[12,"hidden",E,E,3,N],[3,R[769],E,E,N,N],[12,"base",E,E,4,N],[12,"here",E,E,4,N],[12,"stop",E,E,4,N],[3,R[770],E,E,N,N],[12,"data1",E,E,5,N],[12,"data2",E,E,5,N],[3,R[771],E,"The calculated values in this structure are calculated by…",N,N],[12,"freq",E,"< DSP frequency -- samples per second",6,N],[12,"format",E,"< Audio data format",6,N],[12,"channels",E,"< Number of channels: 1 mono, 2 stereo",6,N],[12,"silence",E,"< Audio buffer silence value (calculated)",6,N],[12,"samples",E,"< Audio buffer size in sample FRAMES (total samples…",6,N],[12,"padding",E,"< Necessary for some compile environments",6,N],[12,"size",E,"< Audio buffer size in bytes (calculated)",6,N],[12,R[367],E,"< Callback that feeds the audio device (NULL to use…",6,N],[12,"userdata",E,"< Userdata passed to callback (ignored for NULL callbacks).",6,N],[3,R[772],E,E,N,N],[12,"needed",E,"< Set to 1 if conversion possible",7,N],[12,"src_format",E,"< Source audio format",7,N],[12,"dst_format",E,"< Target audio format",7,N],[12,"rate_incr",E,"< Rate conversion increment",7,N],[12,"buf",E,"< Buffer to hold entire audio data",7,N],[12,"len",E,"< Length of original audio buffer",7,N],[12,"len_cvt",E,"< Length of converted audio buffer",7,N],[12,"len_mult",E,"< buffer must be len*len_mult big",7,N],[12,"len_ratio",E,"< Given len, final size is len*len_ratio",7,N],[12,"filters",E,"< NULL-terminated list of filter functions",7,N],[12,"filter_index",E,"< Current audio conversion function",7,N],[3,R[969],E,E,N,N],[3,"div_t",E,E,N,N],[12,"quot",E,E,8,N],[12,"rem",E,E,8,N],[3,"ldiv_t",E,E,N,N],[12,"quot",E,E,9,N],[12,"rem",E,E,9,N],[3,"lldiv_t",E,E,N,N],[12,"quot",E,E,10,N],[12,"rem",E,E,10,N],[3,R[705],E,E,N,N],[12,"__val",E,E,11,N],[3,R[773],E,E,N,N],[12,"tv_sec",E,E,12,N],[12,"tv_usec",E,E,12,N],[3,R[150],E,E,N,N],[12,"tv_sec",E,E,13,N],[12,"tv_nsec",E,E,13,N],[3,"fd_set",E,E,N,N],[12,"__fds_bits",E,E,14,N],[3,R[706],E,E,N,N],[12,"__readers",E,E,15,N],[12,"__writers",E,E,15,N],[12,"__wrphase_futex",E,E,15,N],[12,"__writers_futex",E,E,15,N],[12,"__pad3",E,E,15,N],[12,"__pad4",E,E,15,N],[12,"__cur_writer",E,E,15,N],[12,"__shared",E,E,15,N],[12,"__rwelision",E,E,15,N],[12,"__pad1",E,E,15,N],[12,"__pad2",E,E,15,N],[12,"__flags",E,E,15,N],[3,R[707],E,E,N,N],[12,"__prev",E,E,16,N],[12,"__next",E,E,16,N],[3,R[708],E,E,N,N],[12,"__lock",E,E,17,N],[12,"__count",E,E,17,N],[12,"__owner",E,E,17,N],[12,"__nusers",E,E,17,N],[12,"__kind",E,E,17,N],[12,"__spins",E,E,17,N],[12,"__elision",E,E,17,N],[12,"__list",E,E,17,N],[3,R[709],E,E,N,N],[12,"__bindgen_anon_1",E,E,18,N],[12,"__bindgen_anon_2",E,E,18,N],[12,"__g_refs",E,E,18,N],[12,"__g_size",E,E,18,N],[12,"__g1_orig_size",E,E,18,N],[12,"__wrefs",E,E,18,N],[12,"__g_signals",E,E,18,N],[3,R[711],E,E,N,N],[12,"__low",E,E,19,N],[12,"__high",E,E,19,N],[3,R[713],E,E,N,N],[12,"__low",E,E,20,N],[12,"__high",E,E,20,N],[3,R[716],E,E,N,N],[12,"fptr",E,E,21,N],[12,"rptr",E,E,21,N],[12,"state",E,E,21,N],[12,"rand_type",E,E,21,N],[12,"rand_deg",E,E,21,N],[12,"rand_sep",E,E,21,N],[12,"end_ptr",E,E,21,N],[3,R[717],E,E,N,N],[12,"__x",E,E,22,N],[12,"__old_x",E,E,22,N],[12,"__c",E,E,22,N],[12,"__init",E,E,22,N],[12,"__a",E,E,22,N],[3,R[774],E,E,N,N],[12,"r",E,E,23,N],[12,"g",E,E,23,N],[12,"b",E,E,23,N],[12,"a",E,E,23,N],[3,R[775],E,E,N,N],[12,"ncolors",E,E,24,N],[12,"colors",E,E,24,N],[12,"version",E,E,24,N],[12,R[293],E,E,24,N],[3,R[776],E,"\\note Everything in the pixel format structure is read-only.",N,N],[12,"format",E,E,25,N],[12,"palette",E,E,25,N],[12,"BitsPerPixel",E,E,25,N],[12,"BytesPerPixel",E,E,25,N],[12,"padding",E,E,25,N],[12,"Rmask",E,E,25,N],[12,"Gmask",E,E,25,N],[12,"Bmask",E,E,25,N],[12,"Amask",E,E,25,N],[12,"Rloss",E,E,25,N],[12,"Gloss",E,E,25,N],[12,"Bloss",E,E,25,N],[12,"Aloss",E,E,25,N],[12,"Rshift",E,E,25,N],[12,"Gshift",E,E,25,N],[12,"Bshift",E,E,25,N],[12,"Ashift",E,E,25,N],[12,R[293],E,E,25,N],[12,"next",E,E,25,N],[3,R[777],E,"\\brief  The structure that defines a point",N,N],[12,"x",E,E,26,N],[12,"y",E,E,26,N],[3,"SDL_Rect",E,"\\brief A rectangle, with the origin at the upper left.",N,N],[12,"x",E,E,27,N],[12,"y",E,E,27,N],[12,"w",E,E,27,N],[12,"h",E,E,27,N],[3,R[778],E,"\\brief A collection of pixels used in software blitting.",N,N],[12,"flags",E,R[291],28,N],[12,"format",E,R[291],28,N],[12,"w",E,R[291],28,N],[12,"h",E,R[291],28,N],[12,"pitch",E,R[291],28,N],[12,"pixels",E,R[292],28,N],[12,"userdata",E,R[292],28,N],[12,"locked",E,R[291],28,N],[12,"lock_data",E,R[291],28,N],[12,"clip_rect",E,R[291],28,N],[12,"map",E,R[370],28,N],[12,R[293],E,"< Read-mostly",28,N],[3,R[779],E,"\\brief  The structure that defines a display mode",N,N],[12,"format",E,"< pixel format",29,N],[12,"w",E,"< width, in screen coordinates",29,N],[12,"h",E,"< height, in screen coordinates",29,N],[12,R[1652],E,"< refresh rate (or zero for unspecified)",29,N],[12,"driverdata",E,"< driver-specific data, initialize to 0",29,N],[3,R[970],E,E,N,N],[3,R[780],E,"\\brief The SDL keysym structure, used in key events.",N,N],[12,R[1383],E,"< SDL physical key code - see ::SDL_Scancode for details",30,N],[12,"sym",E,"< SDL virtual key code - see ::SDL_Keycode for details",30,N],[12,"mod_",E,"< current key modifiers",30,N],[12,"unused",E,E,30,N],[3,R[971],E,E,N,N],[3,R[972],E,"The joystick structure used to identify an SDL joystick",N,N],[3,R[781],E,E,N,N],[12,"data",E,E,31,N],[3,R[973],E,"The gamecontroller structure used to identify an SDL game…",N,N],[3,R[782],E,R[386],N,N],[12,"bindType",E,E,32,N],[12,"value",E,E,32,N],[3,R[783],E,E,N,N],[12,"hat",E,E,33,N],[12,"hat_mask",E,E,33,N],[3,R[784],E,E,N,N],[12,"id",E,E,34,N],[12,"x",E,E,34,N],[12,"y",E,E,34,N],[12,"pressure",E,E,34,N],[3,R[785],E,"\\brief Fields shared by every event",N,N],[12,"type_",E,E,35,N],[12,R[294],E,R[295],35,N],[3,R[786],E,"\\brief Display state change event data (event.display.*)",N,N],[12,"type_",E,"< ::SDL_DISPLAYEVENT",36,N],[12,R[294],E,R[295],36,N],[12,R[359],E,"< The associated display index",36,N],[12,"event",E,"< ::SDL_DisplayEventID",36,N],[12,R[304],E,E,36,N],[12,R[297],E,E,36,N],[12,R[298],E,E,36,N],[12,"data1",E,R[296],36,N],[3,R[787],E,"\\brief Window state change event data (event.window.*)",N,N],[12,"type_",E,"< ::SDL_WINDOWEVENT",37,N],[12,R[294],E,R[295],37,N],[12,R[299],E,"< The associated window",37,N],[12,"event",E,"< ::SDL_WindowEventID",37,N],[12,R[304],E,E,37,N],[12,R[297],E,E,37,N],[12,R[298],E,E,37,N],[12,"data1",E,R[296],37,N],[12,"data2",E,R[296],37,N],[3,R[788],E,"\\brief Keyboard button event structure (event.key.*)",N,N],[12,"type_",E,"< ::SDL_KEYDOWN or ::SDL_KEYUP",38,N],[12,R[294],E,R[295],38,N],[12,R[299],E,R[300],38,N],[12,"state",E,R[303],38,N],[12,"repeat",E,"< Non-zero if this is a key repeat",38,N],[12,R[297],E,E,38,N],[12,R[298],E,E,38,N],[12,"keysym",E,"< The key that was pressed or released",38,N],[3,R[789],E,"\\brief Keyboard text editing event structure (event.edit.*)",N,N],[12,"type_",E,"< ::SDL_TEXTEDITING",39,N],[12,R[294],E,R[295],39,N],[12,R[299],E,R[300],39,N],[12,"text",E,"< The editing text",39,N],[12,"start",E,"< The start cursor of selected editing text",39,N],[12,"length",E,"< The length of selected editing text",39,N],[3,R[790],E,"\\brief Keyboard text input event structure (event.text.*)",N,N],[12,"type_",E,"< ::SDL_TEXTINPUT",40,N],[12,R[294],E,R[295],40,N],[12,R[299],E,R[300],40,N],[12,"text",E,"< The input text",40,N],[3,R[791],E,"\\brief Mouse motion event structure (event.motion.*)",N,N],[12,"type_",E,"< ::SDL_MOUSEMOTION",41,N],[12,R[294],E,R[295],41,N],[12,R[299],E,R[301],41,N],[12,"which",E,R[302],41,N],[12,"state",E,"< The current button state",41,N],[12,"x",E,R[305],41,N],[12,"y",E,R[306],41,N],[12,"xrel",E,R[308],41,N],[12,"yrel",E,R[309],41,N],[3,R[792],E,"\\brief Mouse button event structure (event.button.*)",N,N],[12,"type_",E,"< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP",42,N],[12,R[294],E,R[295],42,N],[12,R[299],E,R[301],42,N],[12,"which",E,R[302],42,N],[12,"button",E,"< The mouse button index",42,N],[12,"state",E,R[303],42,N],[12,"clicks",E,"< 1 for single-click, 2 for double-click, etc.",42,N],[12,R[304],E,E,42,N],[12,"x",E,R[305],42,N],[12,"y",E,R[306],42,N],[3,R[793],E,"\\brief Mouse wheel event structure (event.wheel.*)",N,N],[12,"type_",E,"< ::SDL_MOUSEWHEEL",43,N],[12,R[294],E,R[295],43,N],[12,R[299],E,R[301],43,N],[12,"which",E,R[302],43,N],[12,"x",E,"< The amount scrolled horizontally, positive to the right…",43,N],[12,"y",E,"< The amount scrolled vertically, positive away from the…",43,N],[12,R[319],E,"< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED…",43,N],[3,R[794],E,"\\brief Joystick axis motion event structure (event.jaxis.*)",N,N],[12,"type_",E,"< ::SDL_JOYAXISMOTION",44,N],[12,R[294],E,R[295],44,N],[12,"which",E,R[307],44,N],[12,"axis",E,"< The joystick axis index",44,N],[12,R[304],E,E,44,N],[12,R[297],E,E,44,N],[12,R[298],E,E,44,N],[12,"value",E,R[310],44,N],[12,"padding4",E,E,44,N],[3,R[795],E,"\\brief Joystick trackball motion event structure…",N,N],[12,"type_",E,"< ::SDL_JOYBALLMOTION",45,N],[12,R[294],E,R[295],45,N],[12,"which",E,R[307],45,N],[12,"ball",E,"< The joystick trackball index",45,N],[12,R[304],E,E,45,N],[12,R[297],E,E,45,N],[12,R[298],E,E,45,N],[12,"xrel",E,R[308],45,N],[12,"yrel",E,R[309],45,N],[3,R[796],E,"\\brief Joystick hat position change event structure…",N,N],[12,"type_",E,"< ::SDL_JOYHATMOTION",46,N],[12,R[294],E,R[295],46,N],[12,"which",E,R[307],46,N],[12,"hat",E,"< The joystick hat index",46,N],[12,"value",E,"< The hat position value. \\sa ::SDL_HAT_LEFTUP…",46,N],[12,R[304],E,E,46,N],[12,R[297],E,E,46,N],[3,R[797],E,"\\brief Joystick button event structure (event.jbutton.*)",N,N],[12,"type_",E,"< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP",47,N],[12,R[294],E,R[295],47,N],[12,"which",E,R[307],47,N],[12,"button",E,"< The joystick button index",47,N],[12,"state",E,R[303],47,N],[12,R[304],E,E,47,N],[12,R[297],E,E,47,N],[3,R[798],E,"\\brief Joystick device event structure (event.jdevice.*)",N,N],[12,"type_",E,"< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED",48,N],[12,R[294],E,R[295],48,N],[12,"which",E,R[311],48,N],[3,R[799],E,"\\brief Game controller axis motion event structure…",N,N],[12,"type_",E,"< ::SDL_CONTROLLERAXISMOTION",49,N],[12,R[294],E,R[295],49,N],[12,"which",E,R[307],49,N],[12,"axis",E,"< The controller axis (SDL_GameControllerAxis)",49,N],[12,R[304],E,E,49,N],[12,R[297],E,E,49,N],[12,R[298],E,E,49,N],[12,"value",E,R[310],49,N],[12,"padding4",E,E,49,N],[3,R[800],E,"\\brief Game controller button event structure…",N,N],[12,"type_",E,"< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP",50,N],[12,R[294],E,R[295],50,N],[12,"which",E,R[307],50,N],[12,"button",E,"< The controller button (SDL_GameControllerButton)",50,N],[12,"state",E,R[303],50,N],[12,R[304],E,E,50,N],[12,R[297],E,E,50,N],[3,R[801],E,"\\brief Controller device event structure (event.cdevice.*)",N,N],[12,"type_",E,"< ::SDL_CONTROLLERDEVICEADDED,…",51,N],[12,R[294],E,R[295],51,N],[12,"which",E,R[311],51,N],[3,R[802],E,"\\brief Audio device event structure (event.adevice.*)",N,N],[12,"type_",E,"< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED",52,N],[12,R[294],E,R[295],52,N],[12,"which",E,"< The audio device index for the ADDED event (valid until…",52,N],[12,"iscapture",E,"< zero if an output device, non-zero if a capture device.",52,N],[12,R[304],E,E,52,N],[12,R[297],E,E,52,N],[12,R[298],E,E,52,N],[3,R[803],E,"\\brief Touch finger event structure (event.tfinger.*)",N,N],[12,"type_",E,"< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP",53,N],[12,R[294],E,R[295],53,N],[12,"touchId",E,R[314],53,N],[12,"fingerId",E,E,53,N],[12,"x",E,R[312],53,N],[12,"y",E,R[312],53,N],[12,"dx",E,R[313],53,N],[12,"dy",E,R[313],53,N],[12,"pressure",E,R[312],53,N],[3,R[804],E,"\\brief Multiple Finger Gesture Event (event.mgesture.*)",N,N],[12,"type_",E,"< ::SDL_MULTIGESTURE",54,N],[12,R[294],E,R[295],54,N],[12,"touchId",E,R[314],54,N],[12,"dTheta",E,E,54,N],[12,"dDist",E,E,54,N],[12,"x",E,E,54,N],[12,"y",E,E,54,N],[12,R[315],E,E,54,N],[12,"padding",E,E,54,N],[3,R[805],E,"\\brief Dollar Gesture Event (event.dgesture.*)",N,N],[12,"type_",E,"< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD",55,N],[12,R[294],E,R[295],55,N],[12,"touchId",E,R[314],55,N],[12,"gestureId",E,E,55,N],[12,R[315],E,E,55,N],[12,"error",E,E,55,N],[12,"x",E,R[316],55,N],[12,"y",E,R[316],55,N],[3,R[806],E,"\\brief An event used to request a file open by the system…",N,N],[12,"type_",E,"< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or…",56,N],[12,R[294],E,R[295],56,N],[12,"file",E,"< The file name, which should be freed with SDL_free(), is…",56,N],[12,R[299],E,"< The window that was dropped on, if any",56,N],[3,R[807],E,"\\brief Sensor event structure (event.sensor.*)",N,N],[12,"type_",E,"< ::SDL_SENSORUPDATE",57,N],[12,R[294],E,R[295],57,N],[12,"which",E,"< The instance ID of the sensor",57,N],[12,"data",E,"< Up to 6 values from the sensor - additional values can…",57,N],[3,R[808],E,"\\brief The \"quit requested\" event",N,N],[12,"type_",E,R[317],58,N],[12,R[294],E,R[295],58,N],[3,R[809],E,"\\brief OS Specific event",N,N],[12,"type_",E,R[317],59,N],[12,R[294],E,R[295],59,N],[3,R[810],E,"\\brief A user-defined event type (event.user.*)",N,N],[12,"type_",E,"< ::SDL_USEREVENT through ::SDL_LASTEVENT-1",60,N],[12,R[294],E,R[295],60,N],[12,R[299],E,"< The associated window if any",60,N],[12,"code",E,"< User defined event code",60,N],[12,"data1",E,R[318],60,N],[12,"data2",E,R[318],60,N],[3,R[811],E,"\\brief A video driver dependent system event…",N,N],[12,"type_",E,"< ::SDL_SYSWMEVENT",61,N],[12,R[294],E,R[295],61,N],[12,"msg",E,"< driver dependent data, defined in SDL_syswm.h",61,N],[3,R[974],E,"\\typedef SDL_Haptic",N,N],[3,R[812],E,"\\brief Structure that represents a haptic direction.",N,N],[12,"type_",E,"< The type of encoding.",62,N],[12,"dir",E,"< The encoded direction.",62,N],[3,R[813],E,"\\brief A structure containing a template for a Constant…",N,N],[12,"type_",E,"< ::SDL_HAPTIC_CONSTANT",63,N],[12,R[319],E,R[320],63,N],[12,"length",E,R[321],63,N],[12,"delay",E,R[322],63,N],[12,"button",E,R[323],63,N],[12,R[333],E,R[324],63,N],[12,"level",E,"< Strength of the constant effect.",63,N],[12,R[325],E,R[326],63,N],[12,R[327],E,R[328],63,N],[12,R[329],E,R[330],63,N],[12,R[331],E,R[332],63,N],[3,R[814],E,"\\brief A structure containing a template for a Periodic…",N,N],[12,"type_",E,"< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,…",64,N],[12,R[319],E,R[320],64,N],[12,"length",E,R[321],64,N],[12,"delay",E,R[322],64,N],[12,"button",E,R[323],64,N],[12,R[333],E,R[324],64,N],[12,"period",E,"< Period of the wave.",64,N],[12,"magnitude",E,"< Peak value; if negative, equivalent to 180 degrees extra…",64,N],[12,"offset",E,"< Mean value of the wave.",64,N],[12,"phase",E,"< Positive phase shift given by hundredth of a degree.",64,N],[12,R[325],E,R[326],64,N],[12,R[327],E,R[328],64,N],[12,R[329],E,R[330],64,N],[12,R[331],E,R[332],64,N],[3,R[815],E,"\\brief A structure containing a template for a Condition…",N,N],[12,"type_",E,"< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER,…",65,N],[12,R[319],E,"< Direction of the effect - Not used ATM.",65,N],[12,"length",E,R[321],65,N],[12,"delay",E,R[322],65,N],[12,"button",E,R[323],65,N],[12,R[333],E,R[324],65,N],[12,"right_sat",E,"< Level when joystick is to the positive side; max 0xFFFF.",65,N],[12,"left_sat",E,"< Level when joystick is to the negative side; max 0xFFFF.",65,N],[12,"right_coeff",E,"< How fast to increase the force towards the positive side.",65,N],[12,"left_coeff",E,"< How fast to increase the force towards the negative side.",65,N],[12,"deadband",E,"< Size of the dead zone; max 0xFFFF: whole axis-range when…",65,N],[12,"center",E,"< Position of the dead zone.",65,N],[3,R[816],E,"\\brief A structure containing a template for a Ramp effect.",N,N],[12,"type_",E,"< ::SDL_HAPTIC_RAMP",66,N],[12,R[319],E,R[320],66,N],[12,"length",E,R[321],66,N],[12,"delay",E,R[322],66,N],[12,"button",E,R[323],66,N],[12,R[333],E,R[324],66,N],[12,"start",E,"< Beginning strength level.",66,N],[12,"end",E,"< Ending strength level.",66,N],[12,R[325],E,R[326],66,N],[12,R[327],E,R[328],66,N],[12,R[329],E,R[330],66,N],[12,R[331],E,R[332],66,N],[3,R[817],E,"\\brief A structure containing a template for a Left/Right…",N,N],[12,"type_",E,"< ::SDL_HAPTIC_LEFTRIGHT",67,N],[12,"length",E,"< Duration of the effect in milliseconds.",67,N],[12,"large_magnitude",E,"< Control of the large controller motor.",67,N],[12,"small_magnitude",E,"< Control of the small controller motor.",67,N],[3,R[818],E,"\\brief A structure containing a template for the…",N,N],[12,"type_",E,"< ::SDL_HAPTIC_CUSTOM",68,N],[12,R[319],E,R[320],68,N],[12,"length",E,R[321],68,N],[12,"delay",E,R[322],68,N],[12,"button",E,R[323],68,N],[12,R[333],E,R[324],68,N],[12,"channels",E,"< Axes to use, minimum of one.",68,N],[12,"period",E,"< Sample periods.",68,N],[12,"samples",E,"< Amount of samples.",68,N],[12,"data",E,"< Should contain channels*samples items.",68,N],[12,R[325],E,R[326],68,N],[12,R[327],E,R[328],68,N],[12,R[329],E,R[330],68,N],[12,R[331],E,R[332],68,N],[3,R[819],E,"\\brief Individual button data.",N,N],[12,"flags",E,"< ::SDL_MessageBoxButtonFlags",69,N],[12,"buttonid",E,"< User defined button id (value returned via…",69,N],[12,"text",E,"< The UTF-8 button text",69,N],[3,R[820],E,"\\brief RGB value used in a message box color scheme",N,N],[12,"r",E,E,70,N],[12,"g",E,E,70,N],[12,"b",E,E,70,N],[3,R[821],E,"\\brief A set of colors to use for message box dialogs",N,N],[12,"colors",E,E,71,N],[3,R[822],E,"\\brief MessageBox structure containing title, text,…",N,N],[12,"flags",E,"< ::SDL_MessageBoxFlags",72,N],[12,"window",E,"< Parent window, can be NULL",72,N],[12,"title",E,"< UTF-8 title",72,N],[12,"message",E,"< UTF-8 message text",72,N],[12,"numbuttons",E,E,72,N],[12,"buttons",E,E,72,N],[12,"colorScheme",E,"< ::SDL_MessageBoxColorScheme, can be NULL to use system…",72,N],[3,R[823],E,"\\brief Information on the capabilities of a render driver…",N,N],[12,"name",E,"< The name of the renderer",73,N],[12,"flags",E,"< Supported ::SDL_RendererFlags",73,N],[12,"num_texture_formats",E,"< The number of available texture formats",73,N],[12,R[1653],E,"< The available texture formats",73,N],[12,R[1654],E,"< The maximum texture width",73,N],[12,R[1655],E,"< The maximum texture height",73,N],[3,R[975],E,"\\brief A structure representing rendering state",N,N],[3,R[976],E,"\\brief An efficient driver-specific representation of…",N,N],[3,R[977],E,"\\brief SDL_sensor.h",N,N],[3,R[824],E,"\\brief A struct that tags the SDL_WindowShapeParams union…",N,N],[12,"mode",E,"\\brief The mode of these window-shape parameters.",74,N],[12,"parameters",E,"\\brief Window-shape parameters.",74,N],[3,R[825],E,"\\brief Information the version of SDL in use.",N,N],[12,"major",E,"< major version",75,N],[12,"minor",E,"< minor version",75,N],[12,"patch",E,"< update version",75,N],[3,R[826],E,E,N,N],[12,"number",E,E,76,N],[12,"next",E,E,76,N],[12,"free_private",E,E,76,N],[12,"private_data",E,E,76,N],[3,R[827],E,E,N,N],[12,R[365],E,E,77,N],[12,"major_opcode",E,E,77,N],[12,"first_event",E,E,77,N],[12,"first_error",E,E,77,N],[3,R[828],E,E,N,N],[12,"depth",E,E,78,N],[12,R[335],E,E,78,N],[12,R[336],E,E,78,N],[3,R[829],E,E,N,N],[12,"function",E,E,79,N],[12,"plane_mask",E,E,79,N],[12,"foreground",E,E,79,N],[12,"background",E,E,79,N],[12,"line_width",E,E,79,N],[12,"line_style",E,E,79,N],[12,"cap_style",E,E,79,N],[12,"join_style",E,E,79,N],[12,"fill_style",E,E,79,N],[12,"fill_rule",E,E,79,N],[12,"arc_mode",E,E,79,N],[12,"tile",E,E,79,N],[12,"stipple",E,E,79,N],[12,"ts_x_origin",E,E,79,N],[12,"ts_y_origin",E,E,79,N],[12,"font",E,E,79,N],[12,"subwindow_mode",E,E,79,N],[12,"graphics_exposures",E,E,79,N],[12,"clip_x_origin",E,E,79,N],[12,"clip_y_origin",E,E,79,N],[12,"clip_mask",E,E,79,N],[12,"dash_offset",E,E,79,N],[12,"dashes",E,E,79,N],[3,"_XGC",E,E,N,N],[3,"Visual",E,E,N,N],[12,R[334],E,E,80,N],[12,"visualid",E,E,80,N],[12,"class",E,E,80,N],[12,"red_mask",E,E,80,N],[12,R[345],E,E,80,N],[12,R[346],E,E,80,N],[12,"bits_per_rgb",E,E,80,N],[12,"map_entries",E,E,80,N],[3,"Depth",E,E,N,N],[12,"depth",E,E,81,N],[12,"nvisuals",E,E,81,N],[12,"visuals",E,E,81,N],[3,R[978],E,E,N,N],[3,"Screen",E,E,N,N],[12,R[334],E,E,82,N],[12,R[359],E,E,82,N],[12,"root",E,E,82,N],[12,"width",E,E,82,N],[12,"height",E,E,82,N],[12,"mwidth",E,E,82,N],[12,"mheight",E,E,82,N],[12,"ndepths",E,E,82,N],[12,"depths",E,E,82,N],[12,"root_depth",E,E,82,N],[12,"root_visual",E,E,82,N],[12,"default_gc",E,E,82,N],[12,"cmap",E,E,82,N],[12,"white_pixel",E,E,82,N],[12,"black_pixel",E,E,82,N],[12,"max_maps",E,E,82,N],[12,"min_maps",E,E,82,N],[12,R[337],E,E,82,N],[12,"save_unders",E,E,82,N],[12,"root_input_mask",E,E,82,N],[3,R[830],E,E,N,N],[12,R[334],E,E,83,N],[12,"depth",E,E,83,N],[12,R[335],E,E,83,N],[12,R[336],E,E,83,N],[3,R[831],E,E,N,N],[12,"background_pixmap",E,E,84,N],[12,"background_pixel",E,E,84,N],[12,"border_pixmap",E,E,84,N],[12,"border_pixel",E,E,84,N],[12,R[338],E,E,84,N],[12,R[339],E,E,84,N],[12,R[337],E,E,84,N],[12,R[340],E,E,84,N],[12,R[341],E,E,84,N],[12,R[342],E,E,84,N],[12,"event_mask",E,E,84,N],[12,R[343],E,E,84,N],[12,R[344],E,E,84,N],[12,R[364],E,E,84,N],[12,"cursor",E,E,84,N],[3,R[832],E,E,N,N],[12,"x",E,E,85,N],[12,"y",E,E,85,N],[12,"width",E,E,85,N],[12,"height",E,E,85,N],[12,R[347],E,E,85,N],[12,"depth",E,E,85,N],[12,"visual",E,E,85,N],[12,"root",E,E,85,N],[12,"class",E,E,85,N],[12,R[338],E,E,85,N],[12,R[339],E,E,85,N],[12,R[337],E,E,85,N],[12,R[340],E,E,85,N],[12,R[341],E,E,85,N],[12,R[342],E,E,85,N],[12,R[364],E,E,85,N],[12,"map_installed",E,E,85,N],[12,"map_state",E,E,85,N],[12,"all_event_masks",E,E,85,N],[12,"your_event_mask",E,E,85,N],[12,R[343],E,E,85,N],[12,R[344],E,E,85,N],[12,"screen",E,E,85,N],[3,R[833],E,E,N,N],[12,"family",E,E,86,N],[12,"length",E,E,86,N],[12,"address",E,E,86,N],[3,R[834],E,E,N,N],[12,"typelength",E,E,87,N],[12,"valuelength",E,E,87,N],[12,"type_",E,E,87,N],[12,"value",E,E,87,N],[3,"_XImage",E,E,N,N],[12,"width",E,E,88,N],[12,"height",E,E,88,N],[12,"xoffset",E,E,88,N],[12,"format",E,E,88,N],[12,"data",E,E,88,N],[12,R[352],E,E,88,N],[12,R[353],E,E,88,N],[12,R[355],E,E,88,N],[12,R[354],E,E,88,N],[12,"depth",E,E,88,N],[12,"bytes_per_line",E,E,88,N],[12,R[335],E,E,88,N],[12,"red_mask",E,E,88,N],[12,R[345],E,E,88,N],[12,R[346],E,E,88,N],[12,"obdata",E,E,88,N],[12,"f",E,E,88,N],[3,R[835],E,E,N,N],[12,"create_image",E,E,89,N],[12,"destroy_image",E,E,89,N],[12,"get_pixel",E,E,89,N],[12,"put_pixel",E,E,89,N],[12,"sub_image",E,E,89,N],[12,"add_pixel",E,E,89,N],[3,R[836],E,E,N,N],[12,"x",E,E,90,N],[12,"y",E,E,90,N],[12,"width",E,E,90,N],[12,"height",E,E,90,N],[12,R[347],E,E,90,N],[12,"sibling",E,E,90,N],[12,"stack_mode",E,E,90,N],[3,"XColor",E,E,N,N],[12,"pixel",E,E,91,N],[12,"red",E,E,91,N],[12,"green",E,E,91,N],[12,"blue",E,E,91,N],[12,"flags",E,E,91,N],[12,"pad",E,E,91,N],[3,"XSegment",E,E,N,N],[12,"x1",E,E,92,N],[12,"y1",E,E,92,N],[12,"x2",E,E,92,N],[12,"y2",E,E,92,N],[3,"XPoint",E,E,N,N],[12,"x",E,E,93,N],[12,"y",E,E,93,N],[3,R[837],E,E,N,N],[12,"x",E,E,94,N],[12,"y",E,E,94,N],[12,"width",E,E,94,N],[12,"height",E,E,94,N],[3,"XArc",E,E,N,N],[12,"x",E,E,95,N],[12,"y",E,E,95,N],[12,"width",E,E,95,N],[12,"height",E,E,95,N],[12,"angle1",E,E,95,N],[12,"angle2",E,E,95,N],[3,R[838],E,E,N,N],[12,R[348],E,E,96,N],[12,R[349],E,E,96,N],[12,R[350],E,E,96,N],[12,R[351],E,E,96,N],[12,"led",E,E,96,N],[12,"led_mode",E,E,96,N],[12,"key",E,E,96,N],[12,"auto_repeat_mode",E,E,96,N],[3,R[839],E,E,N,N],[12,R[348],E,E,97,N],[12,R[349],E,E,97,N],[12,R[350],E,E,97,N],[12,R[351],E,E,97,N],[12,"led_mask",E,E,97,N],[12,"global_auto_repeat",E,E,97,N],[12,"auto_repeats",E,E,97,N],[3,R[840],E,E,N,N],[12,"time",E,E,98,N],[12,"x",E,E,98,N],[12,"y",E,E,98,N],[3,R[841],E,E,N,N],[12,"max_keypermod",E,E,99,N],[12,"modifiermap",E,E,99,N],[3,R[979],E,E,N,N],[3,R[980],E,E,N,N],[3,R[755],E,E,N,N],[12,R[334],E,E,100,N],[12,"private1",E,E,100,N],[12,"fd",E,E,100,N],[12,"private2",E,E,100,N],[12,"proto_major_version",E,E,100,N],[12,"proto_minor_version",E,E,100,N],[12,"vendor",E,E,100,N],[12,"private3",E,E,100,N],[12,"private4",E,E,100,N],[12,"private5",E,E,100,N],[12,"private6",E,E,100,N],[12,"resource_alloc",E,E,100,N],[12,R[352],E,E,100,N],[12,R[353],E,E,100,N],[12,R[354],E,E,100,N],[12,R[355],E,E,100,N],[12,"nformats",E,E,100,N],[12,R[379],E,E,100,N],[12,"private8",E,E,100,N],[12,"release",E,E,100,N],[12,"private9",E,E,100,N],[12,"private10",E,E,100,N],[12,"qlen",E,E,100,N],[12,"last_request_read",E,E,100,N],[12,"request",E,E,100,N],[12,"private11",E,E,100,N],[12,"private12",E,E,100,N],[12,"private13",E,E,100,N],[12,"private14",E,E,100,N],[12,"max_request_size",E,E,100,N],[12,"db",E,E,100,N],[12,"private15",E,E,100,N],[12,R[1656],E,E,100,N],[12,"default_screen",E,E,100,N],[12,"nscreens",E,E,100,N],[12,"screens",E,E,100,N],[12,"motion_buffer",E,E,100,N],[12,"private16",E,E,100,N],[12,"min_keycode",E,E,100,N],[12,"max_keycode",E,E,100,N],[12,"private17",E,E,100,N],[12,"private18",E,E,100,N],[12,"private19",E,E,100,N],[12,"xdefaults",E,E,100,N],[3,R[842],E,E,N,N],[12,"type_",E,E,101,N],[12,"serial",E,E,101,N],[12,R[356],E,E,101,N],[12,R[359],E,E,101,N],[12,"window",E,E,101,N],[12,"root",E,E,101,N],[12,R[357],E,E,101,N],[12,"time",E,E,101,N],[12,"x",E,E,101,N],[12,"y",E,E,101,N],[12,"x_root",E,E,101,N],[12,"y_root",E,E,101,N],[12,"state",E,E,101,N],[12,"keycode",E,E,101,N],[12,R[358],E,E,101,N],[3,R[843],E,E,N,N],[12,"type_",E,E,102,N],[12,"serial",E,E,102,N],[12,R[356],E,E,102,N],[12,R[359],E,E,102,N],[12,"window",E,E,102,N],[12,"root",E,E,102,N],[12,R[357],E,E,102,N],[12,"time",E,E,102,N],[12,"x",E,E,102,N],[12,"y",E,E,102,N],[12,"x_root",E,E,102,N],[12,"y_root",E,E,102,N],[12,"state",E,E,102,N],[12,"button",E,E,102,N],[12,R[358],E,E,102,N],[3,R[844],E,E,N,N],[12,"type_",E,E,103,N],[12,"serial",E,E,103,N],[12,R[356],E,E,103,N],[12,R[359],E,E,103,N],[12,"window",E,E,103,N],[12,"root",E,E,103,N],[12,R[357],E,E,103,N],[12,"time",E,E,103,N],[12,"x",E,E,103,N],[12,"y",E,E,103,N],[12,"x_root",E,E,103,N],[12,"y_root",E,E,103,N],[12,"state",E,E,103,N],[12,"is_hint",E,E,103,N],[12,R[358],E,E,103,N],[3,R[845],E,E,N,N],[12,"type_",E,E,104,N],[12,"serial",E,E,104,N],[12,R[356],E,E,104,N],[12,R[359],E,E,104,N],[12,"window",E,E,104,N],[12,"root",E,E,104,N],[12,R[357],E,E,104,N],[12,"time",E,E,104,N],[12,"x",E,E,104,N],[12,"y",E,E,104,N],[12,"x_root",E,E,104,N],[12,"y_root",E,E,104,N],[12,"mode",E,E,104,N],[12,"detail",E,E,104,N],[12,R[358],E,E,104,N],[12,"focus",E,E,104,N],[12,"state",E,E,104,N],[3,R[846],E,E,N,N],[12,"type_",E,E,105,N],[12,"serial",E,E,105,N],[12,R[356],E,E,105,N],[12,R[359],E,E,105,N],[12,"window",E,E,105,N],[12,"mode",E,E,105,N],[12,"detail",E,E,105,N],[3,R[847],E,E,N,N],[12,"type_",E,E,106,N],[12,"serial",E,E,106,N],[12,R[356],E,E,106,N],[12,R[359],E,E,106,N],[12,"window",E,E,106,N],[12,"key_vector",E,E,106,N],[3,R[848],E,E,N,N],[12,"type_",E,E,107,N],[12,"serial",E,E,107,N],[12,R[356],E,E,107,N],[12,R[359],E,E,107,N],[12,"window",E,E,107,N],[12,"x",E,E,107,N],[12,"y",E,E,107,N],[12,"width",E,E,107,N],[12,"height",E,E,107,N],[12,"count",E,E,107,N],[3,R[849],E,E,N,N],[12,"type_",E,E,108,N],[12,"serial",E,E,108,N],[12,R[356],E,E,108,N],[12,R[359],E,E,108,N],[12,"drawable",E,E,108,N],[12,"x",E,E,108,N],[12,"y",E,E,108,N],[12,"width",E,E,108,N],[12,"height",E,E,108,N],[12,"count",E,E,108,N],[12,R[360],E,E,108,N],[12,R[361],E,E,108,N],[3,R[850],E,E,N,N],[12,"type_",E,E,109,N],[12,"serial",E,E,109,N],[12,R[356],E,E,109,N],[12,R[359],E,E,109,N],[12,"drawable",E,E,109,N],[12,R[360],E,E,109,N],[12,R[361],E,E,109,N],[3,R[851],E,E,N,N],[12,"type_",E,E,110,N],[12,"serial",E,E,110,N],[12,R[356],E,E,110,N],[12,R[359],E,E,110,N],[12,"window",E,E,110,N],[12,"state",E,E,110,N],[3,R[852],E,E,N,N],[12,"type_",E,E,111,N],[12,"serial",E,E,111,N],[12,R[356],E,E,111,N],[12,R[359],E,E,111,N],[12,"parent",E,E,111,N],[12,"window",E,E,111,N],[12,"x",E,E,111,N],[12,"y",E,E,111,N],[12,"width",E,E,111,N],[12,"height",E,E,111,N],[12,R[347],E,E,111,N],[12,R[344],E,E,111,N],[3,R[853],E,E,N,N],[12,"type_",E,E,112,N],[12,"serial",E,E,112,N],[12,R[356],E,E,112,N],[12,R[359],E,E,112,N],[12,"event",E,E,112,N],[12,"window",E,E,112,N],[3,R[854],E,E,N,N],[12,"type_",E,E,113,N],[12,"serial",E,E,113,N],[12,R[356],E,E,113,N],[12,R[359],E,E,113,N],[12,"event",E,E,113,N],[12,"window",E,E,113,N],[12,"from_configure",E,E,113,N],[3,R[855],E,E,N,N],[12,"type_",E,E,114,N],[12,"serial",E,E,114,N],[12,R[356],E,E,114,N],[12,R[359],E,E,114,N],[12,"event",E,E,114,N],[12,"window",E,E,114,N],[12,R[344],E,E,114,N],[3,R[856],E,E,N,N],[12,"type_",E,E,115,N],[12,"serial",E,E,115,N],[12,R[356],E,E,115,N],[12,R[359],E,E,115,N],[12,"parent",E,E,115,N],[12,"window",E,E,115,N],[3,R[857],E,E,N,N],[12,"type_",E,E,116,N],[12,"serial",E,E,116,N],[12,R[356],E,E,116,N],[12,R[359],E,E,116,N],[12,"event",E,E,116,N],[12,"window",E,E,116,N],[12,"parent",E,E,116,N],[12,"x",E,E,116,N],[12,"y",E,E,116,N],[12,R[344],E,E,116,N],[3,R[858],E,E,N,N],[12,"type_",E,E,117,N],[12,"serial",E,E,117,N],[12,R[356],E,E,117,N],[12,R[359],E,E,117,N],[12,"event",E,E,117,N],[12,"window",E,E,117,N],[12,"x",E,E,117,N],[12,"y",E,E,117,N],[12,"width",E,E,117,N],[12,"height",E,E,117,N],[12,R[347],E,E,117,N],[12,"above",E,E,117,N],[12,R[344],E,E,117,N],[3,R[859],E,E,N,N],[12,"type_",E,E,118,N],[12,"serial",E,E,118,N],[12,R[356],E,E,118,N],[12,R[359],E,E,118,N],[12,"event",E,E,118,N],[12,"window",E,E,118,N],[12,"x",E,E,118,N],[12,"y",E,E,118,N],[3,R[860],E,E,N,N],[12,"type_",E,E,119,N],[12,"serial",E,E,119,N],[12,R[356],E,E,119,N],[12,R[359],E,E,119,N],[12,"window",E,E,119,N],[12,"width",E,E,119,N],[12,"height",E,E,119,N],[3,R[861],E,E,N,N],[12,"type_",E,E,120,N],[12,"serial",E,E,120,N],[12,R[356],E,E,120,N],[12,R[359],E,E,120,N],[12,"parent",E,E,120,N],[12,"window",E,E,120,N],[12,"x",E,E,120,N],[12,"y",E,E,120,N],[12,"width",E,E,120,N],[12,"height",E,E,120,N],[12,R[347],E,E,120,N],[12,"above",E,E,120,N],[12,"detail",E,E,120,N],[12,"value_mask",E,E,120,N],[3,R[862],E,E,N,N],[12,"type_",E,E,121,N],[12,"serial",E,E,121,N],[12,R[356],E,E,121,N],[12,R[359],E,E,121,N],[12,"event",E,E,121,N],[12,"window",E,E,121,N],[12,"place",E,E,121,N],[3,R[863],E,E,N,N],[12,"type_",E,E,122,N],[12,"serial",E,E,122,N],[12,R[356],E,E,122,N],[12,R[359],E,E,122,N],[12,"parent",E,E,122,N],[12,"window",E,E,122,N],[12,"place",E,E,122,N],[3,R[864],E,E,N,N],[12,"type_",E,E,123,N],[12,"serial",E,E,123,N],[12,R[356],E,E,123,N],[12,R[359],E,E,123,N],[12,"window",E,E,123,N],[12,"atom",E,E,123,N],[12,"time",E,E,123,N],[12,"state",E,E,123,N],[3,R[865],E,E,N,N],[12,"type_",E,E,124,N],[12,"serial",E,E,124,N],[12,R[356],E,E,124,N],[12,R[359],E,E,124,N],[12,"window",E,E,124,N],[12,R[362],E,E,124,N],[12,"time",E,E,124,N],[3,R[866],E,E,N,N],[12,"type_",E,E,125,N],[12,"serial",E,E,125,N],[12,R[356],E,E,125,N],[12,R[359],E,E,125,N],[12,"owner",E,E,125,N],[12,R[363],E,E,125,N],[12,R[362],E,E,125,N],[12,"target",E,E,125,N],[12,"property",E,E,125,N],[12,"time",E,E,125,N],[3,R[867],E,E,N,N],[12,"type_",E,E,126,N],[12,"serial",E,E,126,N],[12,R[356],E,E,126,N],[12,R[359],E,E,126,N],[12,R[363],E,E,126,N],[12,R[362],E,E,126,N],[12,"target",E,E,126,N],[12,"property",E,E,126,N],[12,"time",E,E,126,N],[3,R[868],E,E,N,N],[12,"type_",E,E,127,N],[12,"serial",E,E,127,N],[12,R[356],E,E,127,N],[12,R[359],E,E,127,N],[12,"window",E,E,127,N],[12,R[364],E,E,127,N],[12,"new",E,E,127,N],[12,"state",E,E,127,N],[3,R[869],E,E,N,N],[12,"type_",E,E,128,N],[12,"serial",E,E,128,N],[12,R[356],E,E,128,N],[12,R[359],E,E,128,N],[12,"window",E,E,128,N],[12,"message_type",E,E,128,N],[12,"format",E,E,128,N],[12,"data",E,E,128,N],[3,R[870],E,E,N,N],[12,"type_",E,E,129,N],[12,"serial",E,E,129,N],[12,R[356],E,E,129,N],[12,R[359],E,E,129,N],[12,"window",E,E,129,N],[12,"request",E,E,129,N],[12,"first_keycode",E,E,129,N],[12,"count",E,E,129,N],[3,R[871],E,E,N,N],[12,"type_",E,E,130,N],[12,R[359],E,E,130,N],[12,"resourceid",E,E,130,N],[12,"serial",E,E,130,N],[12,"error_code",E,E,130,N],[12,"request_code",E,E,130,N],[12,R[361],E,E,130,N],[3,R[872],E,E,N,N],[12,"type_",E,E,131,N],[12,"serial",E,E,131,N],[12,R[356],E,E,131,N],[12,R[359],E,E,131,N],[12,"window",E,E,131,N],[3,R[873],E,E,N,N],[12,"type_",E,E,132,N],[12,"serial",E,E,132,N],[12,R[356],E,E,132,N],[12,R[359],E,E,132,N],[12,R[365],E,E,132,N],[12,"evtype",E,E,132,N],[3,R[874],E,E,N,N],[12,"type_",E,E,133,N],[12,"serial",E,E,133,N],[12,R[356],E,E,133,N],[12,R[359],E,E,133,N],[12,R[365],E,E,133,N],[12,"evtype",E,E,133,N],[12,"cookie",E,E,133,N],[12,"data",E,E,133,N],[3,R[875],E,E,N,N],[12,"lbearing",E,E,134,N],[12,"rbearing",E,E,134,N],[12,"width",E,E,134,N],[12,"ascent",E,E,134,N],[12,"descent",E,E,134,N],[12,"attributes",E,E,134,N],[3,R[876],E,E,N,N],[12,"name",E,E,135,N],[12,"card32",E,E,135,N],[3,R[877],E,E,N,N],[12,R[334],E,E,136,N],[12,"fid",E,E,136,N],[12,R[319],E,E,136,N],[12,"min_char_or_byte2",E,E,136,N],[12,"max_char_or_byte2",E,E,136,N],[12,"min_byte1",E,E,136,N],[12,"max_byte1",E,E,136,N],[12,"all_chars_exist",E,E,136,N],[12,"default_char",E,E,136,N],[12,"n_properties",E,E,136,N],[12,"properties",E,E,136,N],[12,"min_bounds",E,E,136,N],[12,"max_bounds",E,E,136,N],[12,"per_char",E,E,136,N],[12,"ascent",E,E,136,N],[12,"descent",E,E,136,N],[3,R[878],E,E,N,N],[12,"chars",E,E,137,N],[12,"nchars",E,E,137,N],[12,"delta",E,E,137,N],[12,"font",E,E,137,N],[3,"XChar2b",E,E,N,N],[12,"byte1",E,E,138,N],[12,"byte2",E,E,138,N],[3,R[879],E,E,N,N],[12,"chars",E,E,139,N],[12,"nchars",E,E,139,N],[12,"delta",E,E,139,N],[12,"font",E,E,139,N],[3,R[880],E,E,N,N],[12,"max_ink_extent",E,E,140,N],[12,"max_logical_extent",E,E,140,N],[3,"_XOM",E,E,N,N],[3,"_XOC",E,E,N,N],[3,R[881],E,E,N,N],[12,"chars",E,E,141,N],[12,"nchars",E,E,141,N],[12,"delta",E,E,141,N],[12,"font_set",E,E,141,N],[3,R[882],E,E,N,N],[12,"chars",E,E,142,N],[12,"nchars",E,E,142,N],[12,"delta",E,E,142,N],[12,"font_set",E,E,142,N],[3,R[883],E,E,N,N],[12,"charset_count",E,E,143,N],[12,"charset_list",E,E,143,N],[3,R[884],E,E,N,N],[12,"num_orientation",E,E,144,N],[12,"orientation",E,E,144,N],[3,R[885],E,E,N,N],[12,"num_font",E,E,145,N],[12,"font_struct_list",E,E,145,N],[12,"font_name_list",E,E,145,N],[3,"_XIM",E,E,N,N],[3,"_XIC",E,E,N,N],[3,R[886],E,E,N,N],[12,"count_styles",E,E,146,N],[12,"supported_styles",E,E,146,N],[3,R[887],E,E,N,N],[12,R[366],E,E,147,N],[12,R[367],E,E,147,N],[3,R[888],E,E,N,N],[12,R[366],E,E,148,N],[12,R[367],E,E,148,N],[3,"_XIMText",E,E,N,N],[12,"length",E,E,149,N],[12,"feedback",E,E,149,N],[12,R[368],E,E,149,N],[12,"string",E,E,149,N],[3,R[889],E,E,N,N],[12,"state",E,E,150,N],[3,R[890],E,E,N,N],[12,"length",E,E,151,N],[12,"feedback",E,E,151,N],[12,R[368],E,E,151,N],[12,"string",E,E,151,N],[3,R[891],E,E,N,N],[12,"position",E,E,152,N],[12,R[319],E,E,152,N],[12,"operation",E,E,152,N],[12,"factor",E,E,152,N],[12,"text",E,E,152,N],[3,R[892],E,E,N,N],[12,"caret",E,E,153,N],[12,"chg_first",E,E,153,N],[12,"chg_length",E,E,153,N],[12,"text",E,E,153,N],[3,R[893],E,E,N,N],[12,"position",E,E,154,N],[12,R[319],E,E,154,N],[12,"style",E,E,154,N],[3,R[894],E,E,N,N],[12,"type_",E,E,155,N],[12,"data",E,E,155,N],[3,R[895],E,E,N,N],[12,"keysym",E,E,156,N],[12,"modifier",E,E,156,N],[12,"modifier_mask",E,E,156,N],[3,R[896],E,E,N,N],[12,"num_hot_key",E,E,157,N],[12,"key",E,E,157,N],[3,R[897],E,E,N,N],[12,"count_values",E,E,158,N],[12,"supported_values",E,E,158,N],[3,R[898],E,"The custom event structure.",N,N],[12,"version",E,E,159,N],[12,R[369],E,E,159,N],[12,"msg",E,E,159,N],[3,R[899],E,E,N,N],[12,"event",E,E,160,N],[3,R[900],E,"The custom window manager information structure.",N,N],[12,"version",E,E,161,N],[12,R[369],E,E,161,N],[12,"info",E,E,161,N],[3,R[901],E,E,N,N],[12,R[359],E,"< The X11 display",162,N],[12,"window",E,"< The X11 window",162,N],[3,R[902],E,E,N,N],[12,R[359],E,R[371],163,N],[12,"surface",E,R[372],163,N],[12,"shell_surface",E,R[374],163,N],[3,R[981],E,E,N,N],[3,R[982],E,E,N,N],[3,R[761],E,E,N,N],[12,"gp_offset",E,E,164,N],[12,"fp_offset",E,E,164,N],[12,"overflow_arg_area",E,E,164,N],[12,"reg_save_area",E,E,164,N],[3,R[903],E,R[370],N,N],[12,R[373],E,E,165,N],[3,R[762],E,R[371],N,N],[12,R[373],E,E,166,N],[3,R[763],E,R[372],N,N],[12,R[373],E,E,167,N],[3,R[764],E,R[374],N,N],[12,R[373],E,E,168,N],[19,R[904],E,E,N,N],[12,"mem",E,E,169,N],[12,"unknown",E,E,169,N],[19,R[710],E,E,N,N],[12,"__wseq",E,E,170,N],[12,"__wseq32",E,E,170,N],[19,R[712],E,E,N,N],[12,"__g1_start",E,E,171,N],[12,"__g1_start32",E,E,171,N],[19,R[121],E,E,N,N],[12,"__size",E,E,172,N],[12,R[375],E,E,172,N],[19,R[122],E,E,N,N],[12,"__size",E,E,173,N],[12,R[375],E,E,173,N],[19,R[149],E,E,N,N],[12,"__size",E,E,174,N],[12,R[375],E,E,174,N],[19,R[145],E,E,N,N],[12,"__data",E,E,175,N],[12,"__size",E,E,175,N],[12,R[375],E,E,175,N],[19,R[146],E,E,N,N],[12,"__data",E,E,176,N],[12,"__size",E,E,176,N],[12,R[375],E,E,176,N],[19,R[144],E,E,N,N],[12,"__data",E,E,177,N],[12,"__size",E,E,177,N],[12,R[375],E,E,177,N],[19,R[123],E,E,N,N],[12,"__size",E,E,178,N],[12,R[375],E,E,178,N],[19,R[714],E,E,N,N],[12,"__size",E,E,179,N],[12,R[375],E,E,179,N],[19,R[715],E,E,N,N],[12,"__size",E,E,180,N],[12,R[375],E,E,180,N],[19,R[905],E,E,N,N],[12,"button",E,E,181,N],[12,"axis",E,E,181,N],[12,"hat",E,E,181,N],[19,R[906],E,"\\brief General event structure",N,N],[12,"type_",E,"< Event type, shared with all events",182,N],[12,"common",E,"< Common event data",182,N],[12,R[359],E,R[376],182,N],[12,"window",E,R[376],182,N],[12,"key",E,"< Keyboard event data",182,N],[12,"edit",E,"< Text editing event data",182,N],[12,"text",E,"< Text input event data",182,N],[12,"motion",E,"< Mouse motion event data",182,N],[12,"button",E,"< Mouse button event data",182,N],[12,"wheel",E,"< Mouse wheel event data",182,N],[12,"jaxis",E,"< Joystick axis event data",182,N],[12,"jball",E,"< Joystick ball event data",182,N],[12,"jhat",E,"< Joystick hat event data",182,N],[12,"jbutton",E,"< Joystick button event data",182,N],[12,"jdevice",E,"< Joystick device change event data",182,N],[12,"caxis",E,"< Game Controller axis event data",182,N],[12,"cbutton",E,"< Game Controller button event data",182,N],[12,"cdevice",E,"< Game Controller device event data",182,N],[12,"adevice",E,"< Audio device event data",182,N],[12,"sensor",E,"< Sensor event data",182,N],[12,"quit",E,"< Quit request event data",182,N],[12,"user",E,"< Custom event data",182,N],[12,"syswm",E,"< System dependent window event data",182,N],[12,"tfinger",E,"< Touch finger event data",182,N],[12,"mgesture",E,R[377],182,N],[12,"dgesture",E,R[377],182,N],[12,"drop",E,"< Drag and drop event data",182,N],[12,"padding",E,E,182,N],[19,R[907],E,"\\brief The generic template for any haptic effect.",N,N],[12,"type_",E,"< Effect type.",183,N],[12,"constant",E,"< Constant effect.",183,N],[12,"periodic",E,"< Periodic effect.",183,N],[12,R[378],E,"< Condition effect.",183,N],[12,"ramp",E,"< Ramp effect.",183,N],[12,"leftright",E,"< Left/Right effect.",183,N],[12,"custom",E,"< Custom effect.",183,N],[19,R[908],E,"\\brief A union containing parameters for shaped windows.",N,N],[12,"binarizationCutoff",E,"\\brief A cutoff alpha value for binarization of the window…",184,N],[12,"colorKey",E,E,184,N],[19,R[909],E,E,N,N],[12,"b",E,E,185,N],[12,"s",E,E,185,N],[12,"l",E,E,185,N],[19,"_XEvent",E,E,N,N],[12,"type_",E,E,186,N],[12,"xany",E,E,186,N],[12,"xkey",E,E,186,N],[12,"xbutton",E,E,186,N],[12,"xmotion",E,E,186,N],[12,"xcrossing",E,E,186,N],[12,"xfocus",E,E,186,N],[12,"xexpose",E,E,186,N],[12,"xgraphicsexpose",E,E,186,N],[12,"xnoexpose",E,E,186,N],[12,"xvisibility",E,E,186,N],[12,"xcreatewindow",E,E,186,N],[12,"xdestroywindow",E,E,186,N],[12,"xunmap",E,E,186,N],[12,"xmap",E,E,186,N],[12,"xmaprequest",E,E,186,N],[12,"xreparent",E,E,186,N],[12,"xconfigure",E,E,186,N],[12,"xgravity",E,E,186,N],[12,"xresizerequest",E,E,186,N],[12,"xconfigurerequest",E,E,186,N],[12,"xcirculate",E,E,186,N],[12,"xcirculaterequest",E,E,186,N],[12,"xproperty",E,E,186,N],[12,"xselectionclear",E,E,186,N],[12,"xselectionrequest",E,E,186,N],[12,"xselection",E,E,186,N],[12,"xcolormap",E,E,186,N],[12,"xclient",E,E,186,N],[12,"xmapping",E,E,186,N],[12,"xerror",E,E,186,N],[12,"xkeymap",E,E,186,N],[12,"xgeneric",E,E,186,N],[12,"xcookie",E,E,186,N],[12,"pad",E,E,186,N],[19,R[910],E,E,N,N],[12,R[359],E,E,187,N],[12,"gc",E,E,187,N],[12,"visual",E,E,187,N],[12,"screen",E,E,187,N],[12,R[379],E,E,187,N],[12,"font",E,E,187,N],[19,R[911],E,E,N,N],[12,"multi_byte",E,E,188,N],[12,"wide_char",E,E,188,N],[19,R[912],E,E,N,N],[12,"mbs",E,E,189,N],[12,"wcs",E,E,189,N],[19,R[913],E,E,N,N],[12,"text",E,E,190,N],[12,"bitmap",E,E,190,N],[19,R[914],E,E,N,N],[12,"x11",E,E,191,N],[12,"dummy",E,E,191,N],[19,R[915],E,E,N,N],[12,"x11",E,E,192,N],[12,"wl",E,E,192,N],[12,"dummy",E,E,192,N],[4,"SDL_bool",E,E,N,N],[13,"SDL_FALSE",E,E,193,N],[13,"SDL_TRUE",E,E,193,N],[4,R[916],E,E,N,N],[13,"DUMMY_ENUM_VALUE",E,E,194,N],[4,R[917],E,E,N,N],[13,"SDL_ASSERTION_RETRY",E,"< Retry the assert immediately.",195,N],[13,"SDL_ASSERTION_BREAK",E,"< Make the debugger trigger a breakpoint.",195,N],[13,"SDL_ASSERTION_ABORT",E,"< Terminate the program.",195,N],[13,"SDL_ASSERTION_IGNORE",E,"< Ignore the assert.",195,N],[13,"SDL_ASSERTION_ALWAYS_IGNORE",E,"< Ignore the assert from now on.",195,N],[4,R[918],E,E,N,N],[13,"SDL_ENOMEM",E,E,196,N],[13,"SDL_EFREAD",E,E,196,N],[13,"SDL_EFWRITE",E,E,196,N],[13,"SDL_EFSEEK",E,E,196,N],[13,"SDL_UNSUPPORTED",E,E,196,N],[13,"SDL_LASTERROR",E,E,196,N],[4,R[919],E,"The SDL thread priority.",N,N],[13,"SDL_THREAD_PRIORITY_LOW",E,E,197,N],[13,"SDL_THREAD_PRIORITY_NORMAL",E,E,197,N],[13,"SDL_THREAD_PRIORITY_HIGH",E,E,197,N],[13,"SDL_THREAD_PRIORITY_TIME_CRITICAL",E,E,197,N],[4,R[920],E,E,N,N],[13,"SDL_AUDIO_STOPPED",E,E,198,N],[13,"SDL_AUDIO_PLAYING",E,E,198,N],[13,"SDL_AUDIO_PAUSED",E,E,198,N],[4,R[692],E,"Pixel type.",N,N],[13,R[417],E,E,199,N],[13,R[418],E,E,199,N],[13,R[419],E,E,199,N],[13,R[420],E,E,199,N],[13,R[421],E,E,199,N],[13,R[422],E,E,199,N],[13,R[423],E,E,199,N],[13,R[424],E,E,199,N],[13,R[425],E,E,199,N],[13,R[426],E,E,199,N],[13,R[427],E,E,199,N],[13,R[428],E,E,199,N],[4,R[693],E,"Bitmap pixel order, high bit -> low bit.",N,N],[13,R[429],E,E,200,N],[13,R[430],E,E,200,N],[13,R[431],E,E,200,N],[4,R[694],E,"Packed component order, high bit -> low bit.",N,N],[13,R[432],E,E,201,N],[13,R[433],E,E,201,N],[13,R[434],E,E,201,N],[13,R[435],E,E,201,N],[13,R[436],E,E,201,N],[13,R[437],E,E,201,N],[13,R[438],E,E,201,N],[13,R[439],E,E,201,N],[13,R[440],E,E,201,N],[4,R[695],E,"Array component order, low byte -> high byte.",N,N],[13,R[441],E,E,202,N],[13,R[442],E,E,202,N],[13,R[443],E,E,202,N],[13,R[444],E,E,202,N],[13,R[445],E,E,202,N],[13,R[446],E,E,202,N],[13,R[447],E,E,202,N],[4,R[696],E,"Packed component layout.",N,N],[13,R[448],E,E,203,N],[13,R[449],E,E,203,N],[13,R[450],E,E,203,N],[13,R[451],E,E,203,N],[13,R[452],E,E,203,N],[13,R[453],E,E,203,N],[13,R[454],E,E,203,N],[13,R[455],E,E,203,N],[13,R[456],E,E,203,N],[4,R[697],E,E,N,N],[13,R[457],E,E,204,N],[13,R[458],E,E,204,N],[13,R[459],E,E,204,N],[13,R[460],E,E,204,N],[13,R[461],E,E,204,N],[13,R[462],E,E,204,N],[13,R[463],E,E,204,N],[13,R[464],E,E,204,N],[13,R[465],E,E,204,N],[13,R[466],E,E,204,N],[13,R[467],E,E,204,N],[13,R[468],E,E,204,N],[13,R[469],E,E,204,N],[13,R[470],E,E,204,N],[13,R[471],E,E,204,N],[13,R[472],E,E,204,N],[13,R[473],E,E,204,N],[13,R[474],E,E,204,N],[13,R[475],E,E,204,N],[13,R[476],E,E,204,N],[13,R[477],E,E,204,N],[13,R[478],E,E,204,N],[13,R[479],E,E,204,N],[13,R[480],E,E,204,N],[13,R[481],E,E,204,N],[13,R[482],E,E,204,N],[13,R[483],E,E,204,N],[13,R[484],E,E,204,N],[13,R[485],E,E,204,N],[13,R[486],E,E,204,N],[13,R[487],E,E,204,N],[13,R[488],E,"< Planar mode: Y + V + U  (3 planes)",204,N],[13,R[489],E,"< Planar mode: Y + U + V  (3 planes)",204,N],[13,R[490],E,"< Packed mode: Y0+U0+Y1+V0 (1 plane)",204,N],[13,R[491],E,"< Packed mode: U0+Y0+V0+Y1 (1 plane)",204,N],[13,R[492],E,"< Packed mode: Y0+V0+Y1+U0 (1 plane)",204,N],[13,R[493],E,"< Planar mode: Y + U/V interleaved  (2 planes)",204,N],[13,R[494],E,"< Planar mode: Y + V/U interleaved  (2 planes)",204,N],[13,R[495],E,"< Android video texture format",204,N],[4,R[921],E,"\\brief The blend mode used in SDL_RenderCopy() and drawing…",N,N],[13,"SDL_BLENDMODE_NONE",E,"< no blending dstRGBA = srcRGBA",205,N],[13,"SDL_BLENDMODE_BLEND",E,"< alpha blending dstRGB = (srcRGB * srcA) + (dstRGB *…",205,N],[13,"SDL_BLENDMODE_ADD",E,"< additive blending dstRGB = (srcRGB * srcA) + dstRGB dstA…",205,N],[13,"SDL_BLENDMODE_MOD",E,"< color modulate dstRGB = srcRGB * dstRGB dstA = dstA",205,N],[13,"SDL_BLENDMODE_INVALID",E,E,205,N],[4,R[922],E,"\\brief The blend operation used when combining source and…",N,N],[13,"SDL_BLENDOPERATION_ADD",E,"< dst + src: supported by all renderers",206,N],[13,"SDL_BLENDOPERATION_SUBTRACT",E,"< dst - src : supported by D3D9, D3D11, OpenGL, OpenGLES",206,N],[13,"SDL_BLENDOPERATION_REV_SUBTRACT",E,"< src - dst : supported by D3D9, D3D11, OpenGL, OpenGLES",206,N],[13,"SDL_BLENDOPERATION_MINIMUM",E,"< min(dst, src) : supported by D3D11",206,N],[13,"SDL_BLENDOPERATION_MAXIMUM",E,"< max(dst, src) : supported by D3D11",206,N],[4,R[923],E,"\\brief The normalized factor used to multiply pixel…",N,N],[13,"SDL_BLENDFACTOR_ZERO",E,"< 0, 0, 0, 0",207,N],[13,"SDL_BLENDFACTOR_ONE",E,"< 1, 1, 1, 1",207,N],[13,"SDL_BLENDFACTOR_SRC_COLOR",E,"< srcR, srcG, srcB, srcA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR",E,"< 1-srcR, 1-srcG, 1-srcB, 1-srcA",207,N],[13,"SDL_BLENDFACTOR_SRC_ALPHA",E,"< srcA, srcA, srcA, srcA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA",E,"< 1-srcA, 1-srcA, 1-srcA, 1-srcA",207,N],[13,"SDL_BLENDFACTOR_DST_COLOR",E,"< dstR, dstG, dstB, dstA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR",E,"< 1-dstR, 1-dstG, 1-dstB, 1-dstA",207,N],[13,"SDL_BLENDFACTOR_DST_ALPHA",E,"< dstA, dstA, dstA, dstA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA",E,"< 1-dstA, 1-dstA, 1-dstA, 1-dstA",207,N],[4,R[924],E,"\\brief The formula used for converting between YUV and RGB",N,N],[13,"SDL_YUV_CONVERSION_JPEG",E,"< Full range JPEG",208,N],[13,"SDL_YUV_CONVERSION_BT601",E,"< BT.601 (the default)",208,N],[13,"SDL_YUV_CONVERSION_BT709",E,"< BT.709",208,N],[13,"SDL_YUV_CONVERSION_AUTOMATIC",E,"< BT.601 for SD content, BT.709 for HD content",208,N],[4,R[925],E,"\\brief The flags on a window",N,N],[13,"SDL_WINDOW_FULLSCREEN",E,"< fullscreen window",209,N],[13,"SDL_WINDOW_OPENGL",E,"< window usable with OpenGL context",209,N],[13,"SDL_WINDOW_SHOWN",E,"< window is visible",209,N],[13,"SDL_WINDOW_HIDDEN",E,"< window is not visible",209,N],[13,"SDL_WINDOW_BORDERLESS",E,"< no window decoration",209,N],[13,"SDL_WINDOW_RESIZABLE",E,"< window can be resized",209,N],[13,"SDL_WINDOW_MINIMIZED",E,"< window is minimized",209,N],[13,"SDL_WINDOW_MAXIMIZED",E,"< window is maximized",209,N],[13,"SDL_WINDOW_INPUT_GRABBED",E,"< window has grabbed input focus",209,N],[13,"SDL_WINDOW_INPUT_FOCUS",E,"< window has input focus",209,N],[13,"SDL_WINDOW_MOUSE_FOCUS",E,"< window has mouse focus",209,N],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP",E,E,209,N],[13,"SDL_WINDOW_FOREIGN",E,"< window not created by SDL",209,N],[13,"SDL_WINDOW_ALLOW_HIGHDPI",E,"< window should be created in high-DPI mode if supported.…",209,N],[13,"SDL_WINDOW_MOUSE_CAPTURE",E,"< window has mouse captured (unrelated to INPUT_GRABBED)",209,N],[13,"SDL_WINDOW_ALWAYS_ON_TOP",E,"< window should always be above others",209,N],[13,"SDL_WINDOW_SKIP_TASKBAR",E,"< window should not be added to the taskbar",209,N],[13,"SDL_WINDOW_UTILITY",E,"< window should be treated as a utility window",209,N],[13,"SDL_WINDOW_TOOLTIP",E,"< window should be treated as a tooltip",209,N],[13,"SDL_WINDOW_POPUP_MENU",E,"< window should be treated as a popup menu",209,N],[13,"SDL_WINDOW_VULKAN",E,"< window usable for Vulkan surface",209,N],[4,R[926],E,"\\brief Event subtype for window events",N,N],[13,"SDL_WINDOWEVENT_NONE",E,R[380],210,N],[13,"SDL_WINDOWEVENT_SHOWN",E,"< Window has been shown",210,N],[13,"SDL_WINDOWEVENT_HIDDEN",E,"< Window has been hidden",210,N],[13,"SDL_WINDOWEVENT_EXPOSED",E,"< Window has been exposed and should be redrawn",210,N],[13,"SDL_WINDOWEVENT_MOVED",E,"< Window has been moved to data1, data2",210,N],[13,"SDL_WINDOWEVENT_RESIZED",E,"< Window has been resized to data1xdata2",210,N],[13,"SDL_WINDOWEVENT_SIZE_CHANGED",E,"< The window size has changed, either as a result of an…",210,N],[13,"SDL_WINDOWEVENT_MINIMIZED",E,"< Window has been minimized",210,N],[13,"SDL_WINDOWEVENT_MAXIMIZED",E,"< Window has been maximized",210,N],[13,"SDL_WINDOWEVENT_RESTORED",E,"< Window has been restored to normal size and position",210,N],[13,"SDL_WINDOWEVENT_ENTER",E,"< Window has gained mouse focus",210,N],[13,"SDL_WINDOWEVENT_LEAVE",E,"< Window has lost mouse focus",210,N],[13,"SDL_WINDOWEVENT_FOCUS_GAINED",E,"< Window has gained keyboard focus",210,N],[13,"SDL_WINDOWEVENT_FOCUS_LOST",E,"< Window has lost keyboard focus",210,N],[13,"SDL_WINDOWEVENT_CLOSE",E,"< The window manager requests that the window be closed",210,N],[13,"SDL_WINDOWEVENT_TAKE_FOCUS",E,"< Window is being offered a focus (should…",210,N],[13,"SDL_WINDOWEVENT_HIT_TEST",E,"< Window had a hit test that wasn't SDL_HITTEST_NORMAL.",210,N],[4,R[927],E,"\\brief Event subtype for display events",N,N],[13,"SDL_DISPLAYEVENT_NONE",E,R[380],211,N],[13,"SDL_DISPLAYEVENT_ORIENTATION",E,"< Display orientation has changed to data1",211,N],[4,R[928],E,E,N,N],[13,"SDL_ORIENTATION_UNKNOWN",E,"< The display orientation can't be determined",212,N],[13,"SDL_ORIENTATION_LANDSCAPE",E,"< The display is in landscape mode, with the right side…",212,N],[13,"SDL_ORIENTATION_LANDSCAPE_FLIPPED",E,"< The display is in landscape mode, with the left side up,…",212,N],[13,"SDL_ORIENTATION_PORTRAIT",E,"< The display is in portrait mode",212,N],[13,"SDL_ORIENTATION_PORTRAIT_FLIPPED",E,"< The display is in portrait mode, upside down",212,N],[4,R[929],E,"\\brief OpenGL configuration attributes",N,N],[13,"SDL_GL_RED_SIZE",E,E,213,N],[13,"SDL_GL_GREEN_SIZE",E,E,213,N],[13,"SDL_GL_BLUE_SIZE",E,E,213,N],[13,"SDL_GL_ALPHA_SIZE",E,E,213,N],[13,"SDL_GL_BUFFER_SIZE",E,E,213,N],[13,"SDL_GL_DOUBLEBUFFER",E,E,213,N],[13,"SDL_GL_DEPTH_SIZE",E,E,213,N],[13,"SDL_GL_STENCIL_SIZE",E,E,213,N],[13,"SDL_GL_ACCUM_RED_SIZE",E,E,213,N],[13,"SDL_GL_ACCUM_GREEN_SIZE",E,E,213,N],[13,"SDL_GL_ACCUM_BLUE_SIZE",E,E,213,N],[13,"SDL_GL_ACCUM_ALPHA_SIZE",E,E,213,N],[13,"SDL_GL_STEREO",E,E,213,N],[13,"SDL_GL_MULTISAMPLEBUFFERS",E,E,213,N],[13,"SDL_GL_MULTISAMPLESAMPLES",E,E,213,N],[13,"SDL_GL_ACCELERATED_VISUAL",E,E,213,N],[13,"SDL_GL_RETAINED_BACKING",E,E,213,N],[13,"SDL_GL_CONTEXT_MAJOR_VERSION",E,E,213,N],[13,"SDL_GL_CONTEXT_MINOR_VERSION",E,E,213,N],[13,"SDL_GL_CONTEXT_EGL",E,E,213,N],[13,"SDL_GL_CONTEXT_FLAGS",E,E,213,N],[13,"SDL_GL_CONTEXT_PROFILE_MASK",E,E,213,N],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT",E,E,213,N],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE",E,E,213,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR",E,E,213,N],[13,"SDL_GL_CONTEXT_RESET_NOTIFICATION",E,E,213,N],[13,"SDL_GL_CONTEXT_NO_ERROR",E,E,213,N],[4,R[930],E,E,N,N],[13,"SDL_GL_CONTEXT_PROFILE_CORE",E,E,214,N],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY",E,E,214,N],[13,"SDL_GL_CONTEXT_PROFILE_ES",E,"< GLX_CONTEXT_ES2_PROFILE_BIT_EXT",214,N],[4,R[931],E,E,N,N],[13,"SDL_GL_CONTEXT_DEBUG_FLAG",E,E,215,N],[13,"SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG",E,E,215,N],[13,"SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG",E,E,215,N],[13,"SDL_GL_CONTEXT_RESET_ISOLATION_FLAG",E,E,215,N],[4,R[932],E,E,N,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE",E,E,216,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH",E,E,216,N],[4,R[933],E,E,N,N],[13,"SDL_GL_CONTEXT_RESET_NO_NOTIFICATION",E,E,217,N],[13,"SDL_GL_CONTEXT_RESET_LOSE_CONTEXT",E,E,217,N],[4,R[934],E,"\\brief Possible return values from the SDL_HitTest callback.",N,N],[13,"SDL_HITTEST_NORMAL",E,"< Region is normal. No special properties.",218,N],[13,"SDL_HITTEST_DRAGGABLE",E,"< Region can drag entire window.",218,N],[13,"SDL_HITTEST_RESIZE_TOPLEFT",E,E,218,N],[13,"SDL_HITTEST_RESIZE_TOP",E,E,218,N],[13,"SDL_HITTEST_RESIZE_TOPRIGHT",E,E,218,N],[13,"SDL_HITTEST_RESIZE_RIGHT",E,E,218,N],[13,"SDL_HITTEST_RESIZE_BOTTOMRIGHT",E,E,218,N],[13,"SDL_HITTEST_RESIZE_BOTTOM",E,E,218,N],[13,"SDL_HITTEST_RESIZE_BOTTOMLEFT",E,E,218,N],[13,"SDL_HITTEST_RESIZE_LEFT",E,E,218,N],[4,R[935],E,"\\brief The SDL keyboard scancode representation.",N,N],[13,"SDL_SCANCODE_UNKNOWN",E,E,219,N],[13,"SDL_SCANCODE_A",E,E,219,N],[13,"SDL_SCANCODE_B",E,E,219,N],[13,"SDL_SCANCODE_C",E,E,219,N],[13,"SDL_SCANCODE_D",E,E,219,N],[13,"SDL_SCANCODE_E",E,E,219,N],[13,"SDL_SCANCODE_F",E,E,219,N],[13,"SDL_SCANCODE_G",E,E,219,N],[13,"SDL_SCANCODE_H",E,E,219,N],[13,"SDL_SCANCODE_I",E,E,219,N],[13,"SDL_SCANCODE_J",E,E,219,N],[13,"SDL_SCANCODE_K",E,E,219,N],[13,"SDL_SCANCODE_L",E,E,219,N],[13,"SDL_SCANCODE_M",E,E,219,N],[13,"SDL_SCANCODE_N",E,E,219,N],[13,"SDL_SCANCODE_O",E,E,219,N],[13,"SDL_SCANCODE_P",E,E,219,N],[13,"SDL_SCANCODE_Q",E,E,219,N],[13,"SDL_SCANCODE_R",E,E,219,N],[13,"SDL_SCANCODE_S",E,E,219,N],[13,"SDL_SCANCODE_T",E,E,219,N],[13,"SDL_SCANCODE_U",E,E,219,N],[13,"SDL_SCANCODE_V",E,E,219,N],[13,"SDL_SCANCODE_W",E,E,219,N],[13,"SDL_SCANCODE_X",E,E,219,N],[13,"SDL_SCANCODE_Y",E,E,219,N],[13,"SDL_SCANCODE_Z",E,E,219,N],[13,"SDL_SCANCODE_1",E,E,219,N],[13,"SDL_SCANCODE_2",E,E,219,N],[13,"SDL_SCANCODE_3",E,E,219,N],[13,"SDL_SCANCODE_4",E,E,219,N],[13,"SDL_SCANCODE_5",E,E,219,N],[13,"SDL_SCANCODE_6",E,E,219,N],[13,"SDL_SCANCODE_7",E,E,219,N],[13,"SDL_SCANCODE_8",E,E,219,N],[13,"SDL_SCANCODE_9",E,E,219,N],[13,"SDL_SCANCODE_0",E,E,219,N],[13,"SDL_SCANCODE_RETURN",E,E,219,N],[13,"SDL_SCANCODE_ESCAPE",E,E,219,N],[13,"SDL_SCANCODE_BACKSPACE",E,E,219,N],[13,"SDL_SCANCODE_TAB",E,E,219,N],[13,"SDL_SCANCODE_SPACE",E,E,219,N],[13,"SDL_SCANCODE_MINUS",E,E,219,N],[13,"SDL_SCANCODE_EQUALS",E,E,219,N],[13,"SDL_SCANCODE_LEFTBRACKET",E,E,219,N],[13,"SDL_SCANCODE_RIGHTBRACKET",E,E,219,N],[13,"SDL_SCANCODE_BACKSLASH",E,"< Located at the lower left of the return key on ISO…",219,N],[13,"SDL_SCANCODE_NONUSHASH",E,"< ISO USB keyboards actually use this code instead of 49…",219,N],[13,"SDL_SCANCODE_SEMICOLON",E,E,219,N],[13,"SDL_SCANCODE_APOSTROPHE",E,E,219,N],[13,"SDL_SCANCODE_GRAVE",E,"< Located in the top left corner (on both ANSI and ISO…",219,N],[13,"SDL_SCANCODE_COMMA",E,E,219,N],[13,"SDL_SCANCODE_PERIOD",E,E,219,N],[13,"SDL_SCANCODE_SLASH",E,E,219,N],[13,"SDL_SCANCODE_CAPSLOCK",E,E,219,N],[13,"SDL_SCANCODE_F1",E,E,219,N],[13,"SDL_SCANCODE_F2",E,E,219,N],[13,"SDL_SCANCODE_F3",E,E,219,N],[13,"SDL_SCANCODE_F4",E,E,219,N],[13,"SDL_SCANCODE_F5",E,E,219,N],[13,"SDL_SCANCODE_F6",E,E,219,N],[13,"SDL_SCANCODE_F7",E,E,219,N],[13,"SDL_SCANCODE_F8",E,E,219,N],[13,"SDL_SCANCODE_F9",E,E,219,N],[13,"SDL_SCANCODE_F10",E,E,219,N],[13,"SDL_SCANCODE_F11",E,E,219,N],[13,"SDL_SCANCODE_F12",E,E,219,N],[13,"SDL_SCANCODE_PRINTSCREEN",E,E,219,N],[13,"SDL_SCANCODE_SCROLLLOCK",E,E,219,N],[13,"SDL_SCANCODE_PAUSE",E,E,219,N],[13,"SDL_SCANCODE_INSERT",E,"< insert on PC, help on some Mac keyboards (but does send…",219,N],[13,"SDL_SCANCODE_HOME",E,E,219,N],[13,"SDL_SCANCODE_PAGEUP",E,E,219,N],[13,"SDL_SCANCODE_DELETE",E,E,219,N],[13,"SDL_SCANCODE_END",E,E,219,N],[13,"SDL_SCANCODE_PAGEDOWN",E,E,219,N],[13,"SDL_SCANCODE_RIGHT",E,E,219,N],[13,"SDL_SCANCODE_LEFT",E,E,219,N],[13,"SDL_SCANCODE_DOWN",E,E,219,N],[13,"SDL_SCANCODE_UP",E,E,219,N],[13,"SDL_SCANCODE_NUMLOCKCLEAR",E,"< num lock on PC, clear on Mac keyboards",219,N],[13,"SDL_SCANCODE_KP_DIVIDE",E,E,219,N],[13,"SDL_SCANCODE_KP_MULTIPLY",E,E,219,N],[13,"SDL_SCANCODE_KP_MINUS",E,E,219,N],[13,"SDL_SCANCODE_KP_PLUS",E,E,219,N],[13,"SDL_SCANCODE_KP_ENTER",E,E,219,N],[13,"SDL_SCANCODE_KP_1",E,E,219,N],[13,"SDL_SCANCODE_KP_2",E,E,219,N],[13,"SDL_SCANCODE_KP_3",E,E,219,N],[13,"SDL_SCANCODE_KP_4",E,E,219,N],[13,"SDL_SCANCODE_KP_5",E,E,219,N],[13,"SDL_SCANCODE_KP_6",E,E,219,N],[13,"SDL_SCANCODE_KP_7",E,E,219,N],[13,"SDL_SCANCODE_KP_8",E,E,219,N],[13,"SDL_SCANCODE_KP_9",E,E,219,N],[13,"SDL_SCANCODE_KP_0",E,E,219,N],[13,"SDL_SCANCODE_KP_PERIOD",E,E,219,N],[13,"SDL_SCANCODE_NONUSBACKSLASH",E,"< This is the additional key that ISO keyboards have over…",219,N],[13,"SDL_SCANCODE_APPLICATION",E,"< windows contextual menu, compose",219,N],[13,"SDL_SCANCODE_POWER",E,"< The USB document says this is a status flag, not a…",219,N],[13,"SDL_SCANCODE_KP_EQUALS",E,E,219,N],[13,"SDL_SCANCODE_F13",E,E,219,N],[13,"SDL_SCANCODE_F14",E,E,219,N],[13,"SDL_SCANCODE_F15",E,E,219,N],[13,"SDL_SCANCODE_F16",E,E,219,N],[13,"SDL_SCANCODE_F17",E,E,219,N],[13,"SDL_SCANCODE_F18",E,E,219,N],[13,"SDL_SCANCODE_F19",E,E,219,N],[13,"SDL_SCANCODE_F20",E,E,219,N],[13,"SDL_SCANCODE_F21",E,E,219,N],[13,"SDL_SCANCODE_F22",E,E,219,N],[13,"SDL_SCANCODE_F23",E,E,219,N],[13,"SDL_SCANCODE_F24",E,E,219,N],[13,"SDL_SCANCODE_EXECUTE",E,E,219,N],[13,"SDL_SCANCODE_HELP",E,E,219,N],[13,"SDL_SCANCODE_MENU",E,E,219,N],[13,"SDL_SCANCODE_SELECT",E,E,219,N],[13,"SDL_SCANCODE_STOP",E,E,219,N],[13,"SDL_SCANCODE_AGAIN",E,"< redo",219,N],[13,"SDL_SCANCODE_UNDO",E,E,219,N],[13,"SDL_SCANCODE_CUT",E,E,219,N],[13,"SDL_SCANCODE_COPY",E,E,219,N],[13,"SDL_SCANCODE_PASTE",E,E,219,N],[13,"SDL_SCANCODE_FIND",E,E,219,N],[13,"SDL_SCANCODE_MUTE",E,E,219,N],[13,"SDL_SCANCODE_VOLUMEUP",E,E,219,N],[13,"SDL_SCANCODE_VOLUMEDOWN",E,E,219,N],[13,"SDL_SCANCODE_KP_COMMA",E,E,219,N],[13,"SDL_SCANCODE_KP_EQUALSAS400",E,E,219,N],[13,"SDL_SCANCODE_INTERNATIONAL1",E,"< used on Asian keyboards, see footnotes in USB doc",219,N],[13,"SDL_SCANCODE_INTERNATIONAL2",E,E,219,N],[13,"SDL_SCANCODE_INTERNATIONAL3",E,"< Yen",219,N],[13,"SDL_SCANCODE_INTERNATIONAL4",E,E,219,N],[13,"SDL_SCANCODE_INTERNATIONAL5",E,E,219,N],[13,"SDL_SCANCODE_INTERNATIONAL6",E,E,219,N],[13,"SDL_SCANCODE_INTERNATIONAL7",E,E,219,N],[13,"SDL_SCANCODE_INTERNATIONAL8",E,E,219,N],[13,"SDL_SCANCODE_INTERNATIONAL9",E,E,219,N],[13,"SDL_SCANCODE_LANG1",E,"< Hangul/English toggle",219,N],[13,"SDL_SCANCODE_LANG2",E,"< Hanja conversion",219,N],[13,"SDL_SCANCODE_LANG3",E,"< Katakana",219,N],[13,"SDL_SCANCODE_LANG4",E,"< Hiragana",219,N],[13,"SDL_SCANCODE_LANG5",E,"< Zenkaku/Hankaku",219,N],[13,"SDL_SCANCODE_LANG6",E,R[381],219,N],[13,"SDL_SCANCODE_LANG7",E,R[381],219,N],[13,"SDL_SCANCODE_LANG8",E,R[381],219,N],[13,"SDL_SCANCODE_LANG9",E,R[381],219,N],[13,"SDL_SCANCODE_ALTERASE",E,"< Erase-Eaze",219,N],[13,"SDL_SCANCODE_SYSREQ",E,E,219,N],[13,"SDL_SCANCODE_CANCEL",E,E,219,N],[13,"SDL_SCANCODE_CLEAR",E,E,219,N],[13,"SDL_SCANCODE_PRIOR",E,E,219,N],[13,"SDL_SCANCODE_RETURN2",E,E,219,N],[13,"SDL_SCANCODE_SEPARATOR",E,E,219,N],[13,"SDL_SCANCODE_OUT",E,E,219,N],[13,"SDL_SCANCODE_OPER",E,E,219,N],[13,"SDL_SCANCODE_CLEARAGAIN",E,E,219,N],[13,"SDL_SCANCODE_CRSEL",E,E,219,N],[13,"SDL_SCANCODE_EXSEL",E,E,219,N],[13,"SDL_SCANCODE_KP_00",E,E,219,N],[13,"SDL_SCANCODE_KP_000",E,E,219,N],[13,"SDL_SCANCODE_THOUSANDSSEPARATOR",E,E,219,N],[13,"SDL_SCANCODE_DECIMALSEPARATOR",E,E,219,N],[13,"SDL_SCANCODE_CURRENCYUNIT",E,E,219,N],[13,"SDL_SCANCODE_CURRENCYSUBUNIT",E,E,219,N],[13,"SDL_SCANCODE_KP_LEFTPAREN",E,E,219,N],[13,"SDL_SCANCODE_KP_RIGHTPAREN",E,E,219,N],[13,"SDL_SCANCODE_KP_LEFTBRACE",E,E,219,N],[13,"SDL_SCANCODE_KP_RIGHTBRACE",E,E,219,N],[13,"SDL_SCANCODE_KP_TAB",E,E,219,N],[13,"SDL_SCANCODE_KP_BACKSPACE",E,E,219,N],[13,"SDL_SCANCODE_KP_A",E,E,219,N],[13,"SDL_SCANCODE_KP_B",E,E,219,N],[13,"SDL_SCANCODE_KP_C",E,E,219,N],[13,"SDL_SCANCODE_KP_D",E,E,219,N],[13,"SDL_SCANCODE_KP_E",E,E,219,N],[13,"SDL_SCANCODE_KP_F",E,E,219,N],[13,"SDL_SCANCODE_KP_XOR",E,E,219,N],[13,"SDL_SCANCODE_KP_POWER",E,E,219,N],[13,"SDL_SCANCODE_KP_PERCENT",E,E,219,N],[13,"SDL_SCANCODE_KP_LESS",E,E,219,N],[13,"SDL_SCANCODE_KP_GREATER",E,E,219,N],[13,"SDL_SCANCODE_KP_AMPERSAND",E,E,219,N],[13,"SDL_SCANCODE_KP_DBLAMPERSAND",E,E,219,N],[13,"SDL_SCANCODE_KP_VERTICALBAR",E,E,219,N],[13,"SDL_SCANCODE_KP_DBLVERTICALBAR",E,E,219,N],[13,"SDL_SCANCODE_KP_COLON",E,E,219,N],[13,"SDL_SCANCODE_KP_HASH",E,E,219,N],[13,"SDL_SCANCODE_KP_SPACE",E,E,219,N],[13,"SDL_SCANCODE_KP_AT",E,E,219,N],[13,"SDL_SCANCODE_KP_EXCLAM",E,E,219,N],[13,"SDL_SCANCODE_KP_MEMSTORE",E,E,219,N],[13,"SDL_SCANCODE_KP_MEMRECALL",E,E,219,N],[13,"SDL_SCANCODE_KP_MEMCLEAR",E,E,219,N],[13,"SDL_SCANCODE_KP_MEMADD",E,E,219,N],[13,"SDL_SCANCODE_KP_MEMSUBTRACT",E,E,219,N],[13,"SDL_SCANCODE_KP_MEMMULTIPLY",E,E,219,N],[13,"SDL_SCANCODE_KP_MEMDIVIDE",E,E,219,N],[13,"SDL_SCANCODE_KP_PLUSMINUS",E,E,219,N],[13,"SDL_SCANCODE_KP_CLEAR",E,E,219,N],[13,"SDL_SCANCODE_KP_CLEARENTRY",E,E,219,N],[13,"SDL_SCANCODE_KP_BINARY",E,E,219,N],[13,"SDL_SCANCODE_KP_OCTAL",E,E,219,N],[13,"SDL_SCANCODE_KP_DECIMAL",E,E,219,N],[13,"SDL_SCANCODE_KP_HEXADECIMAL",E,E,219,N],[13,"SDL_SCANCODE_LCTRL",E,E,219,N],[13,"SDL_SCANCODE_LSHIFT",E,E,219,N],[13,"SDL_SCANCODE_LALT",E,"< alt, option",219,N],[13,"SDL_SCANCODE_LGUI",E,R[382],219,N],[13,"SDL_SCANCODE_RCTRL",E,E,219,N],[13,"SDL_SCANCODE_RSHIFT",E,E,219,N],[13,"SDL_SCANCODE_RALT",E,"< alt gr, option",219,N],[13,"SDL_SCANCODE_RGUI",E,R[382],219,N],[13,"SDL_SCANCODE_MODE",E,"< I'm not sure if this is really not covered by any of the…",219,N],[13,"SDL_SCANCODE_AUDIONEXT",E,E,219,N],[13,"SDL_SCANCODE_AUDIOPREV",E,E,219,N],[13,"SDL_SCANCODE_AUDIOSTOP",E,E,219,N],[13,"SDL_SCANCODE_AUDIOPLAY",E,E,219,N],[13,"SDL_SCANCODE_AUDIOMUTE",E,E,219,N],[13,"SDL_SCANCODE_MEDIASELECT",E,E,219,N],[13,"SDL_SCANCODE_WWW",E,E,219,N],[13,"SDL_SCANCODE_MAIL",E,E,219,N],[13,"SDL_SCANCODE_CALCULATOR",E,E,219,N],[13,"SDL_SCANCODE_COMPUTER",E,E,219,N],[13,"SDL_SCANCODE_AC_SEARCH",E,E,219,N],[13,"SDL_SCANCODE_AC_HOME",E,E,219,N],[13,"SDL_SCANCODE_AC_BACK",E,E,219,N],[13,"SDL_SCANCODE_AC_FORWARD",E,E,219,N],[13,"SDL_SCANCODE_AC_STOP",E,E,219,N],[13,"SDL_SCANCODE_AC_REFRESH",E,E,219,N],[13,"SDL_SCANCODE_AC_BOOKMARKS",E,E,219,N],[13,"SDL_SCANCODE_BRIGHTNESSDOWN",E,E,219,N],[13,"SDL_SCANCODE_BRIGHTNESSUP",E,E,219,N],[13,"SDL_SCANCODE_DISPLAYSWITCH",E,"< display mirroring/dual display switch, video mode switch",219,N],[13,"SDL_SCANCODE_KBDILLUMTOGGLE",E,E,219,N],[13,"SDL_SCANCODE_KBDILLUMDOWN",E,E,219,N],[13,"SDL_SCANCODE_KBDILLUMUP",E,E,219,N],[13,"SDL_SCANCODE_EJECT",E,E,219,N],[13,"SDL_SCANCODE_SLEEP",E,E,219,N],[13,"SDL_SCANCODE_APP1",E,E,219,N],[13,"SDL_SCANCODE_APP2",E,E,219,N],[13,"SDL_SCANCODE_AUDIOREWIND",E,E,219,N],[13,"SDL_SCANCODE_AUDIOFASTFORWARD",E,E,219,N],[13,"SDL_NUM_SCANCODES",E,"< not a key, just marks the number of scancodes for array…",219,N],[4,R[698],E,E,N,N],[13,R[496],E,E,220,N],[13,R[497],E,E,220,N],[13,R[498],E,E,220,N],[13,R[499],E,E,220,N],[13,"SDLK_TAB",E,E,220,N],[13,R[500],E,E,220,N],[13,R[501],E,E,220,N],[13,R[502],E,E,220,N],[13,R[503],E,E,220,N],[13,R[504],E,E,220,N],[13,R[505],E,E,220,N],[13,R[506],E,E,220,N],[13,R[507],E,E,220,N],[13,R[508],E,E,220,N],[13,R[509],E,E,220,N],[13,R[510],E,E,220,N],[13,R[511],E,E,220,N],[13,R[512],E,E,220,N],[13,R[513],E,E,220,N],[13,R[514],E,E,220,N],[13,R[515],E,E,220,N],[13,"SDLK_0",E,E,220,N],[13,"SDLK_1",E,E,220,N],[13,"SDLK_2",E,E,220,N],[13,"SDLK_3",E,E,220,N],[13,"SDLK_4",E,E,220,N],[13,"SDLK_5",E,E,220,N],[13,"SDLK_6",E,E,220,N],[13,"SDLK_7",E,E,220,N],[13,"SDLK_8",E,E,220,N],[13,"SDLK_9",E,E,220,N],[13,R[516],E,E,220,N],[13,R[517],E,E,220,N],[13,R[518],E,E,220,N],[13,R[519],E,E,220,N],[13,R[520],E,E,220,N],[13,R[521],E,E,220,N],[13,"SDLK_AT",E,E,220,N],[13,R[522],E,E,220,N],[13,R[523],E,E,220,N],[13,R[524],E,E,220,N],[13,R[525],E,E,220,N],[13,R[526],E,E,220,N],[13,R[527],E,E,220,N],[13,"SDLK_a",E,E,220,N],[13,"SDLK_b",E,E,220,N],[13,"SDLK_c",E,E,220,N],[13,"SDLK_d",E,E,220,N],[13,"SDLK_e",E,E,220,N],[13,"SDLK_f",E,E,220,N],[13,"SDLK_g",E,E,220,N],[13,"SDLK_h",E,E,220,N],[13,"SDLK_i",E,E,220,N],[13,"SDLK_j",E,E,220,N],[13,"SDLK_k",E,E,220,N],[13,"SDLK_l",E,E,220,N],[13,"SDLK_m",E,E,220,N],[13,"SDLK_n",E,E,220,N],[13,"SDLK_o",E,E,220,N],[13,"SDLK_p",E,E,220,N],[13,"SDLK_q",E,E,220,N],[13,"SDLK_r",E,E,220,N],[13,"SDLK_s",E,E,220,N],[13,"SDLK_t",E,E,220,N],[13,"SDLK_u",E,E,220,N],[13,"SDLK_v",E,E,220,N],[13,"SDLK_w",E,E,220,N],[13,"SDLK_x",E,E,220,N],[13,"SDLK_y",E,E,220,N],[13,"SDLK_z",E,E,220,N],[13,R[528],E,E,220,N],[13,"SDLK_F1",E,E,220,N],[13,"SDLK_F2",E,E,220,N],[13,"SDLK_F3",E,E,220,N],[13,"SDLK_F4",E,E,220,N],[13,"SDLK_F5",E,E,220,N],[13,"SDLK_F6",E,E,220,N],[13,"SDLK_F7",E,E,220,N],[13,"SDLK_F8",E,E,220,N],[13,"SDLK_F9",E,E,220,N],[13,"SDLK_F10",E,E,220,N],[13,"SDLK_F11",E,E,220,N],[13,"SDLK_F12",E,E,220,N],[13,R[529],E,E,220,N],[13,R[530],E,E,220,N],[13,R[531],E,E,220,N],[13,R[532],E,E,220,N],[13,R[533],E,E,220,N],[13,R[534],E,E,220,N],[13,R[535],E,E,220,N],[13,"SDLK_END",E,E,220,N],[13,R[536],E,E,220,N],[13,R[537],E,E,220,N],[13,R[538],E,E,220,N],[13,R[539],E,E,220,N],[13,"SDLK_UP",E,E,220,N],[13,R[540],E,E,220,N],[13,R[541],E,E,220,N],[13,R[542],E,E,220,N],[13,R[543],E,E,220,N],[13,R[544],E,E,220,N],[13,R[545],E,E,220,N],[13,R[546],E,E,220,N],[13,R[547],E,E,220,N],[13,R[548],E,E,220,N],[13,R[549],E,E,220,N],[13,R[550],E,E,220,N],[13,R[551],E,E,220,N],[13,R[552],E,E,220,N],[13,R[553],E,E,220,N],[13,R[554],E,E,220,N],[13,R[555],E,E,220,N],[13,R[556],E,E,220,N],[13,R[557],E,E,220,N],[13,R[558],E,E,220,N],[13,R[559],E,E,220,N],[13,"SDLK_F13",E,E,220,N],[13,"SDLK_F14",E,E,220,N],[13,"SDLK_F15",E,E,220,N],[13,"SDLK_F16",E,E,220,N],[13,"SDLK_F17",E,E,220,N],[13,"SDLK_F18",E,E,220,N],[13,"SDLK_F19",E,E,220,N],[13,"SDLK_F20",E,E,220,N],[13,"SDLK_F21",E,E,220,N],[13,"SDLK_F22",E,E,220,N],[13,"SDLK_F23",E,E,220,N],[13,"SDLK_F24",E,E,220,N],[13,R[560],E,E,220,N],[13,R[561],E,E,220,N],[13,R[562],E,E,220,N],[13,R[563],E,E,220,N],[13,R[564],E,E,220,N],[13,R[565],E,E,220,N],[13,R[566],E,E,220,N],[13,"SDLK_CUT",E,E,220,N],[13,R[567],E,E,220,N],[13,R[568],E,E,220,N],[13,R[569],E,E,220,N],[13,R[570],E,E,220,N],[13,R[571],E,E,220,N],[13,R[572],E,E,220,N],[13,R[573],E,E,220,N],[13,R[574],E,E,220,N],[13,R[575],E,E,220,N],[13,R[576],E,E,220,N],[13,R[577],E,E,220,N],[13,R[578],E,E,220,N],[13,R[579],E,E,220,N],[13,R[580],E,E,220,N],[13,R[581],E,E,220,N],[13,"SDLK_OUT",E,E,220,N],[13,R[582],E,E,220,N],[13,R[583],E,E,220,N],[13,R[584],E,E,220,N],[13,R[585],E,E,220,N],[13,R[586],E,E,220,N],[13,R[587],E,E,220,N],[13,R[588],E,E,220,N],[13,R[589],E,E,220,N],[13,R[590],E,E,220,N],[13,R[591],E,E,220,N],[13,R[592],E,E,220,N],[13,R[593],E,E,220,N],[13,R[594],E,E,220,N],[13,R[595],E,E,220,N],[13,R[596],E,E,220,N],[13,R[597],E,E,220,N],[13,R[598],E,E,220,N],[13,R[599],E,E,220,N],[13,R[600],E,E,220,N],[13,R[601],E,E,220,N],[13,R[602],E,E,220,N],[13,R[603],E,E,220,N],[13,R[604],E,E,220,N],[13,R[605],E,E,220,N],[13,R[606],E,E,220,N],[13,R[607],E,E,220,N],[13,R[608],E,E,220,N],[13,R[609],E,E,220,N],[13,R[610],E,E,220,N],[13,R[611],E,E,220,N],[13,R[612],E,E,220,N],[13,R[613],E,E,220,N],[13,R[614],E,E,220,N],[13,R[615],E,E,220,N],[13,R[616],E,E,220,N],[13,R[617],E,E,220,N],[13,R[618],E,E,220,N],[13,R[619],E,E,220,N],[13,R[620],E,E,220,N],[13,R[621],E,E,220,N],[13,R[622],E,E,220,N],[13,R[623],E,E,220,N],[13,R[624],E,E,220,N],[13,R[625],E,E,220,N],[13,R[626],E,E,220,N],[13,R[627],E,E,220,N],[13,R[628],E,E,220,N],[13,R[629],E,E,220,N],[13,R[630],E,E,220,N],[13,R[631],E,E,220,N],[13,R[632],E,E,220,N],[13,R[633],E,E,220,N],[13,R[634],E,E,220,N],[13,R[635],E,E,220,N],[13,R[636],E,E,220,N],[13,R[637],E,E,220,N],[13,R[638],E,E,220,N],[13,R[639],E,E,220,N],[13,R[640],E,E,220,N],[13,R[641],E,E,220,N],[13,R[642],E,E,220,N],[13,R[643],E,E,220,N],[13,R[644],E,E,220,N],[13,R[645],E,E,220,N],[13,R[646],E,E,220,N],[13,"SDLK_WWW",E,E,220,N],[13,R[647],E,E,220,N],[13,R[648],E,E,220,N],[13,R[649],E,E,220,N],[13,R[650],E,E,220,N],[13,R[651],E,E,220,N],[13,R[652],E,E,220,N],[13,R[653],E,E,220,N],[13,R[654],E,E,220,N],[13,R[655],E,E,220,N],[13,R[656],E,E,220,N],[13,R[657],E,E,220,N],[13,R[658],E,E,220,N],[13,R[659],E,E,220,N],[13,R[660],E,E,220,N],[13,R[661],E,E,220,N],[13,R[662],E,E,220,N],[13,R[663],E,E,220,N],[13,R[664],E,E,220,N],[13,R[665],E,E,220,N],[13,R[666],E,E,220,N],[13,R[667],E,E,220,N],[13,R[668],E,E,220,N],[4,R[936],E,"\\brief Enumeration of valid key mods (possibly OR'd…",N,N],[13,"KMOD_NONE",E,E,221,N],[13,"KMOD_LSHIFT",E,E,221,N],[13,"KMOD_RSHIFT",E,E,221,N],[13,"KMOD_LCTRL",E,E,221,N],[13,"KMOD_RCTRL",E,E,221,N],[13,"KMOD_LALT",E,E,221,N],[13,"KMOD_RALT",E,E,221,N],[13,"KMOD_LGUI",E,E,221,N],[13,"KMOD_RGUI",E,E,221,N],[13,"KMOD_NUM",E,E,221,N],[13,"KMOD_CAPS",E,E,221,N],[13,"KMOD_MODE",E,E,221,N],[13,"KMOD_RESERVED",E,E,221,N],[4,R[937],E,"\\brief Cursor types for SDL_CreateSystemCursor().",N,N],[13,"SDL_SYSTEM_CURSOR_ARROW",E,"< Arrow",222,N],[13,"SDL_SYSTEM_CURSOR_IBEAM",E,"< I-beam",222,N],[13,"SDL_SYSTEM_CURSOR_WAIT",E,"< Wait",222,N],[13,"SDL_SYSTEM_CURSOR_CROSSHAIR",E,"< Crosshair",222,N],[13,"SDL_SYSTEM_CURSOR_WAITARROW",E,"< Small wait cursor (or Wait if not available)",222,N],[13,"SDL_SYSTEM_CURSOR_SIZENWSE",E,"< Double arrow pointing northwest and southeast",222,N],[13,"SDL_SYSTEM_CURSOR_SIZENESW",E,"< Double arrow pointing northeast and southwest",222,N],[13,"SDL_SYSTEM_CURSOR_SIZEWE",E,"< Double arrow pointing west and east",222,N],[13,"SDL_SYSTEM_CURSOR_SIZENS",E,"< Double arrow pointing north and south",222,N],[13,"SDL_SYSTEM_CURSOR_SIZEALL",E,"< Four pointed arrow pointing north, south, east, and west",222,N],[13,"SDL_SYSTEM_CURSOR_NO",E,"< Slashed circle or crossbones",222,N],[13,"SDL_SYSTEM_CURSOR_HAND",E,"< Hand",222,N],[13,"SDL_NUM_SYSTEM_CURSORS",E,E,222,N],[4,R[938],E,"\\brief Scroll direction types for the Scroll event",N,N],[13,"SDL_MOUSEWHEEL_NORMAL",E,"< The scroll direction is normal",223,N],[13,"SDL_MOUSEWHEEL_FLIPPED",E,"< The scroll direction is flipped / natural",223,N],[4,R[939],E,E,N,N],[13,"SDL_JOYSTICK_TYPE_UNKNOWN",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_GAMECONTROLLER",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_WHEEL",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_ARCADE_STICK",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_FLIGHT_STICK",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_DANCE_PAD",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_GUITAR",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_DRUM_KIT",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_ARCADE_PAD",E,E,224,N],[13,"SDL_JOYSTICK_TYPE_THROTTLE",E,E,224,N],[4,R[940],E,E,N,N],[13,"SDL_JOYSTICK_POWER_UNKNOWN",E,E,225,N],[13,"SDL_JOYSTICK_POWER_EMPTY",E,E,225,N],[13,"SDL_JOYSTICK_POWER_LOW",E,E,225,N],[13,"SDL_JOYSTICK_POWER_MEDIUM",E,E,225,N],[13,"SDL_JOYSTICK_POWER_FULL",E,E,225,N],[13,"SDL_JOYSTICK_POWER_WIRED",E,E,225,N],[13,"SDL_JOYSTICK_POWER_MAX",E,E,225,N],[4,R[941],E,E,N,N],[13,"SDL_CONTROLLER_BINDTYPE_NONE",E,E,226,N],[13,"SDL_CONTROLLER_BINDTYPE_BUTTON",E,E,226,N],[13,"SDL_CONTROLLER_BINDTYPE_AXIS",E,E,226,N],[13,"SDL_CONTROLLER_BINDTYPE_HAT",E,E,226,N],[4,R[942],E,"The list of axes available from a controller",N,N],[13,"SDL_CONTROLLER_AXIS_INVALID",E,E,227,N],[13,"SDL_CONTROLLER_AXIS_LEFTX",E,E,227,N],[13,"SDL_CONTROLLER_AXIS_LEFTY",E,E,227,N],[13,"SDL_CONTROLLER_AXIS_RIGHTX",E,E,227,N],[13,"SDL_CONTROLLER_AXIS_RIGHTY",E,E,227,N],[13,"SDL_CONTROLLER_AXIS_TRIGGERLEFT",E,E,227,N],[13,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT",E,E,227,N],[13,"SDL_CONTROLLER_AXIS_MAX",E,E,227,N],[4,R[943],E,"The list of buttons available from a controller",N,N],[13,"SDL_CONTROLLER_BUTTON_INVALID",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_A",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_B",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_X",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_Y",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_BACK",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_GUIDE",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_START",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_LEFTSTICK",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_RIGHTSTICK",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_UP",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_DOWN",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_LEFT",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT",E,E,228,N],[13,"SDL_CONTROLLER_BUTTON_MAX",E,E,228,N],[4,R[944],E,"\\brief The types of events that can be delivered.",N,N],[13,"SDL_FIRSTEVENT",E,"< Unused (do not remove)",229,N],[13,"SDL_QUIT",E,"< User-requested quit",229,N],[13,"SDL_APP_TERMINATING",E,"< The application is being terminated by the OS Called on…",229,N],[13,"SDL_APP_LOWMEMORY",E,"< The application is low on memory, free memory if…",229,N],[13,"SDL_APP_WILLENTERBACKGROUND",E,"< The application is about to enter the background Called…",229,N],[13,"SDL_APP_DIDENTERBACKGROUND",E,"< The application did enter the background and may not get…",229,N],[13,"SDL_APP_WILLENTERFOREGROUND",E,"< The application is about to enter the foreground Called…",229,N],[13,"SDL_APP_DIDENTERFOREGROUND",E,"< The application is now interactive Called on iOS in…",229,N],[13,"SDL_DISPLAYEVENT",E,"< Display state change",229,N],[13,"SDL_WINDOWEVENT",E,"< Window state change",229,N],[13,"SDL_SYSWMEVENT",E,"< System specific event",229,N],[13,"SDL_KEYDOWN",E,"< Key pressed",229,N],[13,"SDL_KEYUP",E,"< Key released",229,N],[13,"SDL_TEXTEDITING",E,"< Keyboard text editing (composition)",229,N],[13,"SDL_TEXTINPUT",E,"< Keyboard text input",229,N],[13,"SDL_KEYMAPCHANGED",E,"< Keymap changed due to a system event such as an input…",229,N],[13,"SDL_MOUSEMOTION",E,"< Mouse moved",229,N],[13,"SDL_MOUSEBUTTONDOWN",E,"< Mouse button pressed",229,N],[13,"SDL_MOUSEBUTTONUP",E,"< Mouse button released",229,N],[13,"SDL_MOUSEWHEEL",E,"< Mouse wheel motion",229,N],[13,"SDL_JOYAXISMOTION",E,"< Joystick axis motion",229,N],[13,"SDL_JOYBALLMOTION",E,"< Joystick trackball motion",229,N],[13,"SDL_JOYHATMOTION",E,"< Joystick hat position change",229,N],[13,"SDL_JOYBUTTONDOWN",E,"< Joystick button pressed",229,N],[13,"SDL_JOYBUTTONUP",E,"< Joystick button released",229,N],[13,"SDL_JOYDEVICEADDED",E,"< A new joystick has been inserted into the system",229,N],[13,"SDL_JOYDEVICEREMOVED",E,"< An opened joystick has been removed",229,N],[13,"SDL_CONTROLLERAXISMOTION",E,"< Game controller axis motion",229,N],[13,"SDL_CONTROLLERBUTTONDOWN",E,"< Game controller button pressed",229,N],[13,"SDL_CONTROLLERBUTTONUP",E,"< Game controller button released",229,N],[13,"SDL_CONTROLLERDEVICEADDED",E,"< A new Game controller has been inserted into the system",229,N],[13,"SDL_CONTROLLERDEVICEREMOVED",E,"< An opened Game controller has been removed",229,N],[13,"SDL_CONTROLLERDEVICEREMAPPED",E,"< The controller mapping was updated",229,N],[13,"SDL_FINGERDOWN",E,E,229,N],[13,"SDL_FINGERUP",E,E,229,N],[13,"SDL_FINGERMOTION",E,E,229,N],[13,"SDL_DOLLARGESTURE",E,E,229,N],[13,"SDL_DOLLARRECORD",E,E,229,N],[13,"SDL_MULTIGESTURE",E,E,229,N],[13,"SDL_CLIPBOARDUPDATE",E,"< The clipboard changed",229,N],[13,"SDL_DROPFILE",E,"< The system requests a file open",229,N],[13,"SDL_DROPTEXT",E,"< text/plain drag-and-drop event",229,N],[13,"SDL_DROPBEGIN",E,"< A new set of drops is beginning (NULL filename)",229,N],[13,"SDL_DROPCOMPLETE",E,"< Current set of drops is now complete (NULL filename)",229,N],[13,"SDL_AUDIODEVICEADDED",E,"< A new audio device is available",229,N],[13,"SDL_AUDIODEVICEREMOVED",E,"< An audio device has been removed.",229,N],[13,"SDL_SENSORUPDATE",E,"< A sensor was updated",229,N],[13,"SDL_RENDER_TARGETS_RESET",E,"< The render targets have been reset and their contents…",229,N],[13,"SDL_RENDER_DEVICE_RESET",E,"< The device has been reset and all textures need to be…",229,N],[13,"SDL_USEREVENT",E,"Events ::SDL_USEREVENT through ::SDL_LASTEVENT are for…",229,N],[13,"SDL_LASTEVENT",E,"This last event is only for bounding internal arrays",229,N],[4,R[945],E,E,N,N],[13,"SDL_ADDEVENT",E,E,230,N],[13,"SDL_PEEKEVENT",E,E,230,N],[13,"SDL_GETEVENT",E,E,230,N],[4,R[946],E,"\\brief  An enumeration of hint priorities",N,N],[13,"SDL_HINT_DEFAULT",E,E,231,N],[13,"SDL_HINT_NORMAL",E,E,231,N],[13,"SDL_HINT_OVERRIDE",E,E,231,N],[4,R[699],E,"\\brief The predefined log categories",N,N],[13,R[669],E,E,232,N],[13,R[670],E,E,232,N],[13,R[671],E,E,232,N],[13,R[672],E,E,232,N],[13,R[673],E,E,232,N],[13,R[674],E,E,232,N],[13,R[675],E,E,232,N],[13,R[676],E,E,232,N],[13,R[677],E,E,232,N],[13,R[678],E,E,232,N],[13,R[679],E,E,232,N],[13,R[680],E,E,232,N],[13,R[681],E,E,232,N],[13,R[682],E,E,232,N],[13,R[683],E,E,232,N],[13,R[684],E,E,232,N],[13,R[685],E,E,232,N],[13,R[686],E,E,232,N],[13,R[687],E,E,232,N],[13,R[688],E,E,232,N],[4,R[947],E,"\\brief The predefined log priorities",N,N],[13,"SDL_LOG_PRIORITY_VERBOSE",E,E,233,N],[13,"SDL_LOG_PRIORITY_DEBUG",E,E,233,N],[13,"SDL_LOG_PRIORITY_INFO",E,E,233,N],[13,"SDL_LOG_PRIORITY_WARN",E,E,233,N],[13,"SDL_LOG_PRIORITY_ERROR",E,E,233,N],[13,"SDL_LOG_PRIORITY_CRITICAL",E,E,233,N],[13,"SDL_NUM_LOG_PRIORITIES",E,E,233,N],[4,R[948],E,"\\brief SDL_MessageBox flags. If supported will display…",N,N],[13,"SDL_MESSAGEBOX_ERROR",E,"< error dialog",234,N],[13,"SDL_MESSAGEBOX_WARNING",E,"< warning dialog",234,N],[13,"SDL_MESSAGEBOX_INFORMATION",E,"< informational dialog",234,N],[4,R[949],E,"\\brief Flags for SDL_MessageBoxButtonData.",N,N],[13,"SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT",E,"< Marks the default button when return is hit",235,N],[13,"SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT",E,"< Marks the default button when escape is hit",235,N],[4,R[950],E,E,N,N],[13,"SDL_MESSAGEBOX_COLOR_BACKGROUND",E,E,236,N],[13,"SDL_MESSAGEBOX_COLOR_TEXT",E,E,236,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BORDER",E,E,236,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND",E,E,236,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED",E,E,236,N],[13,"SDL_MESSAGEBOX_COLOR_MAX",E,E,236,N],[4,R[951],E,"\\brief The basic state for the system's power supply.",N,N],[13,"SDL_POWERSTATE_UNKNOWN",E,"< cannot determine power status",237,N],[13,"SDL_POWERSTATE_ON_BATTERY",E,"< Not plugged in, running on the battery",237,N],[13,"SDL_POWERSTATE_NO_BATTERY",E,"< Plugged in, no battery available",237,N],[13,"SDL_POWERSTATE_CHARGING",E,"< Plugged in, charging battery",237,N],[13,"SDL_POWERSTATE_CHARGED",E,"< Plugged in, battery charged",237,N],[4,R[952],E,"\\brief Flags used when creating a rendering context",N,N],[13,"SDL_RENDERER_SOFTWARE",E,"< The renderer is a software fallback",238,N],[13,"SDL_RENDERER_ACCELERATED",E,"< The renderer uses hardware acceleration",238,N],[13,"SDL_RENDERER_PRESENTVSYNC",E,"< Present is synchronized with the refresh rate",238,N],[13,"SDL_RENDERER_TARGETTEXTURE",E,"< The renderer supports rendering to texture",238,N],[4,R[953],E,"\\brief The access pattern allowed for a texture.",N,N],[13,"SDL_TEXTUREACCESS_STATIC",E,"< Changes rarely, not lockable",239,N],[13,"SDL_TEXTUREACCESS_STREAMING",E,"< Changes frequently, lockable",239,N],[13,"SDL_TEXTUREACCESS_TARGET",E,"< Texture can be used as a render target",239,N],[4,R[954],E,"\\brief The texture channel modulation used in…",N,N],[13,"SDL_TEXTUREMODULATE_NONE",E,"< No modulation",240,N],[13,"SDL_TEXTUREMODULATE_COLOR",E,"< srcC = srcC * color",240,N],[13,"SDL_TEXTUREMODULATE_ALPHA",E,"< srcA = srcA * alpha",240,N],[4,R[955],E,"\\brief Flip constants for SDL_RenderCopyEx",N,N],[13,"SDL_FLIP_NONE",E,"< Do not flip",241,N],[13,"SDL_FLIP_HORIZONTAL",E,"< flip horizontally",241,N],[13,"SDL_FLIP_VERTICAL",E,"< flip vertically",241,N],[4,R[956],E,E,N,N],[13,"SDL_SENSOR_INVALID",E,"< Returned for an invalid sensor",242,N],[13,"SDL_SENSOR_UNKNOWN",E,"< Unknown sensor type",242,N],[13,"SDL_SENSOR_ACCEL",E,"< Accelerometer",242,N],[13,"SDL_SENSOR_GYRO",E,"< Gyroscope",242,N],[4,R[957],E,"\\brief An enum denoting the specific type of contents…",N,N],[13,"ShapeModeDefault",E,"\\brief The default mode, a binarized alpha cutoff of 1.",243,N],[13,"ShapeModeBinarizeAlpha",E,"\\brief A binarized alpha cutoff with a given integer value.",243,N],[13,"ShapeModeReverseBinarizeAlpha",E,"\\brief A binarized alpha cutoff with a given integer…",243,N],[13,"ShapeModeColorKey",E,"\\brief A color key is applied.",243,N],[4,R[958],E,E,N,N],[13,"XOMOrientation_LTR_TTB",E,E,244,N],[13,"XOMOrientation_RTL_TTB",E,E,244,N],[13,"XOMOrientation_TTB_LTR",E,E,244,N],[13,"XOMOrientation_TTB_RTL",E,E,244,N],[13,"XOMOrientation_Context",E,E,244,N],[4,R[959],E,E,N,N],[13,"XIMForwardChar",E,E,245,N],[13,"XIMBackwardChar",E,E,245,N],[13,"XIMForwardWord",E,E,245,N],[13,"XIMBackwardWord",E,E,245,N],[13,"XIMCaretUp",E,E,245,N],[13,"XIMCaretDown",E,E,245,N],[13,"XIMNextLine",E,E,245,N],[13,"XIMPreviousLine",E,E,245,N],[13,"XIMLineStart",E,E,245,N],[13,"XIMLineEnd",E,E,245,N],[13,"XIMAbsolutePosition",E,E,245,N],[13,"XIMDontChange",E,E,245,N],[4,R[960],E,E,N,N],[13,"XIMIsInvisible",E,E,246,N],[13,"XIMIsPrimary",E,E,246,N],[13,"XIMIsSecondary",E,E,246,N],[4,R[961],E,E,N,N],[13,"XIMTextType",E,E,247,N],[13,"XIMBitmapType",E,E,247,N],[4,R[962],E,"These are the various supported windowing subsystems",N,N],[13,"SDL_SYSWM_UNKNOWN",E,E,248,N],[13,"SDL_SYSWM_WINDOWS",E,E,248,N],[13,"SDL_SYSWM_X11",E,E,248,N],[13,"SDL_SYSWM_DIRECTFB",E,E,248,N],[13,"SDL_SYSWM_COCOA",E,E,248,N],[13,"SDL_SYSWM_UIKIT",E,E,248,N],[13,"SDL_SYSWM_WAYLAND",E,E,248,N],[13,"SDL_SYSWM_MIR",E,E,248,N],[13,"SDL_SYSWM_WINRT",E,E,248,N],[13,"SDL_SYSWM_ANDROID",E,E,248,N],[13,"SDL_SYSWM_VIVANTE",E,E,248,N],[13,"SDL_SYSWM_OS2",E,E,248,N],[5,"SDL_GetPlatform",E,"\\brief Gets the name of the platform.",N,N],[5,"SDL_malloc",E,E,N,N],[5,"SDL_calloc",E,E,N,N],[5,"SDL_realloc",E,E,N,N],[5,"SDL_free",E,E,N,N],[5,"SDL_GetMemoryFunctions",E,"\\brief Get the current set of SDL memory functions",N,N],[5,"SDL_SetMemoryFunctions",E,"\\brief Replace SDL's memory allocation functions with a…",N,N],[5,"SDL_GetNumAllocations",E,"\\brief Get the number of outstanding (unfreed) allocations",N,N],[5,"SDL_getenv",E,E,N,N],[5,"SDL_setenv",E,E,N,N],[5,"SDL_qsort",E,E,N,N],[5,"SDL_abs",E,E,N,N],[5,"SDL_isdigit",E,E,N,N],[5,"SDL_isspace",E,E,N,N],[5,"SDL_toupper",E,E,N,N],[5,"SDL_tolower",E,E,N,N],[5,"SDL_memset",E,E,N,N],[5,"SDL_memcpy",E,E,N,N],[5,"SDL_memmove",E,E,N,N],[5,"SDL_memcmp",E,E,N,N],[5,"SDL_wcsdup",E,E,N,N],[5,"SDL_wcslen",E,E,N,N],[5,"SDL_wcslcpy",E,E,N,N],[5,"SDL_wcslcat",E,E,N,N],[5,"SDL_wcscmp",E,E,N,N],[5,"SDL_strlen",E,E,N,N],[5,"SDL_strlcpy",E,E,N,N],[5,"SDL_utf8strlcpy",E,E,N,N],[5,"SDL_strlcat",E,E,N,N],[5,"SDL_strdup",E,E,N,N],[5,"SDL_strrev",E,E,N,N],[5,"SDL_strupr",E,E,N,N],[5,"SDL_strlwr",E,E,N,N],[5,"SDL_strchr",E,E,N,N],[5,"SDL_strrchr",E,E,N,N],[5,"SDL_strstr",E,E,N,N],[5,"SDL_utf8strlen",E,E,N,N],[5,"SDL_itoa",E,E,N,N],[5,"SDL_uitoa",E,E,N,N],[5,"SDL_ltoa",E,E,N,N],[5,"SDL_ultoa",E,E,N,N],[5,"SDL_lltoa",E,E,N,N],[5,"SDL_ulltoa",E,E,N,N],[5,"SDL_atoi",E,E,N,N],[5,"SDL_atof",E,E,N,N],[5,"SDL_strtol",E,E,N,N],[5,"SDL_strtoul",E,E,N,N],[5,"SDL_strtoll",E,E,N,N],[5,"SDL_strtoull",E,E,N,N],[5,"SDL_strtod",E,E,N,N],[5,"SDL_strcmp",E,E,N,N],[5,"SDL_strncmp",E,E,N,N],[5,"SDL_strcasecmp",E,E,N,N],[5,"SDL_strncasecmp",E,E,N,N],[5,"SDL_sscanf",E,E,N,N],[5,"SDL_vsscanf",E,E,N,N],[5,"SDL_snprintf",E,E,N,N],[5,"SDL_vsnprintf",E,E,N,N],[5,"SDL_acos",E,E,N,N],[5,"SDL_acosf",E,E,N,N],[5,"SDL_asin",E,E,N,N],[5,"SDL_asinf",E,E,N,N],[5,"SDL_atan",E,E,N,N],[5,"SDL_atanf",E,E,N,N],[5,"SDL_atan2",E,E,N,N],[5,"SDL_atan2f",E,E,N,N],[5,"SDL_ceil",E,E,N,N],[5,"SDL_ceilf",E,E,N,N],[5,"SDL_copysign",E,E,N,N],[5,"SDL_copysignf",E,E,N,N],[5,"SDL_cos",E,E,N,N],[5,"SDL_cosf",E,E,N,N],[5,"SDL_exp",E,E,N,N],[5,"SDL_expf",E,E,N,N],[5,"SDL_fabs",E,E,N,N],[5,"SDL_fabsf",E,E,N,N],[5,"SDL_floor",E,E,N,N],[5,"SDL_floorf",E,E,N,N],[5,"SDL_fmod",E,E,N,N],[5,"SDL_fmodf",E,E,N,N],[5,"SDL_log",E,E,N,N],[5,"SDL_logf",E,E,N,N],[5,"SDL_log10",E,E,N,N],[5,"SDL_log10f",E,E,N,N],[5,"SDL_pow",E,E,N,N],[5,"SDL_powf",E,E,N,N],[5,"SDL_scalbn",E,E,N,N],[5,"SDL_scalbnf",E,E,N,N],[5,"SDL_sin",E,E,N,N],[5,"SDL_sinf",E,E,N,N],[5,"SDL_sqrt",E,E,N,N],[5,"SDL_sqrtf",E,E,N,N],[5,"SDL_tan",E,E,N,N],[5,"SDL_tanf",E,E,N,N],[5,"SDL_iconv_open",E,E,N,N],[5,"SDL_iconv_close",E,E,N,N],[5,"SDL_iconv",E,E,N,N],[5,"SDL_iconv_string",E,"This function converts a string between encodings in one…",N,N],[5,"SDL_main",E,"The prototype for the application's main() function",N,N],[5,"SDL_SetMainReady",E,"This is called by the real SDL main function to let the…",N,N],[5,"SDL_ReportAssertion",E,E,N,N],[5,"SDL_SetAssertionHandler",E,"\\brief Set an application-defined assertion handler.",N,N],[5,"SDL_GetDefaultAssertionHandler",E,"\\brief Get the default assertion handler.",N,N],[5,"SDL_GetAssertionHandler",E,"\\brief Get the current assertion handler.",N,N],[5,"SDL_GetAssertionReport",E,"\\brief Get a list of all assertion failures.",N,N],[5,"SDL_ResetAssertionReport",E,"\\brief Reset the list of all assertion failures.",N,N],[5,"SDL_AtomicTryLock",E,"\\brief Try to lock a spin lock by setting it to a non-zero…",N,N],[5,"SDL_AtomicLock",E,"\\brief Lock a spin lock by setting it to a non-zero value.",N,N],[5,"SDL_AtomicUnlock",E,"\\brief Unlock a spin lock by setting it to 0. Always…",N,N],[5,"SDL_MemoryBarrierReleaseFunction",E,"Memory barriers are designed to prevent reads and writes…",N,N],[5,"SDL_MemoryBarrierAcquireFunction",E,E,N,N],[5,"SDL_AtomicCAS",E,"\\brief Set an atomic variable to a new value if it is…",N,N],[5,"SDL_AtomicSet",E,"\\brief Set an atomic variable to a value.",N,N],[5,"SDL_AtomicGet",E,"\\brief Get the value of an atomic variable",N,N],[5,"SDL_AtomicAdd",E,"\\brief Add to an atomic variable.",N,N],[5,"SDL_AtomicCASPtr",E,"\\brief Set a pointer to a new value if it is currently an…",N,N],[5,"SDL_AtomicSetPtr",E,"\\brief Set a pointer to a value atomically.",N,N],[5,"SDL_AtomicGetPtr",E,"\\brief Get the value of a pointer atomically.",N,N],[5,"SDL_SetError",E,E,N,N],[5,"SDL_GetError",E,E,N,N],[5,"SDL_ClearError",E,E,N,N],[5,"SDL_Error",E,E,N,N],[5,"SDL_CreateMutex",E,"Create a mutex, initialized unlocked.",N,N],[5,"SDL_LockMutex",E,E,N,N],[5,"SDL_TryLockMutex",E,"Try to lock the mutex",N,N],[5,"SDL_UnlockMutex",E,E,N,N],[5,"SDL_DestroyMutex",E,"Destroy a mutex.",N,N],[5,"SDL_CreateSemaphore",E,"Create a semaphore, initialized with value, returns NULL…",N,N],[5,"SDL_DestroySemaphore",E,"Destroy a semaphore.",N,N],[5,"SDL_SemWait",E,"This function suspends the calling thread until the…",N,N],[5,"SDL_SemTryWait",E,"Non-blocking variant of SDL_SemWait().",N,N],[5,"SDL_SemWaitTimeout",E,"Variant of SDL_SemWait() with a timeout in milliseconds.",N,N],[5,"SDL_SemPost",E,"Atomically increases the semaphore's count (not blocking).",N,N],[5,"SDL_SemValue",E,"Returns the current count of the semaphore.",N,N],[5,"SDL_CreateCond",E,"Create a condition variable.",N,N],[5,"SDL_DestroyCond",E,"Destroy a condition variable.",N,N],[5,"SDL_CondSignal",E,"Restart one of the threads that are waiting on the…",N,N],[5,"SDL_CondBroadcast",E,"Restart all threads that are waiting on the condition…",N,N],[5,"SDL_CondWait",E,"Wait on the condition variable, unlocking the provided…",N,N],[5,"SDL_CondWaitTimeout",E,"Waits for at most \\c ms milliseconds, and returns 0 if the…",N,N],[5,"SDL_CreateThread",E,"Create a thread with a default stack size.",N,N],[5,"SDL_CreateThreadWithStackSize",E,"Create a thread.",N,N],[5,"SDL_GetThreadName",E,"Get the thread name, as it was specified in…",N,N],[5,"SDL_ThreadID",E,"Get the thread identifier for the current thread.",N,N],[5,"SDL_GetThreadID",E,"Get the thread identifier for the specified thread.",N,N],[5,"SDL_SetThreadPriority",E,"Set the priority for the current thread",N,N],[5,"SDL_WaitThread",E,"Wait for a thread to finish. Threads that haven't been…",N,N],[5,"SDL_DetachThread",E,"A thread may be \"detached\" to signify that it should not…",N,N],[5,"SDL_TLSCreate",E,"\\brief Create an identifier that is globally visible to…",N,N],[5,"SDL_TLSGet",E,"\\brief Get the value associated with a thread local…",N,N],[5,"SDL_TLSSet",E,"\\brief Set the value associated with a thread local…",N,N],[5,"SDL_RWFromFile",E,E,N,N],[5,"SDL_RWFromFP",E,E,N,N],[5,"SDL_RWFromMem",E,E,N,N],[5,"SDL_RWFromConstMem",E,E,N,N],[5,"SDL_AllocRW",E,E,N,N],[5,"SDL_FreeRW",E,E,N,N],[5,"SDL_LoadFile_RW",E,"Load all the data from an SDL data stream.",N,N],[5,"SDL_ReadU8",E,E,N,N],[5,"SDL_ReadLE16",E,E,N,N],[5,"SDL_ReadBE16",E,E,N,N],[5,"SDL_ReadLE32",E,E,N,N],[5,"SDL_ReadBE32",E,E,N,N],[5,"SDL_ReadLE64",E,E,N,N],[5,"SDL_ReadBE64",E,E,N,N],[5,"SDL_WriteU8",E,E,N,N],[5,"SDL_WriteLE16",E,E,N,N],[5,"SDL_WriteBE16",E,E,N,N],[5,"SDL_WriteLE32",E,E,N,N],[5,"SDL_WriteBE32",E,E,N,N],[5,"SDL_WriteLE64",E,E,N,N],[5,"SDL_WriteBE64",E,E,N,N],[5,"SDL_GetNumAudioDrivers",E,E,N,N],[5,"SDL_GetAudioDriver",E,E,N,N],[5,"SDL_AudioInit",E,E,N,N],[5,"SDL_AudioQuit",E,E,N,N],[5,"SDL_GetCurrentAudioDriver",E,"This function returns the name of the current audio…",N,N],[5,"SDL_OpenAudio",E,"This function opens the audio device with the desired…",N,N],[5,"SDL_GetNumAudioDevices",E,"Get the number of available devices exposed by the current…",N,N],[5,"SDL_GetAudioDeviceName",E,"Get the human-readable name of a specific audio device.…",N,N],[5,"SDL_OpenAudioDevice",E,"Open a specific audio device. Passing in a device name of…",N,N],[5,"SDL_GetAudioStatus",E,E,N,N],[5,"SDL_GetAudioDeviceStatus",E,E,N,N],[5,"SDL_PauseAudio",E,E,N,N],[5,"SDL_PauseAudioDevice",E,E,N,N],[5,"SDL_LoadWAV_RW",E,"This function loads a WAVE from the data source,…",N,N],[5,"SDL_FreeWAV",E,"This function frees data previously allocated with…",N,N],[5,"SDL_BuildAudioCVT",E,"This function takes a source format and rate and a…",N,N],[5,"SDL_ConvertAudio",E,"Once you have initialized the \\c cvt structure using…",N,N],[5,"SDL_NewAudioStream",E,"Create a new audio stream",N,N],[5,"SDL_AudioStreamPut",E,"Add data to be converted/resampled to the stream",N,N],[5,"SDL_AudioStreamGet",E,"Get converted/resampled data from the stream",N,N],[5,"SDL_AudioStreamAvailable",E,"Get the number of converted/resampled bytes available. The…",N,N],[5,"SDL_AudioStreamFlush",E,"Tell the stream that you're done sending data, and…",N,N],[5,"SDL_AudioStreamClear",E,"Clear any pending data in the stream without converting it",N,N],[5,"SDL_FreeAudioStream",E,"Free an audio stream",N,N],[5,"SDL_MixAudio",E,"This takes two audio buffers of the playing audio format…",N,N],[5,"SDL_MixAudioFormat",E,"This works like SDL_MixAudio(), but you specify the audio…",N,N],[5,"SDL_QueueAudio",E,"Queue more audio on non-callback devices.",N,N],[5,"SDL_DequeueAudio",E,"Dequeue more audio on non-callback devices.",N,N],[5,"SDL_GetQueuedAudioSize",E,"Get the number of bytes of still-queued audio.",N,N],[5,"SDL_ClearQueuedAudio",E,"Drop any queued audio data. For playback devices, this is…",N,N],[5,"SDL_LockAudio",E,E,N,N],[5,"SDL_LockAudioDevice",E,E,N,N],[5,"SDL_UnlockAudio",E,E,N,N],[5,"SDL_UnlockAudioDevice",E,E,N,N],[5,"SDL_CloseAudio",E,"This function shuts down audio processing and closes the…",N,N],[5,"SDL_CloseAudioDevice",E,E,N,N],[5,"SDL_SetClipboardText",E,"\\brief Put UTF-8 text into the clipboard",N,N],[5,"SDL_GetClipboardText",E,"\\brief Get UTF-8 text from the clipboard, which must be…",N,N],[5,"SDL_HasClipboardText",E,"\\brief Returns a flag indicating whether the clipboard…",N,N],[5,"__ctype_get_mb_cur_max",E,E,N,N],[5,"atof",E,E,N,N],[5,"atoi",E,E,N,N],[5,"atol",E,E,N,N],[5,"atoll",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtof",E,E,N,N],[5,"strtold",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"strtoq",E,E,N,N],[5,"strtouq",E,E,N,N],[5,"strtoll",E,E,N,N],[5,"strtoull",E,E,N,N],[5,"l64a",E,E,N,N],[5,"a64l",E,E,N,N],[5,"select",E,E,N,N],[5,"pselect",E,E,N,N],[5,"random",E,E,N,N],[5,"srandom",E,E,N,N],[5,"initstate",E,E,N,N],[5,"setstate",E,E,N,N],[5,"random_r",E,E,N,N],[5,"srandom_r",E,E,N,N],[5,"initstate_r",E,E,N,N],[5,"setstate_r",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"rand_r",E,E,N,N],[5,"drand48",E,E,N,N],[5,"erand48",E,E,N,N],[5,"lrand48",E,E,N,N],[5,"nrand48",E,E,N,N],[5,"mrand48",E,E,N,N],[5,"jrand48",E,E,N,N],[5,"srand48",E,E,N,N],[5,"seed48",E,E,N,N],[5,"lcong48",E,E,N,N],[5,"drand48_r",E,E,N,N],[5,"erand48_r",E,E,N,N],[5,"lrand48_r",E,E,N,N],[5,"nrand48_r",E,E,N,N],[5,"mrand48_r",E,E,N,N],[5,"jrand48_r",E,E,N,N],[5,"srand48_r",E,E,N,N],[5,"seed48_r",E,E,N,N],[5,"lcong48_r",E,E,N,N],[5,"malloc",E,E,N,N],[5,"calloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"alloca",E,E,N,N],[5,"valloc",E,E,N,N],[5,R[383],E,E,N,N],[5,"aligned_alloc",E,E,N,N],[5,"abort",E,E,N,N],[5,"atexit",E,E,N,N],[5,"at_quick_exit",E,E,N,N],[5,"on_exit",E,E,N,N],[5,"exit",E,E,N,N],[5,"quick_exit",E,E,N,N],[5,"_Exit",E,E,N,N],[5,"getenv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"mktemp",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"system",E,E,N,N],[5,"realpath",E,E,N,N],[5,"bsearch",E,E,N,N],[5,"qsort",E,E,N,N],[5,"abs",E,E,N,N],[5,"labs",E,E,N,N],[5,"llabs",E,E,N,N],[5,"div",E,E,N,N],[5,"ldiv",E,E,N,N],[5,"lldiv",E,E,N,N],[5,"ecvt",E,E,N,N],[5,"fcvt",E,E,N,N],[5,"gcvt",E,E,N,N],[5,"qecvt",E,E,N,N],[5,"qfcvt",E,E,N,N],[5,"qgcvt",E,E,N,N],[5,"ecvt_r",E,E,N,N],[5,"fcvt_r",E,E,N,N],[5,"qecvt_r",E,E,N,N],[5,"qfcvt_r",E,E,N,N],[5,"mblen",E,E,N,N],[5,"mbtowc",E,E,N,N],[5,"wctomb",E,E,N,N],[5,"mbstowcs",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"rpmatch",E,E,N,N],[5,"getsubopt",E,E,N,N],[5,R[384],E,E,N,N],[5,"_mm_sfence",E,E,N,N],[5,"_mm_getcsr",E,E,N,N],[5,"_mm_setcsr",E,E,N,N],[5,"_mm_clflush",E,E,N,N],[5,"_mm_lfence",E,E,N,N],[5,"_mm_mfence",E,E,N,N],[5,"_mm_pause",E,E,N,N],[5,"SDL_GetCPUCount",E,"This function returns the number of CPU cores available.",N,N],[5,"SDL_GetCPUCacheLineSize",E,"This function returns the L1 cache line size of the CPU",N,N],[5,"SDL_HasRDTSC",E,"This function returns true if the CPU has the RDTSC…",N,N],[5,"SDL_HasAltiVec",E,"This function returns true if the CPU has AltiVec features.",N,N],[5,"SDL_HasMMX",E,"This function returns true if the CPU has MMX features.",N,N],[5,"SDL_Has3DNow",E,"This function returns true if the CPU has 3DNow! features.",N,N],[5,"SDL_HasSSE",E,"This function returns true if the CPU has SSE features.",N,N],[5,"SDL_HasSSE2",E,"This function returns true if the CPU has SSE2 features.",N,N],[5,"SDL_HasSSE3",E,"This function returns true if the CPU has SSE3 features.",N,N],[5,"SDL_HasSSE41",E,"This function returns true if the CPU has SSE4.1 features.",N,N],[5,"SDL_HasSSE42",E,"This function returns true if the CPU has SSE4.2 features.",N,N],[5,"SDL_HasAVX",E,"This function returns true if the CPU has AVX features.",N,N],[5,"SDL_HasAVX2",E,"This function returns true if the CPU has AVX2 features.",N,N],[5,"SDL_HasAVX512F",E,"This function returns true if the CPU has AVX-512F…",N,N],[5,"SDL_HasNEON",E,"This function returns true if the CPU has NEON (ARM SIMD)…",N,N],[5,"SDL_GetSystemRAM",E,"This function returns the amount of RAM configured in the…",N,N],[5,"SDL_GetPixelFormatName",E,"\\brief Get the human readable name of a pixel format",N,N],[5,"SDL_PixelFormatEnumToMasks",E,"\\brief Convert one of the enumerated pixel formats to a…",N,N],[5,"SDL_MasksToPixelFormatEnum",E,"\\brief Convert a bpp and RGBA masks to an enumerated pixel…",N,N],[5,"SDL_AllocFormat",E,"\\brief Create an SDL_PixelFormat structure from a pixel…",N,N],[5,"SDL_FreeFormat",E,"\\brief Free an SDL_PixelFormat structure.",N,N],[5,"SDL_AllocPalette",E,"\\brief Create a palette structure with the specified…",N,N],[5,"SDL_SetPixelFormatPalette",E,"\\brief Set the palette for a pixel format structure.",N,N],[5,"SDL_SetPaletteColors",E,"\\brief Set a range of colors in a palette.",N,N],[5,"SDL_FreePalette",E,"\\brief Free a palette created with SDL_AllocPalette().",N,N],[5,"SDL_MapRGB",E,"\\brief Maps an RGB triple to an opaque pixel value for a…",N,N],[5,"SDL_MapRGBA",E,"\\brief Maps an RGBA quadruple to a pixel value for a given…",N,N],[5,"SDL_GetRGB",E,"\\brief Get the RGB components from a pixel of the…",N,N],[5,"SDL_GetRGBA",E,"\\brief Get the RGBA components from a pixel of the…",N,N],[5,"SDL_CalculateGammaRamp",E,"\\brief Calculate a 256 entry gamma ramp for a gamma value.",N,N],[5,"SDL_HasIntersection",E,"\\brief Determine whether two rectangles intersect.",N,N],[5,"SDL_IntersectRect",E,"\\brief Calculate the intersection of two rectangles.",N,N],[5,"SDL_UnionRect",E,"\\brief Calculate the union of two rectangles.",N,N],[5,"SDL_EnclosePoints",E,"\\brief Calculate a minimal rectangle enclosing a set of…",N,N],[5,"SDL_IntersectRectAndLine",E,"\\brief Calculate the intersection of a rectangle and line…",N,N],[5,"SDL_ComposeCustomBlendMode",E,"\\brief Create a custom blend mode, which may or may not be…",N,N],[5,"SDL_CreateRGBSurface",E,"Allocate and free an RGB surface.",N,N],[5,"SDL_CreateRGBSurfaceWithFormat",E,E,N,N],[5,"SDL_CreateRGBSurfaceFrom",E,E,N,N],[5,"SDL_CreateRGBSurfaceWithFormatFrom",E,E,N,N],[5,"SDL_FreeSurface",E,E,N,N],[5,"SDL_SetSurfacePalette",E,"\\brief Set the palette used by a surface.",N,N],[5,"SDL_LockSurface",E,"\\brief Sets up a surface for directly accessing the pixels.",N,N],[5,"SDL_UnlockSurface",E,"\\sa SDL_LockSurface()",N,N],[5,"SDL_LoadBMP_RW",E,"Load a surface from a seekable SDL data stream (memory or…",N,N],[5,"SDL_SaveBMP_RW",E,"Save a surface to a seekable SDL data stream (memory or…",N,N],[5,"SDL_SetSurfaceRLE",E,"\\brief Sets the RLE acceleration hint for a surface.",N,N],[5,"SDL_SetColorKey",E,"\\brief Sets the color key (transparent pixel) in a…",N,N],[5,"SDL_HasColorKey",E,"\\brief Returns whether the surface has a color key",N,N],[5,"SDL_GetColorKey",E,"\\brief Gets the color key (transparent pixel) in a…",N,N],[5,"SDL_SetSurfaceColorMod",E,"\\brief Set an additional color value used in blit…",N,N],[5,"SDL_GetSurfaceColorMod",E,"\\brief Get the additional color value used in blit…",N,N],[5,"SDL_SetSurfaceAlphaMod",E,"\\brief Set an additional alpha value used in blit…",N,N],[5,"SDL_GetSurfaceAlphaMod",E,"\\brief Get the additional alpha value used in blit…",N,N],[5,"SDL_SetSurfaceBlendMode",E,"\\brief Set the blend mode used for blit operations.",N,N],[5,"SDL_GetSurfaceBlendMode",E,"\\brief Get the blend mode used for blit operations.",N,N],[5,"SDL_SetClipRect",E,"Sets the clipping rectangle for the destination surface in…",N,N],[5,"SDL_GetClipRect",E,"Gets the clipping rectangle for the destination surface in…",N,N],[5,"SDL_DuplicateSurface",E,E,N,N],[5,"SDL_ConvertSurface",E,"Creates a new surface of the specified format, and then…",N,N],[5,"SDL_ConvertSurfaceFormat",E,E,N,N],[5,"SDL_ConvertPixels",E,"\\brief Copy a block of pixels of one format to another…",N,N],[5,"SDL_FillRect",E,"Performs a fast fill of the given rectangle with \\c color.",N,N],[5,"SDL_FillRects",E,E,N,N],[5,"SDL_UpperBlit",E,"This is the public blit function, SDL_BlitSurface(), and…",N,N],[5,"SDL_LowerBlit",E,R[385],N,N],[5,"SDL_SoftStretch",E,"\\brief Perform a fast, low quality, stretch blit between…",N,N],[5,"SDL_UpperBlitScaled",E,"This is the public scaled blit function, SDL_BlitScaled(),…",N,N],[5,"SDL_LowerBlitScaled",E,R[385],N,N],[5,"SDL_SetYUVConversionMode",E,"\\brief Set the YUV conversion mode",N,N],[5,"SDL_GetYUVConversionMode",E,"\\brief Get the YUV conversion mode",N,N],[5,"SDL_GetYUVConversionModeForResolution",E,"\\brief Get the YUV conversion mode, returning the correct…",N,N],[5,"SDL_GetNumVideoDrivers",E,"\\brief Get the number of video drivers compiled into SDL",N,N],[5,"SDL_GetVideoDriver",E,"\\brief Get the name of a built in video driver.",N,N],[5,"SDL_VideoInit",E,"\\brief Initialize the video subsystem, optionally…",N,N],[5,"SDL_VideoQuit",E,"\\brief Shuts down the video subsystem.",N,N],[5,"SDL_GetCurrentVideoDriver",E,"\\brief Returns the name of the currently initialized video…",N,N],[5,"SDL_GetNumVideoDisplays",E,"\\brief Returns the number of available video displays.",N,N],[5,"SDL_GetDisplayName",E,"\\brief Get the name of a display in UTF-8 encoding",N,N],[5,"SDL_GetDisplayBounds",E,"\\brief Get the desktop area represented by a display, with…",N,N],[5,"SDL_GetDisplayUsableBounds",E,"\\brief Get the usable desktop area represented by a…",N,N],[5,"SDL_GetDisplayDPI",E,"\\brief Get the dots/pixels-per-inch for a display",N,N],[5,"SDL_GetDisplayOrientation",E,"\\brief Get the orientation of a display",N,N],[5,"SDL_GetNumDisplayModes",E,"\\brief Returns the number of available display modes.",N,N],[5,"SDL_GetDisplayMode",E,"\\brief Fill in information about a specific display mode.",N,N],[5,"SDL_GetDesktopDisplayMode",E,"\\brief Fill in information about the desktop display mode.",N,N],[5,"SDL_GetCurrentDisplayMode",E,"\\brief Fill in information about the current display mode.",N,N],[5,"SDL_GetClosestDisplayMode",E,"\\brief Get the closest match to the requested display mode.",N,N],[5,"SDL_GetWindowDisplayIndex",E,"\\brief Get the display index associated with a window.",N,N],[5,"SDL_SetWindowDisplayMode",E,"\\brief Set the display mode used when a fullscreen window…",N,N],[5,"SDL_GetWindowDisplayMode",E,"\\brief Fill in information about the display mode used…",N,N],[5,"SDL_GetWindowPixelFormat",E,"\\brief Get the pixel format associated with the window.",N,N],[5,"SDL_CreateWindow",E,"\\brief Create a window with the specified position,…",N,N],[5,"SDL_CreateWindowFrom",E,"\\brief Create an SDL window from an existing native window.",N,N],[5,"SDL_GetWindowID",E,"\\brief Get the numeric ID of a window, for logging purposes.",N,N],[5,"SDL_GetWindowFromID",E,"\\brief Get a window from a stored ID, or NULL if it…",N,N],[5,"SDL_GetWindowFlags",E,"\\brief Get the window flags.",N,N],[5,"SDL_SetWindowTitle",E,"\\brief Set the title of a window, in UTF-8 format.",N,N],[5,"SDL_GetWindowTitle",E,"\\brief Get the title of a window, in UTF-8 format.",N,N],[5,"SDL_SetWindowIcon",E,"\\brief Set the icon for a window.",N,N],[5,"SDL_SetWindowData",E,"\\brief Associate an arbitrary named pointer with a window.",N,N],[5,"SDL_GetWindowData",E,"\\brief Retrieve the data pointer associated with a window.",N,N],[5,"SDL_SetWindowPosition",E,"\\brief Set the position of a window.",N,N],[5,"SDL_GetWindowPosition",E,"\\brief Get the position of a window.",N,N],[5,"SDL_SetWindowSize",E,"\\brief Set the size of a window's client area.",N,N],[5,"SDL_GetWindowSize",E,"\\brief Get the size of a window's client area.",N,N],[5,"SDL_GetWindowBordersSize",E,"\\brief Get the size of a window's borders (decorations)…",N,N],[5,"SDL_SetWindowMinimumSize",E,"\\brief Set the minimum size of a window's client area.",N,N],[5,"SDL_GetWindowMinimumSize",E,"\\brief Get the minimum size of a window's client area.",N,N],[5,"SDL_SetWindowMaximumSize",E,"\\brief Set the maximum size of a window's client area.",N,N],[5,"SDL_GetWindowMaximumSize",E,"\\brief Get the maximum size of a window's client area.",N,N],[5,"SDL_SetWindowBordered",E,"\\brief Set the border state of a window.",N,N],[5,"SDL_SetWindowResizable",E,"\\brief Set the user-resizable state of a window.",N,N],[5,"SDL_ShowWindow",E,"\\brief Show a window.",N,N],[5,"SDL_HideWindow",E,"\\brief Hide a window.",N,N],[5,"SDL_RaiseWindow",E,"\\brief Raise a window above other windows and set the…",N,N],[5,"SDL_MaximizeWindow",E,"\\brief Make a window as large as possible.",N,N],[5,"SDL_MinimizeWindow",E,"\\brief Minimize a window to an iconic representation.",N,N],[5,"SDL_RestoreWindow",E,"\\brief Restore the size and position of a minimized or…",N,N],[5,"SDL_SetWindowFullscreen",E,"\\brief Set a window's fullscreen state.",N,N],[5,"SDL_GetWindowSurface",E,"\\brief Get the SDL surface associated with the window.",N,N],[5,"SDL_UpdateWindowSurface",E,"\\brief Copy the window surface to the screen.",N,N],[5,"SDL_UpdateWindowSurfaceRects",E,"\\brief Copy a number of rectangles on the window surface…",N,N],[5,"SDL_SetWindowGrab",E,"\\brief Set a window's input grab mode.",N,N],[5,"SDL_GetWindowGrab",E,"\\brief Get a window's input grab mode.",N,N],[5,"SDL_GetGrabbedWindow",E,"\\brief Get the window that currently has an input grab…",N,N],[5,"SDL_SetWindowBrightness",E,"\\brief Set the brightness (gamma correction) for a window.",N,N],[5,"SDL_GetWindowBrightness",E,"\\brief Get the brightness (gamma correction) for a window.",N,N],[5,"SDL_SetWindowOpacity",E,"\\brief Set the opacity for a window",N,N],[5,"SDL_GetWindowOpacity",E,"\\brief Get the opacity of a window.",N,N],[5,"SDL_SetWindowModalFor",E,"\\brief Sets the window as a modal for another window…",N,N],[5,"SDL_SetWindowInputFocus",E,"\\brief Explicitly sets input focus to the window.",N,N],[5,"SDL_SetWindowGammaRamp",E,"\\brief Set the gamma ramp for a window.",N,N],[5,"SDL_GetWindowGammaRamp",E,"\\brief Get the gamma ramp for a window.",N,N],[5,"SDL_SetWindowHitTest",E,"\\brief Provide a callback that decides if a window region…",N,N],[5,"SDL_DestroyWindow",E,"\\brief Destroy a window.",N,N],[5,"SDL_IsScreenSaverEnabled",E,"\\brief Returns whether the screensaver is currently…",N,N],[5,"SDL_EnableScreenSaver",E,"\\brief Allow the screen to be blanked by a screensaver",N,N],[5,"SDL_DisableScreenSaver",E,"\\brief Prevent the screen from being blanked by a…",N,N],[5,"SDL_GL_LoadLibrary",E,"\\brief Dynamically load an OpenGL library.",N,N],[5,"SDL_GL_GetProcAddress",E,"\\brief Get the address of an OpenGL function.",N,N],[5,"SDL_GL_UnloadLibrary",E,"\\brief Unload the OpenGL library previously loaded by…",N,N],[5,"SDL_GL_ExtensionSupported",E,"\\brief Return true if an OpenGL extension is supported for…",N,N],[5,"SDL_GL_ResetAttributes",E,"\\brief Reset all previously set OpenGL context attributes…",N,N],[5,"SDL_GL_SetAttribute",E,"\\brief Set an OpenGL window attribute before window…",N,N],[5,"SDL_GL_GetAttribute",E,"\\brief Get the actual value for an attribute from the…",N,N],[5,"SDL_GL_CreateContext",E,"\\brief Create an OpenGL context for use with an OpenGL…",N,N],[5,"SDL_GL_MakeCurrent",E,"\\brief Set up an OpenGL context for rendering into an…",N,N],[5,"SDL_GL_GetCurrentWindow",E,"\\brief Get the currently active OpenGL window.",N,N],[5,"SDL_GL_GetCurrentContext",E,"\\brief Get the currently active OpenGL context.",N,N],[5,"SDL_GL_GetDrawableSize",E,R[395],N,N],[5,"SDL_GL_SetSwapInterval",E,"\\brief Set the swap interval for the current OpenGL context.",N,N],[5,"SDL_GL_GetSwapInterval",E,"\\brief Get the swap interval for the current OpenGL context.",N,N],[5,"SDL_GL_SwapWindow",E,"\\brief Swap the OpenGL buffers for a window, if…",N,N],[5,"SDL_GL_DeleteContext",E,"\\brief Delete an OpenGL context.",N,N],[5,"SDL_GetKeyboardFocus",E,"\\brief Get the window which currently has keyboard focus.",N,N],[5,"SDL_GetKeyboardState",E,"\\brief Get a snapshot of the current state of the keyboard.",N,N],[5,"SDL_GetModState",E,"\\brief Get the current key modifier state for the keyboard.",N,N],[5,"SDL_SetModState",E,"\\brief Set the current key modifier state for the keyboard.",N,N],[5,"SDL_GetKeyFromScancode",E,"\\brief Get the key code corresponding to the given…",N,N],[5,"SDL_GetScancodeFromKey",E,"\\brief Get the scancode corresponding to the given key…",N,N],[5,"SDL_GetScancodeName",E,"\\brief Get a human-readable name for a scancode.",N,N],[5,"SDL_GetScancodeFromName",E,"\\brief Get a scancode from a human-readable name",N,N],[5,"SDL_GetKeyName",E,"\\brief Get a human-readable name for a key.",N,N],[5,"SDL_GetKeyFromName",E,"\\brief Get a key code from a human-readable name",N,N],[5,"SDL_StartTextInput",E,"\\brief Start accepting Unicode text input events. This…",N,N],[5,"SDL_IsTextInputActive",E,"\\brief Return whether or not Unicode text input events are…",N,N],[5,"SDL_StopTextInput",E,"\\brief Stop receiving any text input events. This function…",N,N],[5,"SDL_SetTextInputRect",E,"\\brief Set the rectangle used to type Unicode text inputs.…",N,N],[5,"SDL_HasScreenKeyboardSupport",E,"\\brief Returns whether the platform has some screen…",N,N],[5,"SDL_IsScreenKeyboardShown",E,"\\brief Returns whether the screen keyboard is shown for…",N,N],[5,"SDL_GetMouseFocus",E,"\\brief Get the window which currently has mouse focus.",N,N],[5,"SDL_GetMouseState",E,"\\brief Retrieve the current state of the mouse.",N,N],[5,"SDL_GetGlobalMouseState",E,"\\brief Get the current state of the mouse, in relation to…",N,N],[5,"SDL_GetRelativeMouseState",E,"\\brief Retrieve the relative state of the mouse.",N,N],[5,"SDL_WarpMouseInWindow",E,"\\brief Moves the mouse to the given position within the…",N,N],[5,"SDL_WarpMouseGlobal",E,"\\brief Moves the mouse to the given position in global…",N,N],[5,"SDL_SetRelativeMouseMode",E,"\\brief Set relative mouse mode.",N,N],[5,"SDL_CaptureMouse",E,"\\brief Capture the mouse, to track input outside an SDL…",N,N],[5,"SDL_GetRelativeMouseMode",E,"\\brief Query whether relative mouse mode is enabled.",N,N],[5,"SDL_CreateCursor",E,"\\brief Create a cursor, using the specified bitmap data…",N,N],[5,"SDL_CreateColorCursor",E,"\\brief Create a color cursor.",N,N],[5,"SDL_CreateSystemCursor",E,"\\brief Create a system cursor.",N,N],[5,"SDL_SetCursor",E,"\\brief Set the active cursor.",N,N],[5,"SDL_GetCursor",E,"\\brief Return the active cursor.",N,N],[5,"SDL_GetDefaultCursor",E,"\\brief Return the default cursor.",N,N],[5,"SDL_FreeCursor",E,"\\brief Frees a cursor created with SDL_CreateCursor() or…",N,N],[5,"SDL_ShowCursor",E,"\\brief Toggle whether or not the cursor is shown.",N,N],[5,"SDL_LockJoysticks",E,"Locking for multi-threaded access to the joystick API",N,N],[5,"SDL_UnlockJoysticks",E,E,N,N],[5,"SDL_NumJoysticks",E,"Count the number of joysticks attached to the system right…",N,N],[5,"SDL_JoystickNameForIndex",E,"Get the implementation dependent name of a joystick. This…",N,N],[5,"SDL_JoystickGetDevicePlayerIndex",E,"Get the player index of a joystick, or -1 if it's not…",N,N],[5,"SDL_JoystickGetDeviceGUID",E,"Return the GUID for the joystick at this index This can be…",N,N],[5,"SDL_JoystickGetDeviceVendor",E,"Get the USB vendor ID of a joystick, if available. This…",N,N],[5,"SDL_JoystickGetDeviceProduct",E,"Get the USB product ID of a joystick, if available. This…",N,N],[5,"SDL_JoystickGetDeviceProductVersion",E,"Get the product version of a joystick, if available. This…",N,N],[5,"SDL_JoystickGetDeviceType",E,"Get the type of a joystick, if available. This can be…",N,N],[5,"SDL_JoystickGetDeviceInstanceID",E,"Get the instance ID of a joystick. This can be called…",N,N],[5,"SDL_JoystickOpen",E,"Open a joystick for use. The index passed as an argument…",N,N],[5,"SDL_JoystickFromInstanceID",E,"Return the SDL_Joystick associated with an instance id.",N,N],[5,"SDL_JoystickName",E,"Return the name for this currently opened joystick. If no…",N,N],[5,"SDL_JoystickGetPlayerIndex",E,"Get the player index of an opened joystick, or -1 if it's…",N,N],[5,"SDL_JoystickGetGUID",E,"Return the GUID for this opened joystick",N,N],[5,"SDL_JoystickGetVendor",E,"Get the USB vendor ID of an opened joystick, if available.…",N,N],[5,"SDL_JoystickGetProduct",E,"Get the USB product ID of an opened joystick, if…",N,N],[5,"SDL_JoystickGetProductVersion",E,"Get the product version of an opened joystick, if…",N,N],[5,"SDL_JoystickGetType",E,"Get the type of an opened joystick.",N,N],[5,"SDL_JoystickGetGUIDString",E,"Return a string representation for this guid. pszGUID must…",N,N],[5,"SDL_JoystickGetGUIDFromString",E,"Convert a string into a joystick guid",N,N],[5,"SDL_JoystickGetAttached",E,"Returns SDL_TRUE if the joystick has been opened and…",N,N],[5,"SDL_JoystickInstanceID",E,"Get the instance ID of an opened joystick or -1 if the…",N,N],[5,"SDL_JoystickNumAxes",E,"Get the number of general axis controls on a joystick.",N,N],[5,"SDL_JoystickNumBalls",E,"Get the number of trackballs on a joystick.",N,N],[5,"SDL_JoystickNumHats",E,"Get the number of POV hats on a joystick.",N,N],[5,"SDL_JoystickNumButtons",E,"Get the number of buttons on a joystick.",N,N],[5,"SDL_JoystickUpdate",E,"Update the current state of the open joysticks.",N,N],[5,"SDL_JoystickEventState",E,"Enable/disable joystick event polling.",N,N],[5,"SDL_JoystickGetAxis",E,"Get the current state of an axis control on a joystick.",N,N],[5,"SDL_JoystickGetAxisInitialState",E,"Get the initial state of an axis control on a joystick.",N,N],[5,"SDL_JoystickGetHat",E,"Get the current state of a POV hat on a joystick.",N,N],[5,"SDL_JoystickGetBall",E,"Get the ball axis change since the last poll.",N,N],[5,"SDL_JoystickGetButton",E,"Get the current state of a button on a joystick.",N,N],[5,"SDL_JoystickRumble",E,R[387],N,N],[5,"SDL_JoystickClose",E,"Close a joystick previously opened with SDL_JoystickOpen().",N,N],[5,"SDL_JoystickCurrentPowerLevel",E,"Return the battery level of this joystick",N,N],[5,"SDL_GameControllerAddMappingsFromRW",E,"Load a set of mappings from a seekable SDL data stream…",N,N],[5,"SDL_GameControllerAddMapping",E,"Add or update an existing mapping configuration",N,N],[5,"SDL_GameControllerNumMappings",E,"Get the number of mappings installed",N,N],[5,"SDL_GameControllerMappingForIndex",E,"Get the mapping at a particular index.",N,N],[5,"SDL_GameControllerMappingForGUID",E,"Get a mapping string for a GUID",N,N],[5,"SDL_GameControllerMapping",E,"Get a mapping string for an open GameController",N,N],[5,"SDL_IsGameController",E,"Is the joystick on this index supported by the game…",N,N],[5,"SDL_GameControllerNameForIndex",E,"Get the implementation dependent name of a game…",N,N],[5,"SDL_GameControllerMappingForDeviceIndex",E,"Get the mapping of a game controller. This can be called…",N,N],[5,"SDL_GameControllerOpen",E,"Open a game controller for use. The index passed as an…",N,N],[5,"SDL_GameControllerFromInstanceID",E,"Return the SDL_GameController associated with an instance…",N,N],[5,"SDL_GameControllerName",E,"Return the name for this currently opened controller",N,N],[5,"SDL_GameControllerGetPlayerIndex",E,"Get the player index of an opened game controller, or -1…",N,N],[5,"SDL_GameControllerGetVendor",E,"Get the USB vendor ID of an opened controller, if…",N,N],[5,"SDL_GameControllerGetProduct",E,"Get the USB product ID of an opened controller, if…",N,N],[5,"SDL_GameControllerGetProductVersion",E,"Get the product version of an opened controller, if…",N,N],[5,"SDL_GameControllerGetAttached",E,"Returns SDL_TRUE if the controller has been opened and…",N,N],[5,"SDL_GameControllerGetJoystick",E,"Get the underlying joystick object used by a controller",N,N],[5,"SDL_GameControllerEventState",E,"Enable/disable controller event polling.",N,N],[5,"SDL_GameControllerUpdate",E,"Update the current state of the open game controllers.",N,N],[5,"SDL_GameControllerGetAxisFromString",E,"turn this string into a axis mapping",N,N],[5,"SDL_GameControllerGetStringForAxis",E,"turn this axis enum into a string mapping",N,N],[5,"SDL_GameControllerGetBindForAxis",E,R[386],N,N],[5,"SDL_GameControllerGetAxis",E,"Get the current state of an axis control on a game…",N,N],[5,"SDL_GameControllerGetButtonFromString",E,"turn this string into a button mapping",N,N],[5,"SDL_GameControllerGetStringForButton",E,"turn this button enum into a string mapping",N,N],[5,"SDL_GameControllerGetBindForButton",E,R[386],N,N],[5,"SDL_GameControllerGetButton",E,"Get the current state of a button on a game controller.",N,N],[5,"SDL_GameControllerRumble",E,R[387],N,N],[5,"SDL_GameControllerClose",E,"Close a controller previously opened with…",N,N],[5,"SDL_GetNumTouchDevices",E,"\\brief Get the number of registered touch devices.",N,N],[5,"SDL_GetTouchDevice",E,"\\brief Get the touch ID with the given index, or 0 if the…",N,N],[5,"SDL_GetNumTouchFingers",E,"\\brief Get the number of active fingers for a given touch…",N,N],[5,"SDL_GetTouchFinger",E,"\\brief Get the finger object of the given touch, with the…",N,N],[5,"SDL_RecordGesture",E,"\\brief Begin Recording a gesture on the specified touch,…",N,N],[5,"SDL_SaveAllDollarTemplates",E,"\\brief Save all currently loaded Dollar Gesture templates",N,N],[5,"SDL_SaveDollarTemplate",E,"\\brief Save a currently loaded Dollar Gesture template",N,N],[5,"SDL_LoadDollarTemplates",E,"\\brief Load Dollar Gesture templates from a file",N,N],[5,"SDL_PumpEvents",E,R[1657],N,N],[5,"SDL_PeepEvents",E,"Checks the event queue for messages and optionally returns…",N,N],[5,"SDL_HasEvent",E,"Checks to see if certain event types are in the event queue.",N,N],[5,"SDL_HasEvents",E,E,N,N],[5,"SDL_FlushEvent",E,"This function clears events from the event queue This…",N,N],[5,"SDL_FlushEvents",E,E,N,N],[5,"SDL_PollEvent",E,"\\brief Polls for currently pending events.",N,N],[5,"SDL_WaitEvent",E,"\\brief Waits indefinitely for the next available event.",N,N],[5,"SDL_WaitEventTimeout",E,"\\brief Waits until the specified timeout (in milliseconds)…",N,N],[5,"SDL_PushEvent",E,"\\brief Add an event to the event queue.",N,N],[5,"SDL_SetEventFilter",E,"Sets up a filter to process all events before they change…",N,N],[5,"SDL_GetEventFilter",E,"Return the current event filter - can be used to \"chain\"…",N,N],[5,"SDL_AddEventWatch",E,"Add a function which is called when an event is added to…",N,N],[5,"SDL_DelEventWatch",E,"Remove an event watch function added with…",N,N],[5,"SDL_FilterEvents",E,"Run the filter function on the current event queue,…",N,N],[5,"SDL_EventState",E,"This function allows you to set the state of processing…",N,N],[5,"SDL_RegisterEvents",E,"This function allocates a set of user-defined events, and…",N,N],[5,"SDL_GetBasePath",E,"\\brief Get the path where the application resides.",N,N],[5,"SDL_GetPrefPath",E,"\\brief Get the user-and-app-specific path where files can…",N,N],[5,"SDL_NumHaptics",E,"\\brief Count the number of haptic devices attached to the…",N,N],[5,"SDL_HapticName",E,"\\brief Get the implementation dependent name of a haptic…",N,N],[5,"SDL_HapticOpen",E,"\\brief Opens a haptic device for use.",N,N],[5,"SDL_HapticOpened",E,"\\brief Checks if the haptic device at index has been opened.",N,N],[5,"SDL_HapticIndex",E,"\\brief Gets the index of a haptic device.",N,N],[5,"SDL_MouseIsHaptic",E,"\\brief Gets whether or not the current mouse has haptic…",N,N],[5,"SDL_HapticOpenFromMouse",E,"\\brief Tries to open a haptic device from the current mouse.",N,N],[5,"SDL_JoystickIsHaptic",E,"\\brief Checks to see if a joystick has haptic features.",N,N],[5,"SDL_HapticOpenFromJoystick",E,"\\brief Opens a haptic device for use from a joystick device.",N,N],[5,"SDL_HapticClose",E,"\\brief Closes a haptic device previously opened with…",N,N],[5,"SDL_HapticNumEffects",E,R[388],N,N],[5,"SDL_HapticNumEffectsPlaying",E,R[388],N,N],[5,"SDL_HapticQuery",E,"\\brief Gets the haptic device's supported features in…",N,N],[5,"SDL_HapticNumAxes",E,"\\brief Gets the number of haptic axes the device has.",N,N],[5,"SDL_HapticEffectSupported",E,"\\brief Checks to see if effect is supported by haptic.",N,N],[5,"SDL_HapticNewEffect",E,"\\brief Creates a new haptic effect on the device.",N,N],[5,"SDL_HapticUpdateEffect",E,"\\brief Updates the properties of an effect.",N,N],[5,"SDL_HapticRunEffect",E,"\\brief Runs the haptic effect on its associated haptic…",N,N],[5,"SDL_HapticStopEffect",E,"\\brief Stops the haptic effect on its associated haptic…",N,N],[5,"SDL_HapticDestroyEffect",E,"\\brief Destroys a haptic effect on the device.",N,N],[5,"SDL_HapticGetEffectStatus",E,"\\brief Gets the status of the current effect on the haptic…",N,N],[5,"SDL_HapticSetGain",E,"\\brief Sets the global gain of the device.",N,N],[5,"SDL_HapticSetAutocenter",E,"\\brief Sets the global autocenter of the device.",N,N],[5,"SDL_HapticPause",E,"\\brief Pauses a haptic device.",N,N],[5,"SDL_HapticUnpause",E,"\\brief Unpauses a haptic device.",N,N],[5,"SDL_HapticStopAll",E,"\\brief Stops all the currently playing effects on a haptic…",N,N],[5,"SDL_HapticRumbleSupported",E,"\\brief Checks to see if rumble is supported on a haptic…",N,N],[5,"SDL_HapticRumbleInit",E,"\\brief Initializes the haptic device for simple rumble…",N,N],[5,"SDL_HapticRumblePlay",E,"\\brief Runs simple rumble on a haptic device",N,N],[5,"SDL_HapticRumbleStop",E,"\\brief Stops the simple rumble on a haptic device.",N,N],[5,"SDL_SetHintWithPriority",E,"\\brief Set a hint with a specific priority",N,N],[5,"SDL_SetHint",E,"\\brief Set a hint with normal priority",N,N],[5,"SDL_GetHint",E,R[389],N,N],[5,"SDL_GetHintBoolean",E,R[389],N,N],[5,"SDL_AddHintCallback",E,"\\brief Add a function to watch a particular hint",N,N],[5,"SDL_DelHintCallback",E,"\\brief Remove a function watching a particular hint",N,N],[5,"SDL_ClearHints",E,"\\brief  Clear all hints",N,N],[5,"SDL_LoadObject",E,"This function dynamically loads a shared object and…",N,N],[5,"SDL_LoadFunction",E,"Given an object handle, this function looks up the address…",N,N],[5,"SDL_UnloadObject",E,"Unload a shared object from memory.",N,N],[5,"SDL_LogSetAllPriority",E,"\\brief Set the priority of all log categories",N,N],[5,"SDL_LogSetPriority",E,"\\brief Set the priority of a particular log category",N,N],[5,"SDL_LogGetPriority",E,"\\brief Get the priority of a particular log category",N,N],[5,"SDL_LogResetPriorities",E,"\\brief Reset all priorities to default.",N,N],[5,"SDL_Log",E,"\\brief Log a message with SDL_LOG_CATEGORY_APPLICATION and…",N,N],[5,"SDL_LogVerbose",E,"\\brief Log a message with SDL_LOG_PRIORITY_VERBOSE",N,N],[5,"SDL_LogDebug",E,"\\brief Log a message with SDL_LOG_PRIORITY_DEBUG",N,N],[5,"SDL_LogInfo",E,"\\brief Log a message with SDL_LOG_PRIORITY_INFO",N,N],[5,"SDL_LogWarn",E,"\\brief Log a message with SDL_LOG_PRIORITY_WARN",N,N],[5,"SDL_LogError",E,"\\brief Log a message with SDL_LOG_PRIORITY_ERROR",N,N],[5,"SDL_LogCritical",E,"\\brief Log a message with SDL_LOG_PRIORITY_CRITICAL",N,N],[5,"SDL_LogMessage",E,R[390],N,N],[5,"SDL_LogMessageV",E,R[390],N,N],[5,"SDL_LogGetOutputFunction",E,"\\brief Get the current log output function.",N,N],[5,"SDL_LogSetOutputFunction",E,"\\brief This function allows you to replace the default log…",N,N],[5,"SDL_ShowMessageBox",E,"\\brief Create a modal message box.",N,N],[5,"SDL_ShowSimpleMessageBox",E,"\\brief Create a simple modal message box",N,N],[5,"SDL_GetPowerInfo",E,"\\brief Get the current power supply details.",N,N],[5,"SDL_GetNumRenderDrivers",E,"\\brief Get the number of 2D rendering drivers available…",N,N],[5,"SDL_GetRenderDriverInfo",E,"\\brief Get information about a specific 2D rendering…",N,N],[5,"SDL_CreateWindowAndRenderer",E,"\\brief Create a window and default renderer",N,N],[5,"SDL_CreateRenderer",E,"\\brief Create a 2D rendering context for a window.",N,N],[5,"SDL_CreateSoftwareRenderer",E,"\\brief Create a 2D software rendering context for a surface.",N,N],[5,"SDL_GetRenderer",E,"\\brief Get the renderer associated with a window.",N,N],[5,"SDL_GetRendererInfo",E,"\\brief Get information about a rendering context.",N,N],[5,"SDL_GetRendererOutputSize",E,"\\brief Get the output size in pixels of a rendering context.",N,N],[5,"SDL_CreateTexture",E,"\\brief Create a texture for a rendering context.",N,N],[5,"SDL_CreateTextureFromSurface",E,"\\brief Create a texture from an existing surface.",N,N],[5,"SDL_QueryTexture",E,"\\brief Query the attributes of a texture",N,N],[5,"SDL_SetTextureColorMod",E,"\\brief Set an additional color value used in render copy…",N,N],[5,"SDL_GetTextureColorMod",E,"\\brief Get the additional color value used in render copy…",N,N],[5,"SDL_SetTextureAlphaMod",E,"\\brief Set an additional alpha value used in render copy…",N,N],[5,"SDL_GetTextureAlphaMod",E,"\\brief Get the additional alpha value used in render copy…",N,N],[5,"SDL_SetTextureBlendMode",E,"\\brief Set the blend mode used for texture copy operations.",N,N],[5,"SDL_GetTextureBlendMode",E,"\\brief Get the blend mode used for texture copy operations.",N,N],[5,"SDL_UpdateTexture",E,"\\brief Update the given texture rectangle with new pixel…",N,N],[5,"SDL_UpdateYUVTexture",E,"\\brief Update a rectangle within a planar YV12 or IYUV…",N,N],[5,"SDL_LockTexture",E,"\\brief Lock a portion of the texture for write-only pixel…",N,N],[5,"SDL_UnlockTexture",E,"\\brief Unlock a texture, uploading the changes to video…",N,N],[5,"SDL_RenderTargetSupported",E,"\\brief Determines whether a window supports the use of…",N,N],[5,"SDL_SetRenderTarget",E,"\\brief Set a texture as the current rendering target.",N,N],[5,"SDL_GetRenderTarget",E,"\\brief Get the current render target or NULL for the…",N,N],[5,"SDL_RenderSetLogicalSize",E,"\\brief Set device independent resolution for rendering",N,N],[5,"SDL_RenderGetLogicalSize",E,"\\brief Get device independent resolution for rendering",N,N],[5,"SDL_RenderSetIntegerScale",E,"\\brief Set whether to force integer scales for…",N,N],[5,"SDL_RenderGetIntegerScale",E,"\\brief Get whether integer scales are forced for…",N,N],[5,"SDL_RenderSetViewport",E,"\\brief Set the drawing area for rendering on the current…",N,N],[5,"SDL_RenderGetViewport",E,"\\brief Get the drawing area for the current target.",N,N],[5,"SDL_RenderSetClipRect",E,"\\brief Set the clip rectangle for the current target.",N,N],[5,"SDL_RenderGetClipRect",E,"\\brief Get the clip rectangle for the current target.",N,N],[5,"SDL_RenderIsClipEnabled",E,"\\brief Get whether clipping is enabled on the given…",N,N],[5,"SDL_RenderSetScale",E,"\\brief Set the drawing scale for rendering on the current…",N,N],[5,"SDL_RenderGetScale",E,"\\brief Get the drawing scale for the current target.",N,N],[5,"SDL_SetRenderDrawColor",E,"\\brief Set the color used for drawing operations (Rect,…",N,N],[5,"SDL_GetRenderDrawColor",E,"\\brief Get the color used for drawing operations (Rect,…",N,N],[5,"SDL_SetRenderDrawBlendMode",E,"\\brief Set the blend mode used for drawing operations…",N,N],[5,"SDL_GetRenderDrawBlendMode",E,"\\brief Get the blend mode used for drawing operations.",N,N],[5,"SDL_RenderClear",E,"\\brief Clear the current rendering target with the drawing…",N,N],[5,"SDL_RenderDrawPoint",E,"\\brief Draw a point on the current rendering target.",N,N],[5,"SDL_RenderDrawPoints",E,"\\brief Draw multiple points on the current rendering target.",N,N],[5,"SDL_RenderDrawLine",E,"\\brief Draw a line on the current rendering target.",N,N],[5,"SDL_RenderDrawLines",E,"\\brief Draw a series of connected lines on the current…",N,N],[5,"SDL_RenderDrawRect",E,"\\brief Draw a rectangle on the current rendering target.",N,N],[5,"SDL_RenderDrawRects",E,"\\brief Draw some number of rectangles on the current…",N,N],[5,"SDL_RenderFillRect",E,"\\brief Fill a rectangle on the current rendering target…",N,N],[5,"SDL_RenderFillRects",E,"\\brief Fill some number of rectangles on the current…",N,N],[5,"SDL_RenderCopy",E,"\\brief Copy a portion of the texture to the current…",N,N],[5,"SDL_RenderCopyEx",E,"\\brief Copy a portion of the source texture to the current…",N,N],[5,"SDL_RenderReadPixels",E,"\\brief Read pixels from the current rendering target.",N,N],[5,"SDL_RenderPresent",E,"\\brief Update the screen with rendering performed.",N,N],[5,"SDL_DestroyTexture",E,"\\brief Destroy the specified texture.",N,N],[5,"SDL_DestroyRenderer",E,"\\brief Destroy the rendering context for a window and free…",N,N],[5,"SDL_GL_BindTexture",E,"\\brief Bind the texture to the current OpenGL/ES/ES2…",N,N],[5,"SDL_GL_UnbindTexture",E,"\\brief Unbind a texture from the current OpenGL/ES/ES2…",N,N],[5,"SDL_RenderGetMetalLayer",E,"\\brief Get the CAMetalLayer associated with the given…",N,N],[5,"SDL_RenderGetMetalCommandEncoder",E,"\\brief Get the Metal command encoder for the current frame",N,N],[5,"SDL_NumSensors",E,"\\brief Count the number of sensors attached to the system…",N,N],[5,"SDL_SensorGetDeviceName",E,R[391],N,N],[5,"SDL_SensorGetDeviceType",E,R[392],N,N],[5,"SDL_SensorGetDeviceNonPortableType",E,R[393],N,N],[5,"SDL_SensorGetDeviceInstanceID",E,R[394],N,N],[5,"SDL_SensorOpen",E,"\\brief Open a sensor for use.",N,N],[5,"SDL_SensorFromInstanceID",E,"Return the SDL_Sensor associated with an instance id.",N,N],[5,"SDL_SensorGetName",E,R[391],N,N],[5,"SDL_SensorGetType",E,R[392],N,N],[5,"SDL_SensorGetNonPortableType",E,R[393],N,N],[5,"SDL_SensorGetInstanceID",E,R[394],N,N],[5,"SDL_SensorGetData",E,"Get the current state of an opened sensor.",N,N],[5,"SDL_SensorClose",E,"Close a sensor previously opened with SDL_SensorOpen()",N,N],[5,"SDL_SensorUpdate",E,"Update the current state of the open sensors.",N,N],[5,"SDL_CreateShapedWindow",E,"\\brief Create a window that can be shaped with the…",N,N],[5,"SDL_IsShapedWindow",E,"\\brief Return whether the given window is a shaped window.",N,N],[5,"SDL_SetWindowShape",E,"\\brief Set the shape and parameters of a shaped window.",N,N],[5,"SDL_GetShapedWindowMode",E,"\\brief Get the shape parameters of a shaped window.",N,N],[5,"SDL_LinuxSetThreadPriority",E,"\\brief Sets the UNIX nice value for a thread, using…",N,N],[5,"SDL_IsTablet",E,"\\brief Return true if the current device is a tablet.",N,N],[5,"SDL_GetTicks",E,"\\brief Get the number of milliseconds since the SDL…",N,N],[5,"SDL_GetPerformanceCounter",E,"\\brief Get the current value of the high resolution counter",N,N],[5,"SDL_GetPerformanceFrequency",E,"\\brief Get the count per second of the high resolution…",N,N],[5,"SDL_Delay",E,"\\brief Wait a specified number of milliseconds before…",N,N],[5,"SDL_AddTimer",E,"\\brief Add a new timer to the pool of timers already…",N,N],[5,"SDL_RemoveTimer",E,"\\brief Remove a timer knowing its ID.",N,N],[5,"SDL_GetVersion",E,"\\brief Get the version of SDL that is linked against your…",N,N],[5,"SDL_GetRevision",E,"\\brief Get the code revision of SDL that is linked against…",N,N],[5,"SDL_GetRevisionNumber",E,"\\brief Get the revision number of SDL that is linked…",N,N],[5,"SDL_Init",E,"This function initializes the subsystems specified by \\c…",N,N],[5,"SDL_InitSubSystem",E,"This function initializes specific SDL subsystems",N,N],[5,"SDL_QuitSubSystem",E,"This function cleans up specific SDL subsystems",N,N],[5,"SDL_WasInit",E,"This function returns a mask of the specified subsystems…",N,N],[5,"SDL_Quit",E,"This function cleans up all initialized subsystems. You…",N,N],[5,"_Xmblen",E,E,N,N],[7,"_Xdebug",E,E,N,N],[5,"XLoadQueryFont",E,E,N,N],[5,"XQueryFont",E,E,N,N],[5,"XGetMotionEvents",E,E,N,N],[5,"XDeleteModifiermapEntry",E,E,N,N],[5,"XGetModifierMapping",E,E,N,N],[5,"XInsertModifiermapEntry",E,E,N,N],[5,"XNewModifiermap",E,E,N,N],[5,"XCreateImage",E,E,N,N],[5,"XInitImage",E,E,N,N],[5,"XGetImage",E,E,N,N],[5,"XGetSubImage",E,E,N,N],[5,"XOpenDisplay",E,E,N,N],[5,"XrmInitialize",E,E,N,N],[5,"XFetchBytes",E,E,N,N],[5,"XFetchBuffer",E,E,N,N],[5,"XGetAtomName",E,E,N,N],[5,"XGetAtomNames",E,E,N,N],[5,"XGetDefault",E,E,N,N],[5,"XDisplayName",E,E,N,N],[5,"XKeysymToString",E,E,N,N],[5,"XSynchronize",E,E,N,N],[5,"XSetAfterFunction",E,E,N,N],[5,"XInternAtom",E,E,N,N],[5,"XInternAtoms",E,E,N,N],[5,"XCopyColormapAndFree",E,E,N,N],[5,"XCreateColormap",E,E,N,N],[5,"XCreatePixmapCursor",E,E,N,N],[5,"XCreateGlyphCursor",E,E,N,N],[5,"XCreateFontCursor",E,E,N,N],[5,"XLoadFont",E,E,N,N],[5,"XCreateGC",E,E,N,N],[5,"XGContextFromGC",E,E,N,N],[5,"XFlushGC",E,E,N,N],[5,"XCreatePixmap",E,E,N,N],[5,"XCreateBitmapFromData",E,E,N,N],[5,"XCreatePixmapFromBitmapData",E,E,N,N],[5,"XCreateSimpleWindow",E,E,N,N],[5,"XGetSelectionOwner",E,E,N,N],[5,"XCreateWindow",E,E,N,N],[5,"XListInstalledColormaps",E,E,N,N],[5,"XListFonts",E,E,N,N],[5,"XListFontsWithInfo",E,E,N,N],[5,"XGetFontPath",E,E,N,N],[5,"XListExtensions",E,E,N,N],[5,"XListProperties",E,E,N,N],[5,"XListHosts",E,E,N,N],[5,"XKeycodeToKeysym",E,E,N,N],[5,"XLookupKeysym",E,E,N,N],[5,"XGetKeyboardMapping",E,E,N,N],[5,"XStringToKeysym",E,E,N,N],[5,"XMaxRequestSize",E,E,N,N],[5,"XExtendedMaxRequestSize",E,E,N,N],[5,"XResourceManagerString",E,E,N,N],[5,"XScreenResourceString",E,E,N,N],[5,"XDisplayMotionBufferSize",E,E,N,N],[5,"XVisualIDFromVisual",E,E,N,N],[5,"XInitThreads",E,E,N,N],[5,"XLockDisplay",E,E,N,N],[5,"XUnlockDisplay",E,E,N,N],[5,"XInitExtension",E,E,N,N],[5,"XAddExtension",E,E,N,N],[5,"XFindOnExtensionList",E,E,N,N],[5,"XEHeadOfExtensionList",E,E,N,N],[5,"XRootWindow",E,E,N,N],[5,"XDefaultRootWindow",E,E,N,N],[5,"XRootWindowOfScreen",E,E,N,N],[5,"XDefaultVisual",E,E,N,N],[5,"XDefaultVisualOfScreen",E,E,N,N],[5,"XDefaultGC",E,E,N,N],[5,"XDefaultGCOfScreen",E,E,N,N],[5,"XBlackPixel",E,E,N,N],[5,"XWhitePixel",E,E,N,N],[5,"XAllPlanes",E,E,N,N],[5,"XBlackPixelOfScreen",E,E,N,N],[5,"XWhitePixelOfScreen",E,E,N,N],[5,"XNextRequest",E,E,N,N],[5,"XLastKnownRequestProcessed",E,E,N,N],[5,"XServerVendor",E,E,N,N],[5,"XDisplayString",E,E,N,N],[5,"XDefaultColormap",E,E,N,N],[5,"XDefaultColormapOfScreen",E,E,N,N],[5,"XDisplayOfScreen",E,E,N,N],[5,"XScreenOfDisplay",E,E,N,N],[5,"XDefaultScreenOfDisplay",E,E,N,N],[5,"XEventMaskOfScreen",E,E,N,N],[5,"XScreenNumberOfScreen",E,E,N,N],[5,"XSetErrorHandler",E,E,N,N],[5,"XSetIOErrorHandler",E,E,N,N],[5,"XListPixmapFormats",E,E,N,N],[5,"XListDepths",E,E,N,N],[5,"XReconfigureWMWindow",E,E,N,N],[5,"XGetWMProtocols",E,E,N,N],[5,"XSetWMProtocols",E,E,N,N],[5,"XIconifyWindow",E,E,N,N],[5,"XWithdrawWindow",E,E,N,N],[5,"XGetCommand",E,E,N,N],[5,"XGetWMColormapWindows",E,E,N,N],[5,"XSetWMColormapWindows",E,E,N,N],[5,"XFreeStringList",E,E,N,N],[5,"XSetTransientForHint",E,E,N,N],[5,"XActivateScreenSaver",E,E,N,N],[5,"XAddHost",E,E,N,N],[5,"XAddHosts",E,E,N,N],[5,"XAddToExtensionList",E,E,N,N],[5,"XAddToSaveSet",E,E,N,N],[5,"XAllocColor",E,E,N,N],[5,"XAllocColorCells",E,E,N,N],[5,"XAllocColorPlanes",E,E,N,N],[5,"XAllocNamedColor",E,E,N,N],[5,"XAllowEvents",E,E,N,N],[5,"XAutoRepeatOff",E,E,N,N],[5,"XAutoRepeatOn",E,E,N,N],[5,"XBell",E,E,N,N],[5,"XBitmapBitOrder",E,E,N,N],[5,"XBitmapPad",E,E,N,N],[5,"XBitmapUnit",E,E,N,N],[5,"XCellsOfScreen",E,E,N,N],[5,"XChangeActivePointerGrab",E,E,N,N],[5,"XChangeGC",E,E,N,N],[5,"XChangeKeyboardControl",E,E,N,N],[5,"XChangeKeyboardMapping",E,E,N,N],[5,"XChangePointerControl",E,E,N,N],[5,"XChangeProperty",E,E,N,N],[5,"XChangeSaveSet",E,E,N,N],[5,"XChangeWindowAttributes",E,E,N,N],[5,"XCheckIfEvent",E,E,N,N],[5,"XCheckMaskEvent",E,E,N,N],[5,"XCheckTypedEvent",E,E,N,N],[5,"XCheckTypedWindowEvent",E,E,N,N],[5,"XCheckWindowEvent",E,E,N,N],[5,"XCirculateSubwindows",E,E,N,N],[5,"XCirculateSubwindowsDown",E,E,N,N],[5,"XCirculateSubwindowsUp",E,E,N,N],[5,"XClearArea",E,E,N,N],[5,"XClearWindow",E,E,N,N],[5,"XCloseDisplay",E,E,N,N],[5,"XConfigureWindow",E,E,N,N],[5,"XConnectionNumber",E,E,N,N],[5,"XConvertSelection",E,E,N,N],[5,"XCopyArea",E,E,N,N],[5,"XCopyGC",E,E,N,N],[5,"XCopyPlane",E,E,N,N],[5,"XDefaultDepth",E,E,N,N],[5,"XDefaultDepthOfScreen",E,E,N,N],[5,"XDefaultScreen",E,E,N,N],[5,"XDefineCursor",E,E,N,N],[5,"XDeleteProperty",E,E,N,N],[5,"XDestroyWindow",E,E,N,N],[5,"XDestroySubwindows",E,E,N,N],[5,"XDoesBackingStore",E,E,N,N],[5,"XDoesSaveUnders",E,E,N,N],[5,"XDisableAccessControl",E,E,N,N],[5,"XDisplayCells",E,E,N,N],[5,"XDisplayHeight",E,E,N,N],[5,"XDisplayHeightMM",E,E,N,N],[5,"XDisplayKeycodes",E,E,N,N],[5,"XDisplayPlanes",E,E,N,N],[5,"XDisplayWidth",E,E,N,N],[5,"XDisplayWidthMM",E,E,N,N],[5,"XDrawArc",E,E,N,N],[5,"XDrawArcs",E,E,N,N],[5,"XDrawImageString",E,E,N,N],[5,"XDrawImageString16",E,E,N,N],[5,"XDrawLine",E,E,N,N],[5,"XDrawLines",E,E,N,N],[5,"XDrawPoint",E,E,N,N],[5,"XDrawPoints",E,E,N,N],[5,"XDrawRectangle",E,E,N,N],[5,"XDrawRectangles",E,E,N,N],[5,"XDrawSegments",E,E,N,N],[5,"XDrawString",E,E,N,N],[5,"XDrawString16",E,E,N,N],[5,"XDrawText",E,E,N,N],[5,"XDrawText16",E,E,N,N],[5,"XEnableAccessControl",E,E,N,N],[5,"XEventsQueued",E,E,N,N],[5,"XFetchName",E,E,N,N],[5,"XFillArc",E,E,N,N],[5,"XFillArcs",E,E,N,N],[5,"XFillPolygon",E,E,N,N],[5,"XFillRectangle",E,E,N,N],[5,"XFillRectangles",E,E,N,N],[5,"XFlush",E,E,N,N],[5,"XForceScreenSaver",E,E,N,N],[5,"XFree",E,E,N,N],[5,"XFreeColormap",E,E,N,N],[5,"XFreeColors",E,E,N,N],[5,"XFreeCursor",E,E,N,N],[5,"XFreeExtensionList",E,E,N,N],[5,"XFreeFont",E,E,N,N],[5,"XFreeFontInfo",E,E,N,N],[5,"XFreeFontNames",E,E,N,N],[5,"XFreeFontPath",E,E,N,N],[5,"XFreeGC",E,E,N,N],[5,"XFreeModifiermap",E,E,N,N],[5,"XFreePixmap",E,E,N,N],[5,"XGeometry",E,E,N,N],[5,"XGetErrorDatabaseText",E,E,N,N],[5,"XGetErrorText",E,E,N,N],[5,"XGetFontProperty",E,E,N,N],[5,"XGetGCValues",E,E,N,N],[5,"XGetGeometry",E,E,N,N],[5,"XGetIconName",E,E,N,N],[5,"XGetInputFocus",E,E,N,N],[5,"XGetKeyboardControl",E,E,N,N],[5,"XGetPointerControl",E,E,N,N],[5,"XGetPointerMapping",E,E,N,N],[5,"XGetScreenSaver",E,E,N,N],[5,"XGetTransientForHint",E,E,N,N],[5,"XGetWindowProperty",E,E,N,N],[5,"XGetWindowAttributes",E,E,N,N],[5,"XGrabButton",E,E,N,N],[5,"XGrabKey",E,E,N,N],[5,"XGrabKeyboard",E,E,N,N],[5,"XGrabPointer",E,E,N,N],[5,"XGrabServer",E,E,N,N],[5,"XHeightMMOfScreen",E,E,N,N],[5,"XHeightOfScreen",E,E,N,N],[5,"XIfEvent",E,E,N,N],[5,"XImageByteOrder",E,E,N,N],[5,"XInstallColormap",E,E,N,N],[5,"XKeysymToKeycode",E,E,N,N],[5,"XKillClient",E,E,N,N],[5,"XLookupColor",E,E,N,N],[5,"XLowerWindow",E,E,N,N],[5,"XMapRaised",E,E,N,N],[5,"XMapSubwindows",E,E,N,N],[5,"XMapWindow",E,E,N,N],[5,"XMaskEvent",E,E,N,N],[5,"XMaxCmapsOfScreen",E,E,N,N],[5,"XMinCmapsOfScreen",E,E,N,N],[5,"XMoveResizeWindow",E,E,N,N],[5,"XMoveWindow",E,E,N,N],[5,"XNextEvent",E,E,N,N],[5,"XNoOp",E,E,N,N],[5,"XParseColor",E,E,N,N],[5,"XParseGeometry",E,E,N,N],[5,"XPeekEvent",E,E,N,N],[5,"XPeekIfEvent",E,E,N,N],[5,"XPending",E,E,N,N],[5,"XPlanesOfScreen",E,E,N,N],[5,"XProtocolRevision",E,E,N,N],[5,"XProtocolVersion",E,E,N,N],[5,"XPutBackEvent",E,E,N,N],[5,"XPutImage",E,E,N,N],[5,"XQLength",E,E,N,N],[5,"XQueryBestCursor",E,E,N,N],[5,"XQueryBestSize",E,E,N,N],[5,"XQueryBestStipple",E,E,N,N],[5,"XQueryBestTile",E,E,N,N],[5,"XQueryColor",E,E,N,N],[5,"XQueryColors",E,E,N,N],[5,"XQueryExtension",E,E,N,N],[5,"XQueryKeymap",E,E,N,N],[5,"XQueryPointer",E,E,N,N],[5,"XQueryTextExtents",E,E,N,N],[5,"XQueryTextExtents16",E,E,N,N],[5,"XQueryTree",E,E,N,N],[5,"XRaiseWindow",E,E,N,N],[5,"XReadBitmapFile",E,E,N,N],[5,"XReadBitmapFileData",E,E,N,N],[5,"XRebindKeysym",E,E,N,N],[5,"XRecolorCursor",E,E,N,N],[5,"XRefreshKeyboardMapping",E,E,N,N],[5,"XRemoveFromSaveSet",E,E,N,N],[5,"XRemoveHost",E,E,N,N],[5,"XRemoveHosts",E,E,N,N],[5,"XReparentWindow",E,E,N,N],[5,"XResetScreenSaver",E,E,N,N],[5,"XResizeWindow",E,E,N,N],[5,"XRestackWindows",E,E,N,N],[5,"XRotateBuffers",E,E,N,N],[5,"XRotateWindowProperties",E,E,N,N],[5,"XScreenCount",E,E,N,N],[5,"XSelectInput",E,E,N,N],[5,"XSendEvent",E,E,N,N],[5,"XSetAccessControl",E,E,N,N],[5,"XSetArcMode",E,E,N,N],[5,"XSetBackground",E,E,N,N],[5,"XSetClipMask",E,E,N,N],[5,"XSetClipOrigin",E,E,N,N],[5,"XSetClipRectangles",E,E,N,N],[5,"XSetCloseDownMode",E,E,N,N],[5,"XSetCommand",E,E,N,N],[5,"XSetDashes",E,E,N,N],[5,"XSetFillRule",E,E,N,N],[5,"XSetFillStyle",E,E,N,N],[5,"XSetFont",E,E,N,N],[5,"XSetFontPath",E,E,N,N],[5,"XSetForeground",E,E,N,N],[5,"XSetFunction",E,E,N,N],[5,"XSetGraphicsExposures",E,E,N,N],[5,"XSetIconName",E,E,N,N],[5,"XSetInputFocus",E,E,N,N],[5,"XSetLineAttributes",E,E,N,N],[5,"XSetModifierMapping",E,E,N,N],[5,"XSetPlaneMask",E,E,N,N],[5,"XSetPointerMapping",E,E,N,N],[5,"XSetScreenSaver",E,E,N,N],[5,"XSetSelectionOwner",E,E,N,N],[5,"XSetState",E,E,N,N],[5,"XSetStipple",E,E,N,N],[5,"XSetSubwindowMode",E,E,N,N],[5,"XSetTSOrigin",E,E,N,N],[5,"XSetTile",E,E,N,N],[5,"XSetWindowBackground",E,E,N,N],[5,"XSetWindowBackgroundPixmap",E,E,N,N],[5,"XSetWindowBorder",E,E,N,N],[5,"XSetWindowBorderPixmap",E,E,N,N],[5,"XSetWindowBorderWidth",E,E,N,N],[5,"XSetWindowColormap",E,E,N,N],[5,"XStoreBuffer",E,E,N,N],[5,"XStoreBytes",E,E,N,N],[5,"XStoreColor",E,E,N,N],[5,"XStoreColors",E,E,N,N],[5,"XStoreName",E,E,N,N],[5,"XStoreNamedColor",E,E,N,N],[5,"XSync",E,E,N,N],[5,"XTextExtents",E,E,N,N],[5,"XTextExtents16",E,E,N,N],[5,"XTextWidth",E,E,N,N],[5,"XTextWidth16",E,E,N,N],[5,"XTranslateCoordinates",E,E,N,N],[5,"XUndefineCursor",E,E,N,N],[5,"XUngrabButton",E,E,N,N],[5,"XUngrabKey",E,E,N,N],[5,"XUngrabKeyboard",E,E,N,N],[5,"XUngrabPointer",E,E,N,N],[5,"XUngrabServer",E,E,N,N],[5,"XUninstallColormap",E,E,N,N],[5,"XUnloadFont",E,E,N,N],[5,"XUnmapSubwindows",E,E,N,N],[5,"XUnmapWindow",E,E,N,N],[5,"XVendorRelease",E,E,N,N],[5,"XWarpPointer",E,E,N,N],[5,"XWidthMMOfScreen",E,E,N,N],[5,"XWidthOfScreen",E,E,N,N],[5,"XWindowEvent",E,E,N,N],[5,"XWriteBitmapFile",E,E,N,N],[5,"XSupportsLocale",E,E,N,N],[5,"XSetLocaleModifiers",E,E,N,N],[5,"XOpenOM",E,E,N,N],[5,"XCloseOM",E,E,N,N],[5,"XSetOMValues",E,E,N,N],[5,"XGetOMValues",E,E,N,N],[5,"XDisplayOfOM",E,E,N,N],[5,"XLocaleOfOM",E,E,N,N],[5,"XCreateOC",E,E,N,N],[5,"XDestroyOC",E,E,N,N],[5,"XOMOfOC",E,E,N,N],[5,"XSetOCValues",E,E,N,N],[5,"XGetOCValues",E,E,N,N],[5,"XCreateFontSet",E,E,N,N],[5,"XFreeFontSet",E,E,N,N],[5,"XFontsOfFontSet",E,E,N,N],[5,"XBaseFontNameListOfFontSet",E,E,N,N],[5,"XLocaleOfFontSet",E,E,N,N],[5,"XContextDependentDrawing",E,E,N,N],[5,"XDirectionalDependentDrawing",E,E,N,N],[5,"XContextualDrawing",E,E,N,N],[5,"XExtentsOfFontSet",E,E,N,N],[5,"XmbTextEscapement",E,E,N,N],[5,"XwcTextEscapement",E,E,N,N],[5,"Xutf8TextEscapement",E,E,N,N],[5,"XmbTextExtents",E,E,N,N],[5,"XwcTextExtents",E,E,N,N],[5,"Xutf8TextExtents",E,E,N,N],[5,"XmbTextPerCharExtents",E,E,N,N],[5,"XwcTextPerCharExtents",E,E,N,N],[5,"Xutf8TextPerCharExtents",E,E,N,N],[5,"XmbDrawText",E,E,N,N],[5,"XwcDrawText",E,E,N,N],[5,"Xutf8DrawText",E,E,N,N],[5,"XmbDrawString",E,E,N,N],[5,"XwcDrawString",E,E,N,N],[5,"Xutf8DrawString",E,E,N,N],[5,"XmbDrawImageString",E,E,N,N],[5,"XwcDrawImageString",E,E,N,N],[5,"Xutf8DrawImageString",E,E,N,N],[5,"XOpenIM",E,E,N,N],[5,"XCloseIM",E,E,N,N],[5,"XGetIMValues",E,E,N,N],[5,"XSetIMValues",E,E,N,N],[5,"XDisplayOfIM",E,E,N,N],[5,"XLocaleOfIM",E,E,N,N],[5,"XCreateIC",E,E,N,N],[5,"XDestroyIC",E,E,N,N],[5,"XSetICFocus",E,E,N,N],[5,"XUnsetICFocus",E,E,N,N],[5,"XwcResetIC",E,E,N,N],[5,"XmbResetIC",E,E,N,N],[5,"Xutf8ResetIC",E,E,N,N],[5,"XSetICValues",E,E,N,N],[5,"XGetICValues",E,E,N,N],[5,"XIMOfIC",E,E,N,N],[5,"XFilterEvent",E,E,N,N],[5,"XmbLookupString",E,E,N,N],[5,"XwcLookupString",E,E,N,N],[5,"Xutf8LookupString",E,E,N,N],[5,"XVaCreateNestedList",E,E,N,N],[5,"XRegisterIMInstantiateCallback",E,E,N,N],[5,"XUnregisterIMInstantiateCallback",E,E,N,N],[5,"XInternalConnectionNumbers",E,E,N,N],[5,"XProcessInternalConnection",E,E,N,N],[5,"XAddConnectionWatch",E,E,N,N],[5,"XRemoveConnectionWatch",E,E,N,N],[5,"XSetAuthorization",E,E,N,N],[5,"_Xmbtowc",E,E,N,N],[5,"_Xwctomb",E,E,N,N],[5,"XGetEventData",E,E,N,N],[5,"XFreeEventData",E,E,N,N],[5,"SDL_GetWindowWMInfo",E,"\\brief This function allows access to driver-dependent…",N,N],[5,"SDL_Vulkan_LoadLibrary",E,"\\brief Dynamically load a Vulkan loader library.",N,N],[5,"SDL_Vulkan_GetVkGetInstanceProcAddr",E,"\\brief Get the address of the \\c vkGetInstanceProcAddr…",N,N],[5,"SDL_Vulkan_UnloadLibrary",E,"\\brief Unload the Vulkan loader library previously loaded…",N,N],[5,"SDL_Vulkan_GetInstanceExtensions",E,"\\brief Get the names of the Vulkan instance extensions…",N,N],[5,"SDL_Vulkan_CreateSurface",E,"\\brief Create a Vulkan rendering surface for a window.",N,N],[5,"SDL_Vulkan_GetDrawableSize",E,R[395],N,N],[0,"mixer",E,E,N,N],[3,R[963],R[689],E,N,N],[12,"allocated",E,E,249,N],[12,"abuf",E,E,249,N],[12,"alen",E,E,249,N],[12,"volume",E,E,249,N],[3,R[983],E,E,N,N],[5,"Mix_Linked_Version",E,E,N,N],[5,"Mix_Init",E,E,N,N],[5,"Mix_Quit",E,E,N,N],[5,"Mix_OpenAudio",E,E,N,N],[5,"Mix_OpenAudioDevice",E,E,N,N],[5,"Mix_AllocateChannels",E,E,N,N],[5,"Mix_QuerySpec",E,E,N,N],[5,"Mix_LoadWAV_RW",E,E,N,N],[5,"Mix_LoadMUS",E,E,N,N],[5,"Mix_LoadMUS_RW",E,E,N,N],[5,"Mix_LoadMUSType_RW",E,E,N,N],[5,"Mix_QuickLoad_WAV",E,E,N,N],[5,"Mix_QuickLoad_RAW",E,E,N,N],[5,"Mix_FreeChunk",E,E,N,N],[5,"Mix_FreeMusic",E,E,N,N],[5,"Mix_GetNumChunkDecoders",E,E,N,N],[5,"Mix_GetChunkDecoder",E,E,N,N],[5,"Mix_HasChunkDecoder",E,E,N,N],[5,"Mix_GetNumMusicDecoders",E,E,N,N],[5,"Mix_GetMusicDecoder",E,E,N,N],[5,"Mix_HasMusicDecoder",E,E,N,N],[5,"Mix_GetMusicType",E,E,N,N],[5,"Mix_SetPostMix",E,E,N,N],[5,"Mix_HookMusic",E,E,N,N],[5,"Mix_HookMusicFinished",E,E,N,N],[5,"Mix_GetMusicHookData",E,E,N,N],[5,"Mix_ChannelFinished",E,E,N,N],[5,"Mix_RegisterEffect",E,E,N,N],[5,"Mix_UnregisterEffect",E,E,N,N],[5,"Mix_UnregisterAllEffects",E,E,N,N],[5,"Mix_SetPanning",E,E,N,N],[5,"Mix_SetPosition",E,E,N,N],[5,"Mix_SetDistance",E,E,N,N],[5,"Mix_SetReverseStereo",E,E,N,N],[5,"Mix_ReserveChannels",E,E,N,N],[5,"Mix_GroupChannel",E,E,N,N],[5,"Mix_GroupChannels",E,E,N,N],[5,"Mix_GroupAvailable",E,E,N,N],[5,"Mix_GroupCount",E,E,N,N],[5,"Mix_GroupOldest",E,E,N,N],[5,"Mix_GroupNewer",E,E,N,N],[5,"Mix_PlayChannelTimed",E,E,N,N],[5,"Mix_PlayMusic",E,E,N,N],[5,"Mix_FadeInMusic",E,E,N,N],[5,"Mix_FadeInMusicPos",E,E,N,N],[5,"Mix_FadeInChannelTimed",E,E,N,N],[5,"Mix_Volume",E,E,N,N],[5,"Mix_VolumeChunk",E,E,N,N],[5,"Mix_VolumeMusic",E,E,N,N],[5,"Mix_HaltChannel",E,E,N,N],[5,"Mix_HaltGroup",E,E,N,N],[5,"Mix_HaltMusic",E,E,N,N],[5,"Mix_ExpireChannel",E,E,N,N],[5,"Mix_FadeOutChannel",E,E,N,N],[5,"Mix_FadeOutGroup",E,E,N,N],[5,"Mix_FadeOutMusic",E,E,N,N],[5,"Mix_FadingMusic",E,E,N,N],[5,"Mix_FadingChannel",E,E,N,N],[5,"Mix_Pause",E,E,N,N],[5,"Mix_Resume",E,E,N,N],[5,"Mix_Paused",E,E,N,N],[5,"Mix_PauseMusic",E,E,N,N],[5,"Mix_ResumeMusic",E,E,N,N],[5,"Mix_RewindMusic",E,E,N,N],[5,"Mix_PausedMusic",E,E,N,N],[5,"Mix_SetMusicPosition",E,E,N,N],[5,"Mix_Playing",E,E,N,N],[5,"Mix_PlayingMusic",E,E,N,N],[5,"Mix_SetMusicCMD",E,E,N,N],[5,"Mix_SetSynchroValue",E,E,N,N],[5,"Mix_GetSynchroValue",E,E,N,N],[5,"Mix_SetSoundFonts",E,E,N,N],[5,"Mix_GetSoundFonts",E,E,N,N],[5,"Mix_EachSoundFont",E,E,N,N],[5,"Mix_GetChunk",E,E,N,N],[5,"Mix_CloseAudio",E,E,N,N],[6,R[397],E,E,N,N],[6,R[402],E,E,N,N],[6,R[401],E,E,N,N],[6,R[398],E,E,N,N],[6,R[399],E,E,N,N],[6,"__off_t",E,E,N,N],[6,R[400],E,E,N,N],[6,"Uint8",E,E,N,N],[6,"Sint16",E,E,N,N],[6,"Uint16",E,E,N,N],[6,"Uint32",E,E,N,N],[6,"Sint64",E,E,N,N],[6,"MIX_InitFlags",E,E,N,N],[6,"Mix_Fading",E,E,N,N],[6,"Mix_MusicType",E,E,N,N],[6,"Mix_Music",E,E,N,N],[6,"Mix_EffectFunc_t",E,E,N,N],[6,"Mix_EffectDone_t",E,E,N,N],[17,"MIX_MAJOR_VERSION",E,E,N,N],[17,"MIX_MINOR_VERSION",E,E,N,N],[17,"MIX_PATCHLEVEL",E,E,N,N],[17,"MIX_CHANNELS",E,E,N,N],[17,"MIX_DEFAULT_FREQUENCY",E,E,N,N],[17,"MIX_DEFAULT_FORMAT",E,E,N,N],[17,"MIX_DEFAULT_CHANNELS",E,E,N,N],[17,"MIX_MAX_VOLUME",E,E,N,N],[17,"MIX_CHANNEL_POST",E,E,N,N],[17,"MIX_EFFECTSMAXSPEED",E,E,N,N],[17,"MIX_InitFlags_MIX_INIT_FLAC",E,E,N,N],[17,"MIX_InitFlags_MIX_INIT_MOD",E,E,N,N],[17,"MIX_InitFlags_MIX_INIT_MP3",E,E,N,N],[17,"MIX_InitFlags_MIX_INIT_OGG",E,E,N,N],[17,"MIX_InitFlags_MIX_INIT_MID",E,E,N,N],[17,"MIX_InitFlags_MIX_INIT_OPUS",E,E,N,N],[17,"Mix_Fading_MIX_NO_FADING",E,E,N,N],[17,"Mix_Fading_MIX_FADING_OUT",E,E,N,N],[17,"Mix_Fading_MIX_FADING_IN",E,E,N,N],[17,"Mix_MusicType_MUS_NONE",E,E,N,N],[17,"Mix_MusicType_MUS_CMD",E,E,N,N],[17,"Mix_MusicType_MUS_WAV",E,E,N,N],[17,"Mix_MusicType_MUS_MOD",E,E,N,N],[17,"Mix_MusicType_MUS_MID",E,E,N,N],[17,"Mix_MusicType_MUS_OGG",E,E,N,N],[17,"Mix_MusicType_MUS_MP3",E,E,N,N],[17,"Mix_MusicType_MUS_MP3_MAD_UNUSED",E,E,N,N],[17,"Mix_MusicType_MUS_FLAC",E,E,N,N],[17,"Mix_MusicType_MUS_MODPLUG_UNUSED",E,E,N,N],[17,"Mix_MusicType_MUS_OPUS",E,E,N,N],[0,"image",R[396],E,N,N],[5,"IMG_Linked_Version","sdl2_sys::image",E,N,N],[5,"IMG_Init",E,E,N,N],[5,"IMG_Quit",E,E,N,N],[5,"IMG_LoadTyped_RW",E,E,N,N],[5,"IMG_Load",E,E,N,N],[5,"IMG_Load_RW",E,E,N,N],[5,"IMG_LoadTexture",E,E,N,N],[5,"IMG_LoadTexture_RW",E,E,N,N],[5,"IMG_LoadTextureTyped_RW",E,E,N,N],[5,"IMG_isICO",E,E,N,N],[5,"IMG_isCUR",E,E,N,N],[5,"IMG_isBMP",E,E,N,N],[5,"IMG_isGIF",E,E,N,N],[5,"IMG_isJPG",E,E,N,N],[5,"IMG_isLBM",E,E,N,N],[5,"IMG_isPCX",E,E,N,N],[5,"IMG_isPNG",E,E,N,N],[5,"IMG_isPNM",E,E,N,N],[5,"IMG_isSVG",E,E,N,N],[5,"IMG_isTIF",E,E,N,N],[5,"IMG_isXCF",E,E,N,N],[5,"IMG_isXPM",E,E,N,N],[5,"IMG_isXV",E,E,N,N],[5,"IMG_isWEBP",E,E,N,N],[5,"IMG_LoadICO_RW",E,E,N,N],[5,"IMG_LoadCUR_RW",E,E,N,N],[5,"IMG_LoadBMP_RW",E,E,N,N],[5,"IMG_LoadGIF_RW",E,E,N,N],[5,"IMG_LoadJPG_RW",E,E,N,N],[5,"IMG_LoadLBM_RW",E,E,N,N],[5,"IMG_LoadPCX_RW",E,E,N,N],[5,"IMG_LoadPNG_RW",E,E,N,N],[5,"IMG_LoadPNM_RW",E,E,N,N],[5,"IMG_LoadSVG_RW",E,E,N,N],[5,"IMG_LoadTGA_RW",E,E,N,N],[5,"IMG_LoadTIF_RW",E,E,N,N],[5,"IMG_LoadXCF_RW",E,E,N,N],[5,"IMG_LoadXPM_RW",E,E,N,N],[5,"IMG_LoadXV_RW",E,E,N,N],[5,"IMG_LoadWEBP_RW",E,E,N,N],[5,"IMG_ReadXPMFromArray",E,E,N,N],[5,"IMG_SavePNG",E,E,N,N],[5,"IMG_SavePNG_RW",E,E,N,N],[5,"IMG_SaveJPG",E,E,N,N],[5,"IMG_SaveJPG_RW",E,E,N,N],[6,R[397],E,E,N,N],[6,R[398],E,E,N,N],[6,R[399],E,E,N,N],[6,"__off_t",E,E,N,N],[6,R[400],E,E,N,N],[6,"Uint8",E,E,N,N],[6,"Uint32",E,E,N,N],[6,"Sint64",E,E,N,N],[6,"IMG_InitFlags",E,E,N,N],[17,"IMG_InitFlags_IMG_INIT_JPG",E,E,N,N],[17,"IMG_InitFlags_IMG_INIT_PNG",E,E,N,N],[17,"IMG_InitFlags_IMG_INIT_TIF",E,E,N,N],[17,"IMG_InitFlags_IMG_INIT_WEBP",E,E,N,N],[0,"ttf",R[396],E,N,N],[3,R[984],R[690],E,N,N],[5,"TTF_Linked_Version",E,E,N,N],[5,"TTF_ByteSwappedUNICODE",E,E,N,N],[5,"TTF_Init",E,E,N,N],[5,"TTF_OpenFont",E,E,N,N],[5,"TTF_OpenFontIndex",E,E,N,N],[5,"TTF_OpenFontRW",E,E,N,N],[5,"TTF_OpenFontIndexRW",E,E,N,N],[5,"TTF_GetFontStyle",E,E,N,N],[5,"TTF_SetFontStyle",E,E,N,N],[5,"TTF_GetFontOutline",E,E,N,N],[5,"TTF_SetFontOutline",E,E,N,N],[5,"TTF_GetFontHinting",E,E,N,N],[5,"TTF_SetFontHinting",E,E,N,N],[5,"TTF_FontHeight",E,E,N,N],[5,"TTF_FontAscent",E,E,N,N],[5,"TTF_FontDescent",E,E,N,N],[5,"TTF_FontLineSkip",E,E,N,N],[5,"TTF_GetFontKerning",E,E,N,N],[5,"TTF_SetFontKerning",E,E,N,N],[5,"TTF_FontFaces",E,E,N,N],[5,"TTF_FontFaceIsFixedWidth",E,E,N,N],[5,"TTF_FontFaceFamilyName",E,E,N,N],[5,"TTF_FontFaceStyleName",E,E,N,N],[5,"TTF_GlyphIsProvided",E,E,N,N],[5,"TTF_GlyphMetrics",E,E,N,N],[5,"TTF_SizeText",E,E,N,N],[5,"TTF_SizeUTF8",E,E,N,N],[5,"TTF_SizeUNICODE",E,E,N,N],[5,"TTF_RenderText_Solid",E,E,N,N],[5,"TTF_RenderUTF8_Solid",E,E,N,N],[5,"TTF_RenderUNICODE_Solid",E,E,N,N],[5,"TTF_RenderGlyph_Solid",E,E,N,N],[5,"TTF_RenderText_Shaded",E,E,N,N],[5,"TTF_RenderUTF8_Shaded",E,E,N,N],[5,"TTF_RenderUNICODE_Shaded",E,E,N,N],[5,"TTF_RenderGlyph_Shaded",E,E,N,N],[5,"TTF_RenderText_Blended",E,E,N,N],[5,"TTF_RenderUTF8_Blended",E,E,N,N],[5,"TTF_RenderUNICODE_Blended",E,E,N,N],[5,"TTF_RenderText_Blended_Wrapped",E,E,N,N],[5,"TTF_RenderUTF8_Blended_Wrapped",E,E,N,N],[5,"TTF_RenderUNICODE_Blended_Wrapped",E,E,N,N],[5,"TTF_RenderGlyph_Blended",E,E,N,N],[5,"TTF_CloseFont",E,E,N,N],[5,"TTF_Quit",E,E,N,N],[5,"TTF_WasInit",E,E,N,N],[5,"TTF_GetFontKerningSize",E,E,N,N],[5,"TTF_GetFontKerningSizeGlyphs",E,E,N,N],[6,R[397],E,E,N,N],[6,R[401],E,E,N,N],[6,R[398],E,E,N,N],[6,R[399],E,E,N,N],[6,"__off_t",E,E,N,N],[6,R[400],E,E,N,N],[6,"Uint8",E,E,N,N],[6,"Uint16",E,E,N,N],[6,"Uint32",E,E,N,N],[6,"Sint64",E,E,N,N],[6,"TTF_Font",E,E,N,N],[17,"TTF_MAJOR_VERSION",E,E,N,N],[17,"TTF_MINOR_VERSION",E,E,N,N],[17,"TTF_PATCHLEVEL",E,E,N,N],[17,"TTF_STYLE_NORMAL",E,E,N,N],[17,"TTF_STYLE_BOLD",E,E,N,N],[17,"TTF_STYLE_ITALIC",E,E,N,N],[17,"TTF_STYLE_UNDERLINE",E,E,N,N],[17,"TTF_STYLE_STRIKETHROUGH",E,E,N,N],[17,"TTF_HINTING_NORMAL",E,E,N,N],[17,"TTF_HINTING_LIGHT",E,E,N,N],[17,"TTF_HINTING_MONO",E,E,N,N],[17,"TTF_HINTING_NONE",E,E,N,N],[0,"gfx",R[396],E,N,N],[0,"primitives",R[403],E,N,N],[5,"pixelColor","sdl2_sys::gfx::primitives",E,N,N],[5,"pixelRGBA",E,E,N,N],[5,"hlineColor",E,E,N,N],[5,"hlineRGBA",E,E,N,N],[5,"vlineColor",E,E,N,N],[5,"vlineRGBA",E,E,N,N],[5,"rectangleColor",E,E,N,N],[5,"rectangleRGBA",E,E,N,N],[5,"roundedRectangleColor",E,E,N,N],[5,"roundedRectangleRGBA",E,E,N,N],[5,"boxColor",E,E,N,N],[5,"boxRGBA",E,E,N,N],[5,"roundedBoxColor",E,E,N,N],[5,"roundedBoxRGBA",E,E,N,N],[5,"lineColor",E,E,N,N],[5,"lineRGBA",E,E,N,N],[5,"aalineColor",E,E,N,N],[5,"aalineRGBA",E,E,N,N],[5,"thickLineColor",E,E,N,N],[5,"thickLineRGBA",E,E,N,N],[5,"circleColor",E,E,N,N],[5,"circleRGBA",E,E,N,N],[5,"arcColor",E,E,N,N],[5,"arcRGBA",E,E,N,N],[5,"aacircleColor",E,E,N,N],[5,"aacircleRGBA",E,E,N,N],[5,"filledCircleColor",E,E,N,N],[5,"filledCircleRGBA",E,E,N,N],[5,"ellipseColor",E,E,N,N],[5,"ellipseRGBA",E,E,N,N],[5,"aaellipseColor",E,E,N,N],[5,"aaellipseRGBA",E,E,N,N],[5,"filledEllipseColor",E,E,N,N],[5,"filledEllipseRGBA",E,E,N,N],[5,"pieColor",E,E,N,N],[5,"pieRGBA",E,E,N,N],[5,"filledPieColor",E,E,N,N],[5,"filledPieRGBA",E,E,N,N],[5,"trigonColor",E,E,N,N],[5,"trigonRGBA",E,E,N,N],[5,"aatrigonColor",E,E,N,N],[5,"aatrigonRGBA",E,E,N,N],[5,"filledTrigonColor",E,E,N,N],[5,"filledTrigonRGBA",E,E,N,N],[5,"polygonColor",E,E,N,N],[5,"polygonRGBA",E,E,N,N],[5,"aapolygonColor",E,E,N,N],[5,"aapolygonRGBA",E,E,N,N],[5,"filledPolygonColor",E,E,N,N],[5,"filledPolygonRGBA",E,E,N,N],[5,"texturedPolygon",E,E,N,N],[5,"bezierColor",E,E,N,N],[5,"bezierRGBA",E,E,N,N],[5,"gfxPrimitivesSetFont",E,E,N,N],[5,"gfxPrimitivesSetFontRotation",E,E,N,N],[5,"characterColor",E,E,N,N],[5,"characterRGBA",E,E,N,N],[5,"stringColor",E,E,N,N],[5,"stringRGBA",E,E,N,N],[6,R[397],E,E,N,N],[6,R[402],E,E,N,N],[6,R[398],E,E,N,N],[6,"Uint8",E,E,N,N],[6,"Sint16",E,E,N,N],[6,"Uint32",E,E,N,N],[0,"framerate",R[403],E,N,N],[3,R[964],R[691],E,N,N],[12,"framecount",E,E,250,N],[12,"rateticks",E,E,250,N],[12,"baseticks",E,E,250,N],[12,"lastticks",E,E,250,N],[12,"rate",E,E,250,N],[5,"SDL_initFramerate",E,E,N,N],[5,"SDL_setFramerate",E,E,N,N],[5,"SDL_getFramerate",E,E,N,N],[5,"SDL_getFramecount",E,E,N,N],[5,"SDL_framerateDelay",E,E,N,N],[6,R[398],E,E,N,N],[6,"Uint32",E,E,N,N],[17,"FPS_UPPER_LIMIT",E,E,N,N],[17,"FPS_LOWER_LIMIT",E,E,N,N],[17,"FPS_DEFAULT",E,E,N,N],[0,R[1658],R[403],E,N,N],[5,"SDL_imageFilterMMXdetect","sdl2_sys::gfx::imagefilter",E,N,N],[5,"SDL_imageFilterMMXoff",E,E,N,N],[5,"SDL_imageFilterMMXon",E,E,N,N],[5,"SDL_imageFilterAdd",E,E,N,N],[5,"SDL_imageFilterMean",E,E,N,N],[5,"SDL_imageFilterSub",E,E,N,N],[5,"SDL_imageFilterAbsDiff",E,E,N,N],[5,"SDL_imageFilterMult",E,E,N,N],[5,"SDL_imageFilterMultNor",E,E,N,N],[5,"SDL_imageFilterMultDivby2",E,E,N,N],[5,"SDL_imageFilterMultDivby4",E,E,N,N],[5,"SDL_imageFilterBitAnd",E,E,N,N],[5,"SDL_imageFilterBitOr",E,E,N,N],[5,"SDL_imageFilterDiv",E,E,N,N],[5,"SDL_imageFilterBitNegation",E,E,N,N],[5,"SDL_imageFilterAddByte",E,E,N,N],[5,"SDL_imageFilterAddUint",E,E,N,N],[5,"SDL_imageFilterAddByteToHalf",E,E,N,N],[5,"SDL_imageFilterSubByte",E,E,N,N],[5,"SDL_imageFilterSubUint",E,E,N,N],[5,"SDL_imageFilterShiftRight",E,E,N,N],[5,"SDL_imageFilterShiftRightUint",E,E,N,N],[5,"SDL_imageFilterMultByByte",E,E,N,N],[5,"SDL_imageFilterShiftRightAndMultByByte",E,E,N,N],[5,"SDL_imageFilterShiftLeftByte",E,E,N,N],[5,"SDL_imageFilterShiftLeftUint",E,E,N,N],[5,"SDL_imageFilterShiftLeft",E,E,N,N],[5,"SDL_imageFilterBinarizeUsingThreshold",E,E,N,N],[5,"SDL_imageFilterClipToRange",E,E,N,N],[5,"SDL_imageFilterNormalizeLinear",E,E,N,N],[0,"rotozoom",R[403],E,N,N],[5,"rotozoomSurface","sdl2_sys::gfx::rotozoom",E,N,N],[5,"rotozoomSurfaceXY",E,E,N,N],[5,"rotozoomSurfaceSize",E,E,N,N],[5,"rotozoomSurfaceSizeXY",E,E,N,N],[5,"zoomSurface",E,E,N,N],[5,"zoomSurfaceSize",E,E,N,N],[5,"shrinkSurface",E,E,N,N],[5,"rotateSurface90Degrees",E,E,N,N],[6,R[397],E,E,N,N],[6,R[398],E,E,N,N],[6,"Uint8",E,E,N,N],[6,"Uint32",E,E,N,N],[6,"wchar_t",R[396],E,N,N],[6,"va_list",E,E,N,N],[6,"__gnuc_va_list",E,E,N,N],[6,"__u_char",E,E,N,N],[6,"__u_short",E,E,N,N],[6,"__u_int",E,E,N,N],[6,"__u_long",E,E,N,N],[6,"__int8_t",E,E,N,N],[6,R[397],E,E,N,N],[6,R[402],E,E,N,N],[6,R[401],E,E,N,N],[6,"__int32_t",E,E,N,N],[6,R[398],E,E,N,N],[6,R[399],E,E,N,N],[6,"__uint64_t",E,E,N,N],[6,"__int_least8_t",E,E,N,N],[6,"__uint_least8_t",E,E,N,N],[6,"__int_least16_t",E,E,N,N],[6,"__uint_least16_t",E,E,N,N],[6,"__int_least32_t",E,E,N,N],[6,"__uint_least32_t",E,E,N,N],[6,"__int_least64_t",E,E,N,N],[6,"__uint_least64_t",E,E,N,N],[6,"__quad_t",E,E,N,N],[6,"__u_quad_t",E,E,N,N],[6,"__intmax_t",E,E,N,N],[6,"__uintmax_t",E,E,N,N],[6,"__dev_t",E,E,N,N],[6,"__uid_t",E,E,N,N],[6,"__gid_t",E,E,N,N],[6,"__ino_t",E,E,N,N],[6,"__ino64_t",E,E,N,N],[6,"__mode_t",E,E,N,N],[6,"__nlink_t",E,E,N,N],[6,"__off_t",E,E,N,N],[6,R[400],E,E,N,N],[6,"__pid_t",E,E,N,N],[6,"__clock_t",E,E,N,N],[6,"__rlim_t",E,E,N,N],[6,"__rlim64_t",E,E,N,N],[6,"__id_t",E,E,N,N],[6,"__time_t",E,E,N,N],[6,"__useconds_t",E,E,N,N],[6,"__suseconds_t",E,E,N,N],[6,"__daddr_t",E,E,N,N],[6,"__key_t",E,E,N,N],[6,"__clockid_t",E,E,N,N],[6,"__timer_t",E,E,N,N],[6,"__blksize_t",E,E,N,N],[6,"__blkcnt_t",E,E,N,N],[6,"__blkcnt64_t",E,E,N,N],[6,"__fsblkcnt_t",E,E,N,N],[6,"__fsblkcnt64_t",E,E,N,N],[6,"__fsfilcnt_t",E,E,N,N],[6,"__fsfilcnt64_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"__ssize_t",E,E,N,N],[6,"__syscall_slong_t",E,E,N,N],[6,"__syscall_ulong_t",E,E,N,N],[6,"__loff_t",E,E,N,N],[6,"__caddr_t",E,E,N,N],[6,"__intptr_t",E,E,N,N],[6,"__socklen_t",E,E,N,N],[6,"__sig_atomic_t",E,E,N,N],[6,"int_least8_t",E,E,N,N],[6,"int_least16_t",E,E,N,N],[6,"int_least32_t",E,E,N,N],[6,"int_least64_t",E,E,N,N],[6,"uint_least8_t",E,E,N,N],[6,"uint_least16_t",E,E,N,N],[6,"uint_least32_t",E,E,N,N],[6,"uint_least64_t",E,E,N,N],[6,"int_fast8_t",E,E,N,N],[6,"int_fast16_t",E,E,N,N],[6,"int_fast32_t",E,E,N,N],[6,"int_fast64_t",E,E,N,N],[6,"uint_fast8_t",E,E,N,N],[6,"uint_fast16_t",E,E,N,N],[6,"uint_fast32_t",E,E,N,N],[6,"uint_fast64_t",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,R[404],E,E,N,N],[6,"Sint8",E,E,N,N],[6,"Uint8",E,E,N,N],[6,"Sint16",E,E,N,N],[6,"Uint16",E,E,N,N],[6,"Sint32",E,E,N,N],[6,"Uint32",E,E,N,N],[6,"Sint64",E,E,N,N],[6,"Uint64",E,E,N,N],[6,"SDL_compile_time_assert_uint8",E,E,N,N],[6,"SDL_compile_time_assert_sint8",E,E,N,N],[6,"SDL_compile_time_assert_uint16",E,E,N,N],[6,"SDL_compile_time_assert_sint16",E,E,N,N],[6,"SDL_compile_time_assert_uint32",E,E,N,N],[6,"SDL_compile_time_assert_sint32",E,E,N,N],[6,"SDL_compile_time_assert_uint64",E,E,N,N],[6,"SDL_compile_time_assert_sint64",E,E,N,N],[6,"SDL_compile_time_assert_enum",E,E,N,N],[6,"SDL_malloc_func",E,E,N,N],[6,"SDL_calloc_func",E,E,N,N],[6,"SDL_realloc_func",E,E,N,N],[6,"SDL_free_func",E,E,N,N],[6,"SDL_iconv_t",E,E,N,N],[6,"SDL_AssertionHandler",E,E,N,N],[6,"SDL_SpinLock",E,E,N,N],[6,"SDL_sem",E,E,N,N],[6,"SDL_threadID",E,E,N,N],[6,"SDL_TLSID",E,E,N,N],[6,"SDL_ThreadFunction",E,"The function passed to SDL_CreateThread(). It is passed a…",N,N],[6,"SDL_AudioFormat",E,"\\brief Audio format flags.",N,N],[6,"SDL_AudioCallback",E,"This function is called when the audio device needs more…",N,N],[6,"SDL_AudioFilter",E,E,N,N],[6,"SDL_AudioDeviceID",E,"SDL Audio Device IDs.",N,N],[6,"SDL_AudioStream",E,E,N,N],[6,"__m64",E,E,N,N],[6,"__v1di",E,E,N,N],[6,"__v2si",E,E,N,N],[6,"__v4hi",E,E,N,N],[6,"__v8qi",E,E,N,N],[6,"__v4si",E,E,N,N],[6,"__v4sf",E,E,N,N],[6,"__m128",E,E,N,N],[6,"__v4su",E,E,N,N],[6,"_Float32",E,E,N,N],[6,"_Float64",E,E,N,N],[6,"_Float32x",E,E,N,N],[6,"_Float64x",E,E,N,N],[6,"u_char",E,E,N,N],[6,"u_short",E,E,N,N],[6,"u_int",E,E,N,N],[6,"u_long",E,E,N,N],[6,"quad_t",E,E,N,N],[6,"u_quad_t",E,E,N,N],[6,"fsid_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"daddr_t",E,E,N,N],[6,"caddr_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,R[405],E,E,N,N],[6,"time_t",E,E,N,N],[6,"timer_t",E,E,N,N],[6,"ulong",E,E,N,N],[6,"ushort",E,E,N,N],[6,"uint",E,E,N,N],[6,"u_int8_t",E,E,N,N],[6,"u_int16_t",E,E,N,N],[6,"u_int32_t",E,E,N,N],[6,"u_int64_t",E,E,N,N],[6,"register_t",E,E,N,N],[6,"sigset_t",E,E,N,N],[6,R[406],E,E,N,N],[6,"__fd_mask",E,E,N,N],[6,"fd_mask",E,E,N,N],[6,R[407],E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,R[408],E,E,N,N],[6,R[409],E,E,N,N],[6,"__pthread_list_t",E,E,N,N],[6,R[410],E,E,N,N],[6,R[411],E,E,N,N],[6,"pthread_once_t",E,E,N,N],[6,"pthread_spinlock_t",E,E,N,N],[6,"__compar_fn_t",E,E,N,N],[6,"__m128d",E,E,N,N],[6,"__m128i",E,E,N,N],[6,"__v2df",E,E,N,N],[6,"__v2di",E,E,N,N],[6,"__v8hi",E,E,N,N],[6,"__v16qi",E,E,N,N],[6,"__v2du",E,E,N,N],[6,"__v8hu",E,E,N,N],[6,"__v16qu",E,E,N,N],[6,"__v16qs",E,E,N,N],[6,"SDL_blit",E,"\\brief The type of function used for surface blitting…",N,N],[6,"SDL_GLContext",E,"\\brief An opaque handle to an OpenGL context.",N,N],[6,"SDL_HitTest",E,"\\brief Callback used for hit-testing.",N,N],[6,"SDL_Keycode",E,"\\brief The SDL virtual key representation.",N,N],[6,"SDL_Joystick",E,E,N,N],[6,"SDL_JoystickID",E,"This is a unique ID for a joystick for the time it is…",N,N],[6,"SDL_GameController",E,E,N,N],[6,"SDL_TouchID",E,E,N,N],[6,"SDL_FingerID",E,E,N,N],[6,"SDL_GestureID",E,E,N,N],[6,"SDL_EventFilter",E,E,N,N],[6,"SDL_Haptic",E,E,N,N],[6,"SDL_HintCallback",E,"\\brief type definition of the hint callback function.",N,N],[6,"SDL_LogOutputFunction",E,"\\brief The prototype for the log output function",N,N],[6,"SDL_Sensor",E,E,N,N],[6,"SDL_SensorID",E,"This is a unique ID for a sensor for the time it is…",N,N],[6,"SDL_TimerCallback",E,"Function prototype for the timer callback function.",N,N],[6,"SDL_TimerID",E,"Definition of the timer ID type.",N,N],[6,"XID",E,E,N,N],[6,"Mask",E,E,N,N],[6,"Atom",E,E,N,N],[6,"VisualID",E,E,N,N],[6,"Time",E,E,N,N],[6,"Window",E,E,N,N],[6,"Drawable",E,E,N,N],[6,"Font",E,E,N,N],[6,"Pixmap",E,E,N,N],[6,"Cursor",E,E,N,N],[6,"Colormap",E,E,N,N],[6,"GContext",E,E,N,N],[6,"KeySym",E,E,N,N],[6,"KeyCode",E,E,N,N],[6,"XPointer",E,E,N,N],[6,"XExtData",E,E,N,N],[6,"GC",E,E,N,N],[6,"XImage",E,E,N,N],[6,"Display",E,E,N,N],[6,"_XPrivDisplay",E,E,N,N],[6,"XKeyPressedEvent",E,E,N,N],[6,"XKeyReleasedEvent",E,E,N,N],[6,"XButtonPressedEvent",E,E,N,N],[6,"XButtonReleasedEvent",E,E,N,N],[6,"XPointerMovedEvent",E,E,N,N],[6,"XEnterWindowEvent",E,E,N,N],[6,"XLeaveWindowEvent",E,E,N,N],[6,"XFocusInEvent",E,E,N,N],[6,"XFocusOutEvent",E,E,N,N],[6,"XEvent",E,E,N,N],[6,"XOM",E,E,N,N],[6,"XOC",E,E,N,N],[6,"XFontSet",E,E,N,N],[6,"XIM",E,E,N,N],[6,"XIC",E,E,N,N],[6,"XIMProc",E,E,N,N],[6,"XICProc",E,E,N,N],[6,"XIDProc",E,E,N,N],[6,"XIMStyle",E,E,N,N],[6,"XVaNestedList",E,E,N,N],[6,"XIMFeedback",E,E,N,N],[6,"XIMText",E,E,N,N],[6,"XIMPreeditState",E,E,N,N],[6,"XIMPreeditStateNotifyCallbackStruct",E,E,N,N],[6,"XIMResetState",E,E,N,N],[6,"XIMStringConversionFeedback",E,E,N,N],[6,"XIMStringConversionText",E,E,N,N],[6,"XIMStringConversionPosition",E,E,N,N],[6,"XIMStringConversionType",E,E,N,N],[6,"XIMStringConversionOperation",E,E,N,N],[6,"XIMStringConversionCallbackStruct",E,E,N,N],[6,"XIMPreeditDrawCallbackStruct",E,E,N,N],[6,"XIMPreeditCaretCallbackStruct",E,E,N,N],[6,"XIMStatusDrawCallbackStruct",E,E,N,N],[6,"XIMHotKeyTrigger",E,E,N,N],[6,"XIMHotKeyTriggers",E,E,N,N],[6,"XIMHotKeyState",E,E,N,N],[6,"XErrorHandler",E,E,N,N],[6,"XIOErrorHandler",E,E,N,N],[6,"XConnectionWatchProc",E,E,N,N],[6,"SDL_vulkanInstance",E,E,N,N],[6,"SDL_vulkanSurface",E,E,N,N],[6,"VkInstance",E,E,N,N],[6,R[1659],E,E,N,N],[6,"__builtin_va_list",E,E,N,N],[17,"__LINUX__",E,E,N,N],[17,"HAVE_STDARG_H",E,E,N,N],[17,"HAVE_STDDEF_H",E,E,N,N],[17,"HAVE_STDINT_H",E,E,N,N],[17,"HAVE_GCC_SYNC_LOCK_TEST_AND_SET",E,E,N,N],[17,"SDL_AUDIO_DRIVER_DUMMY",E,E,N,N],[17,"SDL_JOYSTICK_DISABLED",E,E,N,N],[17,"SDL_HAPTIC_DISABLED",E,E,N,N],[17,"SDL_SENSOR_DISABLED",E,E,N,N],[17,"SDL_LOADSO_DISABLED",E,E,N,N],[17,"SDL_THREADS_DISABLED",E,E,N,N],[17,"SDL_TIMERS_DISABLED",E,E,N,N],[17,"SDL_VIDEO_DRIVER_DUMMY",E,E,N,N],[17,"SDL_FILESYSTEM_DUMMY",E,E,N,N],[17,"__GNUC_VA_LIST",E,E,N,N],[17,"_STDINT_H",E,E,N,N],[17,"_FEATURES_H",E,E,N,N],[17,"_DEFAULT_SOURCE",E,E,N,N],[17,"__USE_ISOC11",E,E,N,N],[17,"__USE_ISOC99",E,E,N,N],[17,"__USE_ISOC95",E,E,N,N],[17,"__USE_POSIX_IMPLICITLY",E,E,N,N],[17,"_POSIX_SOURCE",E,E,N,N],[17,"_POSIX_C_SOURCE",E,E,N,N],[17,"__USE_POSIX",E,E,N,N],[17,"__USE_POSIX2",E,E,N,N],[17,"__USE_POSIX199309",E,E,N,N],[17,"__USE_POSIX199506",E,E,N,N],[17,"__USE_XOPEN2K",E,E,N,N],[17,"__USE_XOPEN2K8",E,E,N,N],[17,"_ATFILE_SOURCE",E,E,N,N],[17,"__USE_MISC",E,E,N,N],[17,"__USE_ATFILE",E,E,N,N],[17,"__USE_FORTIFY_LEVEL",E,E,N,N],[17,"__GLIBC_USE_DEPRECATED_GETS",E,E,N,N],[17,"_STDC_PREDEF_H",E,E,N,N],[17,"__STDC_IEC_559__",E,E,N,N],[17,"__STDC_IEC_559_COMPLEX__",E,E,N,N],[17,"__STDC_ISO_10646__",E,E,N,N],[17,"__GNU_LIBRARY__",E,E,N,N],[17,"__GLIBC__",E,E,N,N],[17,"__GLIBC_MINOR__",E,E,N,N],[17,"_SYS_CDEFS_H",E,E,N,N],[17,"__glibc_c99_flexarr_available",E,E,N,N],[17,"__WORDSIZE",E,E,N,N],[17,"__WORDSIZE_TIME64_COMPAT32",E,E,N,N],[17,"__SYSCALL_WORDSIZE",E,E,N,N],[17,"__HAVE_GENERIC_SELECTION",E,E,N,N],[17,"__GLIBC_USE_LIB_EXT2",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_BFP_EXT",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT",E,E,N,N],[17,"_BITS_TYPES_H",E,E,N,N],[17,"_BITS_TYPESIZES_H",E,E,N,N],[17,"__OFF_T_MATCHES_OFF64_T",E,E,N,N],[17,"__INO_T_MATCHES_INO64_T",E,E,N,N],[17,"__RLIM_T_MATCHES_RLIM64_T",E,E,N,N],[17,"__FD_SETSIZE",E,E,N,N],[17,"_BITS_WCHAR_H",E,E,N,N],[17,"_BITS_STDINT_INTN_H",E,E,N,N],[17,"_BITS_STDINT_UINTN_H",E,E,N,N],[17,"INT8_MIN",E,E,N,N],[17,"INT16_MIN",E,E,N,N],[17,"INT32_MIN",E,E,N,N],[17,"INT8_MAX",E,E,N,N],[17,"INT16_MAX",E,E,N,N],[17,"INT32_MAX",E,E,N,N],[17,"UINT8_MAX",E,E,N,N],[17,"UINT16_MAX",E,E,N,N],[17,"UINT32_MAX",E,E,N,N],[17,"INT_LEAST8_MIN",E,E,N,N],[17,"INT_LEAST16_MIN",E,E,N,N],[17,"INT_LEAST32_MIN",E,E,N,N],[17,"INT_LEAST8_MAX",E,E,N,N],[17,"INT_LEAST16_MAX",E,E,N,N],[17,"INT_LEAST32_MAX",E,E,N,N],[17,"UINT_LEAST8_MAX",E,E,N,N],[17,"UINT_LEAST16_MAX",E,E,N,N],[17,"UINT_LEAST32_MAX",E,E,N,N],[17,"INT_FAST8_MIN",E,E,N,N],[17,"INT_FAST16_MIN",E,E,N,N],[17,"INT_FAST32_MIN",E,E,N,N],[17,"INT_FAST8_MAX",E,E,N,N],[17,"INT_FAST16_MAX",E,E,N,N],[17,"INT_FAST32_MAX",E,E,N,N],[17,"UINT_FAST8_MAX",E,E,N,N],[17,"UINT_FAST16_MAX",E,E,N,N],[17,"UINT_FAST32_MAX",E,E,N,N],[17,"INTPTR_MIN",E,E,N,N],[17,"INTPTR_MAX",E,E,N,N],[17,"UINTPTR_MAX",E,E,N,N],[17,"PTRDIFF_MIN",E,E,N,N],[17,"PTRDIFF_MAX",E,E,N,N],[17,"SIG_ATOMIC_MIN",E,E,N,N],[17,"SIG_ATOMIC_MAX",E,E,N,N],[17,"SIZE_MAX",E,E,N,N],[17,"WINT_MIN",E,E,N,N],[17,"WINT_MAX",E,E,N,N],[17,"SDL_PRIs64",E,E,N,N],[17,"SDL_PRIu64",E,E,N,N],[17,"SDL_PRIx64",E,E,N,N],[17,"SDL_PRIX64",E,E,N,N],[17,"M_PI",E,E,N,N],[17,"SDL_ASSERT_LEVEL",E,E,N,N],[17,"SDL_NULL_WHILE_LOOP_CONDITION",E,E,N,N],[17,"SDL_LIL_ENDIAN",E,E,N,N],[17,"SDL_BIG_ENDIAN",E,E,N,N],[17,"_ENDIAN_H",E,E,N,N],[17,"__LITTLE_ENDIAN",E,E,N,N],[17,"__BIG_ENDIAN",E,E,N,N],[17,"__PDP_ENDIAN",E,E,N,N],[17,"__BYTE_ORDER",E,E,N,N],[17,"__FLOAT_WORD_ORDER",E,E,N,N],[17,"LITTLE_ENDIAN",E,E,N,N],[17,"BIG_ENDIAN",E,E,N,N],[17,"PDP_ENDIAN",E,E,N,N],[17,"BYTE_ORDER",E,E,N,N],[17,"_BITS_BYTESWAP_H",E,E,N,N],[17,"_BITS_UINTN_IDENTITY_H",E,E,N,N],[17,"SDL_BYTEORDER",E,E,N,N],[17,"SDL_MUTEX_TIMEDOUT",E,E,N,N],[17,"SDL_RWOPS_UNKNOWN",E,E,N,N],[17,"SDL_RWOPS_WINFILE",E,E,N,N],[17,"SDL_RWOPS_STDFILE",E,E,N,N],[17,"SDL_RWOPS_JNIFILE",E,E,N,N],[17,"SDL_RWOPS_MEMORY",E,E,N,N],[17,"SDL_RWOPS_MEMORY_RO",E,E,N,N],[17,"RW_SEEK_SET",E,E,N,N],[17,"RW_SEEK_CUR",E,E,N,N],[17,"RW_SEEK_END",E,E,N,N],[17,"SDL_AUDIO_MASK_BITSIZE",E,E,N,N],[17,"SDL_AUDIO_MASK_DATATYPE",E,E,N,N],[17,"SDL_AUDIO_MASK_ENDIAN",E,E,N,N],[17,"SDL_AUDIO_MASK_SIGNED",E,E,N,N],[17,"AUDIO_U8",E,E,N,N],[17,"AUDIO_S8",E,E,N,N],[17,R[1660],E,E,N,N],[17,R[1661],E,E,N,N],[17,R[1662],E,E,N,N],[17,R[1663],E,E,N,N],[17,"AUDIO_U16",E,E,N,N],[17,"AUDIO_S16",E,E,N,N],[17,R[1664],E,E,N,N],[17,R[1665],E,E,N,N],[17,"AUDIO_S32",E,E,N,N],[17,R[1666],E,E,N,N],[17,R[1667],E,E,N,N],[17,"AUDIO_F32",E,E,N,N],[17,R[1668],E,E,N,N],[17,R[1669],E,E,N,N],[17,R[1670],E,E,N,N],[17,R[1671],E,E,N,N],[17,"SDL_AUDIO_ALLOW_FREQUENCY_CHANGE",E,E,N,N],[17,"SDL_AUDIO_ALLOW_FORMAT_CHANGE",E,E,N,N],[17,"SDL_AUDIO_ALLOW_CHANNELS_CHANGE",E,E,N,N],[17,"SDL_AUDIO_ALLOW_SAMPLES_CHANGE",E,E,N,N],[17,"SDL_AUDIO_ALLOW_ANY_CHANGE",E,E,N,N],[17,"SDL_AUDIOCVT_MAX_FILTERS",E,E,N,N],[17,"SDL_MIX_MAXVOLUME",E,E,N,N],[17,"_STDLIB_H",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,R[412],E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,R[413],E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"__W_CONTINUED",E,E,N,N],[17,"__WCOREFLAG",E,E,N,N],[17,"__HAVE_FLOAT128",E,E,N,N],[17,"__HAVE_DISTINCT_FLOAT128",E,E,N,N],[17,"__HAVE_FLOAT64X",E,E,N,N],[17,"__HAVE_FLOAT64X_LONG_DOUBLE",E,E,N,N],[17,"__HAVE_FLOAT16",E,E,N,N],[17,"__HAVE_FLOAT32",E,E,N,N],[17,"__HAVE_FLOAT64",E,E,N,N],[17,"__HAVE_FLOAT32X",E,E,N,N],[17,"__HAVE_FLOAT128X",E,E,N,N],[17,"__HAVE_DISTINCT_FLOAT16",E,E,N,N],[17,"__HAVE_DISTINCT_FLOAT32",E,E,N,N],[17,"__HAVE_DISTINCT_FLOAT64",E,E,N,N],[17,"__HAVE_DISTINCT_FLOAT32X",E,E,N,N],[17,"__HAVE_DISTINCT_FLOAT64X",E,E,N,N],[17,"__HAVE_DISTINCT_FLOAT128X",E,E,N,N],[17,"__HAVE_FLOATN_NOT_TYPEDEF",E,E,N,N],[17,"__ldiv_t_defined",E,E,N,N],[17,"__lldiv_t_defined",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,R[414],E,E,N,N],[17,R[415],E,E,N,N],[17,"_SYS_TYPES_H",E,E,N,N],[17,"__clock_t_defined",E,E,N,N],[17,"__clockid_t_defined",E,E,N,N],[17,"__time_t_defined",E,E,N,N],[17,"__timer_t_defined",E,E,N,N],[17,"__BIT_TYPES_DEFINED__",E,E,N,N],[17,"_SYS_SELECT_H",E,E,N,N],[17,"__FD_ZERO_STOS",E,E,N,N],[17,"__sigset_t_defined",E,E,N,N],[17,"__timeval_defined",E,E,N,N],[17,"_STRUCT_TIMESPEC",E,E,N,N],[17,R[416],E,E,N,N],[17,"_BITS_PTHREADTYPES_COMMON_H",E,E,N,N],[17,"_THREAD_SHARED_TYPES_H",E,E,N,N],[17,"_BITS_PTHREADTYPES_ARCH_H",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_ATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_BARRIER_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_BARRIERATTR_T",E,E,N,N],[17,"__PTHREAD_MUTEX_LOCK_ELISION",E,E,N,N],[17,"__PTHREAD_MUTEX_NUSERS_AFTER_KIND",E,E,N,N],[17,"__PTHREAD_MUTEX_USE_UNION",E,E,N,N],[17,"__PTHREAD_RWLOCK_INT_FLAGS_SHARED",E,E,N,N],[17,"__PTHREAD_MUTEX_HAVE_PREV",E,E,N,N],[17,"__have_pthread_attr_t",E,E,N,N],[17,"_ALLOCA_H",E,E,N,N],[17,"_MM_HINT_ET0",E,E,N,N],[17,"_MM_HINT_ET1",E,E,N,N],[17,"_MM_HINT_T0",E,E,N,N],[17,"_MM_HINT_T1",E,E,N,N],[17,"_MM_HINT_T2",E,E,N,N],[17,"_MM_HINT_NTA",E,E,N,N],[17,"_MM_EXCEPT_INVALID",E,E,N,N],[17,"_MM_EXCEPT_DENORM",E,E,N,N],[17,"_MM_EXCEPT_DIV_ZERO",E,E,N,N],[17,"_MM_EXCEPT_OVERFLOW",E,E,N,N],[17,"_MM_EXCEPT_UNDERFLOW",E,E,N,N],[17,"_MM_EXCEPT_INEXACT",E,E,N,N],[17,"_MM_EXCEPT_MASK",E,E,N,N],[17,"_MM_MASK_INVALID",E,E,N,N],[17,"_MM_MASK_DENORM",E,E,N,N],[17,"_MM_MASK_DIV_ZERO",E,E,N,N],[17,"_MM_MASK_OVERFLOW",E,E,N,N],[17,"_MM_MASK_UNDERFLOW",E,E,N,N],[17,"_MM_MASK_INEXACT",E,E,N,N],[17,"_MM_MASK_MASK",E,E,N,N],[17,"_MM_ROUND_NEAREST",E,E,N,N],[17,"_MM_ROUND_DOWN",E,E,N,N],[17,"_MM_ROUND_UP",E,E,N,N],[17,"_MM_ROUND_TOWARD_ZERO",E,E,N,N],[17,"_MM_ROUND_MASK",E,E,N,N],[17,"_MM_FLUSH_ZERO_MASK",E,E,N,N],[17,"_MM_FLUSH_ZERO_ON",E,E,N,N],[17,"_MM_FLUSH_ZERO_OFF",E,E,N,N],[17,"_MM_DENORMALS_ZERO_ON",E,E,N,N],[17,"_MM_DENORMALS_ZERO_OFF",E,E,N,N],[17,"_MM_DENORMALS_ZERO_MASK",E,E,N,N],[17,"SDL_CACHELINE_SIZE",E,E,N,N],[17,"SDL_ALPHA_OPAQUE",E,E,N,N],[17,"SDL_ALPHA_TRANSPARENT",E,E,N,N],[17,"SDL_SWSURFACE",E,E,N,N],[17,"SDL_PREALLOC",E,E,N,N],[17,"SDL_RLEACCEL",E,E,N,N],[17,"SDL_DONTFREE",E,E,N,N],[17,"SDL_WINDOWPOS_UNDEFINED_MASK",E,E,N,N],[17,"SDL_WINDOWPOS_CENTERED_MASK",E,E,N,N],[17,"SDLK_SCANCODE_MASK",E,E,N,N],[17,"SDL_BUTTON_LEFT",E,E,N,N],[17,"SDL_BUTTON_MIDDLE",E,E,N,N],[17,"SDL_BUTTON_RIGHT",E,E,N,N],[17,"SDL_BUTTON_X1",E,E,N,N],[17,"SDL_BUTTON_X2",E,E,N,N],[17,"SDL_JOYSTICK_AXIS_MAX",E,E,N,N],[17,"SDL_JOYSTICK_AXIS_MIN",E,E,N,N],[17,"SDL_HAT_CENTERED",E,E,N,N],[17,"SDL_HAT_UP",E,E,N,N],[17,"SDL_HAT_RIGHT",E,E,N,N],[17,"SDL_HAT_DOWN",E,E,N,N],[17,"SDL_HAT_LEFT",E,E,N,N],[17,"SDL_HAT_RIGHTUP",E,E,N,N],[17,"SDL_HAT_RIGHTDOWN",E,E,N,N],[17,"SDL_HAT_LEFTUP",E,E,N,N],[17,"SDL_HAT_LEFTDOWN",E,E,N,N],[17,"SDL_RELEASED",E,E,N,N],[17,"SDL_PRESSED",E,E,N,N],[17,"SDL_TEXTEDITINGEVENT_TEXT_SIZE",E,E,N,N],[17,"SDL_TEXTINPUTEVENT_TEXT_SIZE",E,E,N,N],[17,"SDL_QUERY",E,E,N,N],[17,"SDL_IGNORE",E,E,N,N],[17,"SDL_DISABLE",E,E,N,N],[17,"SDL_ENABLE",E,E,N,N],[17,"SDL_HAPTIC_CONSTANT",E,E,N,N],[17,"SDL_HAPTIC_SINE",E,E,N,N],[17,"SDL_HAPTIC_LEFTRIGHT",E,E,N,N],[17,"SDL_HAPTIC_TRIANGLE",E,E,N,N],[17,"SDL_HAPTIC_SAWTOOTHUP",E,E,N,N],[17,"SDL_HAPTIC_SAWTOOTHDOWN",E,E,N,N],[17,"SDL_HAPTIC_RAMP",E,E,N,N],[17,"SDL_HAPTIC_SPRING",E,E,N,N],[17,"SDL_HAPTIC_DAMPER",E,E,N,N],[17,"SDL_HAPTIC_INERTIA",E,E,N,N],[17,"SDL_HAPTIC_FRICTION",E,E,N,N],[17,"SDL_HAPTIC_CUSTOM",E,E,N,N],[17,"SDL_HAPTIC_GAIN",E,E,N,N],[17,"SDL_HAPTIC_AUTOCENTER",E,E,N,N],[17,"SDL_HAPTIC_STATUS",E,E,N,N],[17,"SDL_HAPTIC_PAUSE",E,E,N,N],[17,"SDL_HAPTIC_POLAR",E,E,N,N],[17,"SDL_HAPTIC_CARTESIAN",E,E,N,N],[17,"SDL_HAPTIC_SPHERICAL",E,E,N,N],[17,"SDL_HAPTIC_INFINITY",E,E,N,N],[17,"SDL_HINT_FRAMEBUFFER_ACCELERATION",E,E,N,N],[17,"SDL_HINT_RENDER_DRIVER",E,E,N,N],[17,"SDL_HINT_RENDER_OPENGL_SHADERS",E,E,N,N],[17,"SDL_HINT_RENDER_DIRECT3D_THREADSAFE",E,E,N,N],[17,"SDL_HINT_RENDER_DIRECT3D11_DEBUG",E,E,N,N],[17,"SDL_HINT_RENDER_LOGICAL_SIZE_MODE",E,E,N,N],[17,"SDL_HINT_RENDER_SCALE_QUALITY",E,E,N,N],[17,"SDL_HINT_RENDER_VSYNC",E,E,N,N],[17,"SDL_HINT_VIDEO_ALLOW_SCREENSAVER",E,E,N,N],[17,"SDL_HINT_VIDEO_X11_XVIDMODE",E,E,N,N],[17,"SDL_HINT_VIDEO_X11_XINERAMA",E,E,N,N],[17,"SDL_HINT_VIDEO_X11_XRANDR",E,E,N,N],[17,"SDL_HINT_VIDEO_X11_NET_WM_PING",E,E,N,N],[17,"SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR",E,E,N,N],[17,"SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN",E,E,N,N],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON",E,E,N,N],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL",E,E,N,N],[17,"SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP",E,E,N,N],[17,"SDL_HINT_GRAB_KEYBOARD",E,E,N,N],[17,"SDL_HINT_MOUSE_DOUBLE_CLICK_TIME",E,E,N,N],[17,"SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS",E,E,N,N],[17,"SDL_HINT_MOUSE_NORMAL_SPEED_SCALE",E,E,N,N],[17,"SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE",E,E,N,N],[17,"SDL_HINT_MOUSE_RELATIVE_MODE_WARP",E,E,N,N],[17,"SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH",E,E,N,N],[17,"SDL_HINT_TOUCH_MOUSE_EVENTS",E,E,N,N],[17,"SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS",E,E,N,N],[17,"SDL_HINT_IDLE_TIMER_DISABLED",E,E,N,N],[17,"SDL_HINT_ORIENTATIONS",E,E,N,N],[17,"SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS",E,E,N,N],[17,"SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION",E,E,N,N],[17,"SDL_HINT_IOS_HIDE_HOME_INDICATOR",E,E,N,N],[17,"SDL_HINT_ACCELEROMETER_AS_JOYSTICK",E,E,N,N],[17,"SDL_HINT_TV_REMOTE_AS_JOYSTICK",E,E,N,N],[17,"SDL_HINT_XINPUT_ENABLED",E,E,N,N],[17,"SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING",E,E,N,N],[17,"SDL_HINT_GAMECONTROLLERCONFIG",E,E,N,N],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES",E,E,N,N],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT",E,E,N,N],[17,"SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS",E,E,N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI",E,E,N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_PS4",E,E,N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE",E,E,N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_STEAM",E,E,N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_SWITCH",E,E,N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_XBOX",E,E,N,N],[17,"SDL_HINT_ENABLE_STEAM_CONTROLLERS",E,E,N,N],[17,"SDL_HINT_ALLOW_TOPMOST",E,E,N,N],[17,"SDL_HINT_TIMER_RESOLUTION",E,E,N,N],[17,"SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION",E,E,N,N],[17,"SDL_HINT_QTWAYLAND_WINDOW_FLAGS",E,E,N,N],[17,"SDL_HINT_THREAD_STACK_SIZE",E,E,N,N],[17,"SDL_HINT_VIDEO_HIGHDPI_DISABLED",E,E,N,N],[17,"SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK",E,E,N,N],[17,"SDL_HINT_VIDEO_WIN_D3DCOMPILER",E,E,N,N],[17,"SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT",E,E,N,N],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_URL",E,E,N,N],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_LABEL",E,E,N,N],[17,"SDL_HINT_WINRT_HANDLE_BACK_BUTTON",E,E,N,N],[17,"SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES",E,E,N,N],[17,"SDL_HINT_MAC_BACKGROUND_APP",E,E,N,N],[17,"SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION",E,E,N,N],[17,"SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION",E,E,N,N],[17,"SDL_HINT_IME_INTERNAL_EDITING",E,E,N,N],[17,"SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH",E,E,N,N],[17,"SDL_HINT_ANDROID_TRAP_BACK_BUTTON",E,E,N,N],[17,"SDL_HINT_RETURN_KEY_HIDES_IME",E,E,N,N],[17,"SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT",E,E,N,N],[17,"SDL_HINT_NO_SIGNAL_HANDLERS",E,E,N,N],[17,"SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4",E,E,N,N],[17,"SDL_HINT_BMP_SAVE_LEGACY_FORMAT",E,E,N,N],[17,"SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING",E,E,N,N],[17,"SDL_HINT_RPI_VIDEO_LAYER",E,E,N,N],[17,"SDL_HINT_VIDEO_DOUBLE_BUFFER",E,E,N,N],[17,"SDL_HINT_OPENGL_ES_DRIVER",E,E,N,N],[17,"SDL_HINT_AUDIO_RESAMPLING_MODE",E,E,N,N],[17,"SDL_HINT_AUDIO_CATEGORY",E,E,N,N],[17,"SDL_MAX_LOG_MESSAGE",E,E,N,N],[17,"SDL_STANDARD_GRAVITY",E,E,N,N],[17,"SDL_NONSHAPEABLE_WINDOW",E,E,N,N],[17,"SDL_INVALID_SHAPE_ARGUMENT",E,E,N,N],[17,"SDL_WINDOW_LACKS_SHAPE",E,E,N,N],[17,"SDL_MAJOR_VERSION",E,E,N,N],[17,"SDL_MINOR_VERSION",E,E,N,N],[17,"SDL_PATCHLEVEL",E,E,N,N],[17,"SDL_INIT_TIMER",E,E,N,N],[17,"SDL_INIT_AUDIO",E,E,N,N],[17,"SDL_INIT_VIDEO",E,E,N,N],[17,"SDL_INIT_JOYSTICK",E,E,N,N],[17,"SDL_INIT_HAPTIC",E,E,N,N],[17,"SDL_INIT_GAMECONTROLLER",E,E,N,N],[17,"SDL_INIT_EVENTS",E,E,N,N],[17,"SDL_INIT_SENSOR",E,E,N,N],[17,"SDL_INIT_NOPARACHUTE",E,E,N,N],[17,"SDL_INIT_EVERYTHING",E,E,N,N],[17,"XlibSpecificationRelease",E,E,N,N],[17,"X_PROTOCOL",E,E,N,N],[17,"X_PROTOCOL_REVISION",E,E,N,N],[17,"None",E,E,N,N],[17,"ParentRelative",E,E,N,N],[17,"CopyFromParent",E,E,N,N],[17,"PointerWindow",E,E,N,N],[17,"InputFocus",E,E,N,N],[17,"PointerRoot",E,E,N,N],[17,"AnyPropertyType",E,E,N,N],[17,"AnyKey",E,E,N,N],[17,"AnyButton",E,E,N,N],[17,"AllTemporary",E,E,N,N],[17,"CurrentTime",E,E,N,N],[17,"NoSymbol",E,E,N,N],[17,"NoEventMask",E,E,N,N],[17,"KeyPress",E,E,N,N],[17,"KeyRelease",E,E,N,N],[17,"ButtonPress",E,E,N,N],[17,"ButtonRelease",E,E,N,N],[17,"MotionNotify",E,E,N,N],[17,"EnterNotify",E,E,N,N],[17,"LeaveNotify",E,E,N,N],[17,"FocusIn",E,E,N,N],[17,"FocusOut",E,E,N,N],[17,"KeymapNotify",E,E,N,N],[17,"Expose",E,E,N,N],[17,"GraphicsExpose",E,E,N,N],[17,"NoExpose",E,E,N,N],[17,"VisibilityNotify",E,E,N,N],[17,"CreateNotify",E,E,N,N],[17,"DestroyNotify",E,E,N,N],[17,"UnmapNotify",E,E,N,N],[17,"MapNotify",E,E,N,N],[17,"MapRequest",E,E,N,N],[17,"ReparentNotify",E,E,N,N],[17,"ConfigureNotify",E,E,N,N],[17,"ConfigureRequest",E,E,N,N],[17,"GravityNotify",E,E,N,N],[17,"ResizeRequest",E,E,N,N],[17,"CirculateNotify",E,E,N,N],[17,"CirculateRequest",E,E,N,N],[17,"PropertyNotify",E,E,N,N],[17,"SelectionClear",E,E,N,N],[17,"SelectionRequest",E,E,N,N],[17,"SelectionNotify",E,E,N,N],[17,"ColormapNotify",E,E,N,N],[17,"ClientMessage",E,E,N,N],[17,"MappingNotify",E,E,N,N],[17,"GenericEvent",E,E,N,N],[17,"LASTEvent",E,E,N,N],[17,"ShiftMask",E,E,N,N],[17,"LockMask",E,E,N,N],[17,"ControlMask",E,E,N,N],[17,"Mod1Mask",E,E,N,N],[17,"Mod2Mask",E,E,N,N],[17,"Mod3Mask",E,E,N,N],[17,"Mod4Mask",E,E,N,N],[17,"Mod5Mask",E,E,N,N],[17,"ShiftMapIndex",E,E,N,N],[17,"LockMapIndex",E,E,N,N],[17,"ControlMapIndex",E,E,N,N],[17,"Mod1MapIndex",E,E,N,N],[17,"Mod2MapIndex",E,E,N,N],[17,"Mod3MapIndex",E,E,N,N],[17,"Mod4MapIndex",E,E,N,N],[17,"Mod5MapIndex",E,E,N,N],[17,"Button1Mask",E,E,N,N],[17,"Button2Mask",E,E,N,N],[17,"Button3Mask",E,E,N,N],[17,"Button4Mask",E,E,N,N],[17,"Button5Mask",E,E,N,N],[17,"AnyModifier",E,E,N,N],[17,"Button1",E,E,N,N],[17,"Button2",E,E,N,N],[17,"Button3",E,E,N,N],[17,"Button4",E,E,N,N],[17,"Button5",E,E,N,N],[17,"NotifyNormal",E,E,N,N],[17,"NotifyGrab",E,E,N,N],[17,"NotifyUngrab",E,E,N,N],[17,"NotifyWhileGrabbed",E,E,N,N],[17,"NotifyHint",E,E,N,N],[17,"NotifyAncestor",E,E,N,N],[17,"NotifyVirtual",E,E,N,N],[17,"NotifyInferior",E,E,N,N],[17,"NotifyNonlinear",E,E,N,N],[17,"NotifyNonlinearVirtual",E,E,N,N],[17,"NotifyPointer",E,E,N,N],[17,"NotifyPointerRoot",E,E,N,N],[17,"NotifyDetailNone",E,E,N,N],[17,"VisibilityUnobscured",E,E,N,N],[17,"VisibilityPartiallyObscured",E,E,N,N],[17,"VisibilityFullyObscured",E,E,N,N],[17,"PlaceOnTop",E,E,N,N],[17,"PlaceOnBottom",E,E,N,N],[17,"FamilyInternet",E,E,N,N],[17,"FamilyDECnet",E,E,N,N],[17,"FamilyChaos",E,E,N,N],[17,"FamilyInternet6",E,E,N,N],[17,"FamilyServerInterpreted",E,E,N,N],[17,"PropertyNewValue",E,E,N,N],[17,"PropertyDelete",E,E,N,N],[17,"ColormapUninstalled",E,E,N,N],[17,"ColormapInstalled",E,E,N,N],[17,"GrabModeSync",E,E,N,N],[17,"GrabModeAsync",E,E,N,N],[17,"GrabSuccess",E,E,N,N],[17,"AlreadyGrabbed",E,E,N,N],[17,"GrabInvalidTime",E,E,N,N],[17,"GrabNotViewable",E,E,N,N],[17,"GrabFrozen",E,E,N,N],[17,"AsyncPointer",E,E,N,N],[17,"SyncPointer",E,E,N,N],[17,"ReplayPointer",E,E,N,N],[17,"AsyncKeyboard",E,E,N,N],[17,"SyncKeyboard",E,E,N,N],[17,"ReplayKeyboard",E,E,N,N],[17,"AsyncBoth",E,E,N,N],[17,"SyncBoth",E,E,N,N],[17,"RevertToParent",E,E,N,N],[17,"Success",E,E,N,N],[17,"BadRequest",E,E,N,N],[17,"BadValue",E,E,N,N],[17,"BadWindow",E,E,N,N],[17,"BadPixmap",E,E,N,N],[17,"BadAtom",E,E,N,N],[17,"BadCursor",E,E,N,N],[17,"BadFont",E,E,N,N],[17,"BadMatch",E,E,N,N],[17,"BadDrawable",E,E,N,N],[17,"BadAccess",E,E,N,N],[17,"BadAlloc",E,E,N,N],[17,"BadColor",E,E,N,N],[17,"BadGC",E,E,N,N],[17,"BadIDChoice",E,E,N,N],[17,"BadName",E,E,N,N],[17,"BadLength",E,E,N,N],[17,"BadImplementation",E,E,N,N],[17,"FirstExtensionError",E,E,N,N],[17,"LastExtensionError",E,E,N,N],[17,"InputOutput",E,E,N,N],[17,"InputOnly",E,E,N,N],[17,"CWX",E,E,N,N],[17,"CWY",E,E,N,N],[17,"CWWidth",E,E,N,N],[17,"CWHeight",E,E,N,N],[17,"CWBorderWidth",E,E,N,N],[17,"CWSibling",E,E,N,N],[17,"CWStackMode",E,E,N,N],[17,"ForgetGravity",E,E,N,N],[17,"NorthWestGravity",E,E,N,N],[17,"NorthGravity",E,E,N,N],[17,"NorthEastGravity",E,E,N,N],[17,"WestGravity",E,E,N,N],[17,"CenterGravity",E,E,N,N],[17,"EastGravity",E,E,N,N],[17,"SouthWestGravity",E,E,N,N],[17,"SouthGravity",E,E,N,N],[17,"SouthEastGravity",E,E,N,N],[17,"StaticGravity",E,E,N,N],[17,"UnmapGravity",E,E,N,N],[17,"NotUseful",E,E,N,N],[17,"WhenMapped",E,E,N,N],[17,"Always",E,E,N,N],[17,"IsUnmapped",E,E,N,N],[17,"IsUnviewable",E,E,N,N],[17,"IsViewable",E,E,N,N],[17,"SetModeInsert",E,E,N,N],[17,"SetModeDelete",E,E,N,N],[17,"DestroyAll",E,E,N,N],[17,"RetainPermanent",E,E,N,N],[17,"RetainTemporary",E,E,N,N],[17,"Above",E,E,N,N],[17,"Below",E,E,N,N],[17,"TopIf",E,E,N,N],[17,"BottomIf",E,E,N,N],[17,"Opposite",E,E,N,N],[17,"RaiseLowest",E,E,N,N],[17,"LowerHighest",E,E,N,N],[17,"PropModeReplace",E,E,N,N],[17,"PropModePrepend",E,E,N,N],[17,"PropModeAppend",E,E,N,N],[17,"GXclear",E,E,N,N],[17,"GXand",E,E,N,N],[17,"GXandReverse",E,E,N,N],[17,"GXcopy",E,E,N,N],[17,"GXandInverted",E,E,N,N],[17,"GXnoop",E,E,N,N],[17,"GXxor",E,E,N,N],[17,"GXor",E,E,N,N],[17,"GXnor",E,E,N,N],[17,"GXequiv",E,E,N,N],[17,"GXinvert",E,E,N,N],[17,"GXorReverse",E,E,N,N],[17,"GXcopyInverted",E,E,N,N],[17,"GXorInverted",E,E,N,N],[17,"GXnand",E,E,N,N],[17,"GXset",E,E,N,N],[17,"LineSolid",E,E,N,N],[17,"LineOnOffDash",E,E,N,N],[17,"LineDoubleDash",E,E,N,N],[17,"CapNotLast",E,E,N,N],[17,"CapButt",E,E,N,N],[17,"CapRound",E,E,N,N],[17,"CapProjecting",E,E,N,N],[17,"JoinMiter",E,E,N,N],[17,"JoinRound",E,E,N,N],[17,"JoinBevel",E,E,N,N],[17,"FillSolid",E,E,N,N],[17,"FillTiled",E,E,N,N],[17,"FillStippled",E,E,N,N],[17,"FillOpaqueStippled",E,E,N,N],[17,"EvenOddRule",E,E,N,N],[17,"WindingRule",E,E,N,N],[17,"ClipByChildren",E,E,N,N],[17,"IncludeInferiors",E,E,N,N],[17,"Unsorted",E,E,N,N],[17,"YSorted",E,E,N,N],[17,"YXSorted",E,E,N,N],[17,"YXBanded",E,E,N,N],[17,"CoordModeOrigin",E,E,N,N],[17,"CoordModePrevious",E,E,N,N],[17,"Complex",E,E,N,N],[17,"Nonconvex",E,E,N,N],[17,"Convex",E,E,N,N],[17,"ArcChord",E,E,N,N],[17,"ArcPieSlice",E,E,N,N],[17,"GCLastBit",E,E,N,N],[17,"FontLeftToRight",E,E,N,N],[17,"FontRightToLeft",E,E,N,N],[17,"FontChange",E,E,N,N],[17,"XYBitmap",E,E,N,N],[17,"XYPixmap",E,E,N,N],[17,"ZPixmap",E,E,N,N],[17,"AllocNone",E,E,N,N],[17,"AllocAll",E,E,N,N],[17,"DoRed",E,E,N,N],[17,"DoGreen",E,E,N,N],[17,"DoBlue",E,E,N,N],[17,"CursorShape",E,E,N,N],[17,"TileShape",E,E,N,N],[17,"StippleShape",E,E,N,N],[17,"AutoRepeatModeOff",E,E,N,N],[17,"AutoRepeatModeOn",E,E,N,N],[17,"AutoRepeatModeDefault",E,E,N,N],[17,"LedModeOff",E,E,N,N],[17,"LedModeOn",E,E,N,N],[17,"MappingSuccess",E,E,N,N],[17,"MappingBusy",E,E,N,N],[17,"MappingFailed",E,E,N,N],[17,"MappingModifier",E,E,N,N],[17,"MappingKeyboard",E,E,N,N],[17,"MappingPointer",E,E,N,N],[17,"DontPreferBlanking",E,E,N,N],[17,"PreferBlanking",E,E,N,N],[17,"DefaultBlanking",E,E,N,N],[17,"DisableScreenSaver",E,E,N,N],[17,"DisableScreenInterval",E,E,N,N],[17,"DontAllowExposures",E,E,N,N],[17,"AllowExposures",E,E,N,N],[17,"DefaultExposures",E,E,N,N],[17,"ScreenSaverReset",E,E,N,N],[17,"ScreenSaverActive",E,E,N,N],[17,"HostInsert",E,E,N,N],[17,"HostDelete",E,E,N,N],[17,"EnableAccess",E,E,N,N],[17,"DisableAccess",E,E,N,N],[17,"StaticGray",E,E,N,N],[17,"GrayScale",E,E,N,N],[17,"StaticColor",E,E,N,N],[17,"PseudoColor",E,E,N,N],[17,"TrueColor",E,E,N,N],[17,"DirectColor",E,E,N,N],[17,"LSBFirst",E,E,N,N],[17,"MSBFirst",E,E,N,N],[17,"NeedFunctionPrototypes",E,E,N,N],[17,"NeedVarargsPrototypes",E,E,N,N],[17,"NeedNestedPrototypes",E,E,N,N],[17,"FUNCPROTO",E,E,N,N],[17,"NeedWidePrototypes",E,E,N,N],[17,"X_HAVE_UTF8_STRING",E,E,N,N],[17,"True",E,E,N,N],[17,"False",E,E,N,N],[17,"QueuedAlready",E,E,N,N],[17,"QueuedAfterReading",E,E,N,N],[17,"QueuedAfterFlush",E,E,N,N],[17,"XNRequiredCharSet",E,E,N,N],[17,"XNQueryOrientation",E,E,N,N],[17,"XNBaseFontName",E,E,N,N],[17,"XNOMAutomatic",E,E,N,N],[17,"XNMissingCharSet",E,E,N,N],[17,"XNDefaultString",E,E,N,N],[17,"XNOrientation",E,E,N,N],[17,"XNDirectionalDependentDrawing",E,E,N,N],[17,"XNContextualDrawing",E,E,N,N],[17,"XNFontInfo",E,E,N,N],[17,"XIMPreeditArea",E,E,N,N],[17,"XIMPreeditCallbacks",E,E,N,N],[17,"XIMPreeditPosition",E,E,N,N],[17,"XIMPreeditNothing",E,E,N,N],[17,"XIMPreeditNone",E,E,N,N],[17,"XIMStatusArea",E,E,N,N],[17,"XIMStatusCallbacks",E,E,N,N],[17,"XIMStatusNothing",E,E,N,N],[17,"XIMStatusNone",E,E,N,N],[17,"XNVaNestedList",E,E,N,N],[17,"XNQueryInputStyle",E,E,N,N],[17,"XNClientWindow",E,E,N,N],[17,"XNInputStyle",E,E,N,N],[17,"XNFocusWindow",E,E,N,N],[17,"XNResourceName",E,E,N,N],[17,"XNResourceClass",E,E,N,N],[17,"XNGeometryCallback",E,E,N,N],[17,"XNDestroyCallback",E,E,N,N],[17,"XNFilterEvents",E,E,N,N],[17,"XNPreeditStartCallback",E,E,N,N],[17,"XNPreeditDoneCallback",E,E,N,N],[17,"XNPreeditDrawCallback",E,E,N,N],[17,"XNPreeditCaretCallback",E,E,N,N],[17,"XNPreeditStateNotifyCallback",E,E,N,N],[17,"XNPreeditAttributes",E,E,N,N],[17,"XNStatusStartCallback",E,E,N,N],[17,"XNStatusDoneCallback",E,E,N,N],[17,"XNStatusDrawCallback",E,E,N,N],[17,"XNStatusAttributes",E,E,N,N],[17,"XNArea",E,E,N,N],[17,"XNAreaNeeded",E,E,N,N],[17,"XNSpotLocation",E,E,N,N],[17,"XNColormap",E,E,N,N],[17,"XNStdColormap",E,E,N,N],[17,"XNForeground",E,E,N,N],[17,"XNBackground",E,E,N,N],[17,"XNBackgroundPixmap",E,E,N,N],[17,"XNFontSet",E,E,N,N],[17,"XNLineSpace",E,E,N,N],[17,"XNCursor",E,E,N,N],[17,"XNQueryIMValuesList",E,E,N,N],[17,"XNQueryICValuesList",E,E,N,N],[17,"XNVisiblePosition",E,E,N,N],[17,"XNR6PreeditCallback",E,E,N,N],[17,"XNStringConversionCallback",E,E,N,N],[17,"XNStringConversion",E,E,N,N],[17,"XNResetState",E,E,N,N],[17,"XNHotKey",E,E,N,N],[17,"XNHotKeyState",E,E,N,N],[17,"XNPreeditState",E,E,N,N],[17,"XNSeparatorofNestedList",E,E,N,N],[17,"XBufferOverflow",E,E,N,N],[17,"XLookupNone",E,E,N,N],[17,"XLookupChars",E,E,N,N],[17,"XLookupKeySym",E,E,N,N],[17,"XLookupBoth",E,E,N,N],[17,"XIMReverse",E,E,N,N],[17,"XIMPreeditUnKnown",E,E,N,N],[17,"XIMPreeditEnable",E,E,N,N],[17,"XIMInitialState",E,E,N,N],[17,"XIMStringConversionLeftEdge",E,E,N,N],[17,"XIMStringConversionRightEdge",E,E,N,N],[17,"XIMStringConversionTopEdge",E,E,N,N],[17,"XIMStringConversionBottomEdge",E,E,N,N],[17,"XIMStringConversionConcealed",E,E,N,N],[17,"XIMStringConversionWrapped",E,E,N,N],[17,"XIMStringConversionBuffer",E,E,N,N],[17,"XIMStringConversionLine",E,E,N,N],[17,"XIMStringConversionWord",E,E,N,N],[17,"XIMStringConversionChar",E,E,N,N],[17,"XIMStringConversionSubstitution",E,E,N,N],[17,"XIMStringConversionRetrieval",E,E,N,N],[17,"XIMHotKeyStateON",E,E,N,N],[17,"XIMHotKeyStateOFF",E,E,N,N],[17,"XATOM_H",E,E,N,N],[17,R[417],E,E,N,N],[17,R[418],E,E,N,N],[17,R[419],E,E,N,N],[17,R[420],E,E,N,N],[17,R[421],E,E,N,N],[17,R[422],E,E,N,N],[17,R[423],E,E,N,N],[17,R[424],E,E,N,N],[17,R[425],E,E,N,N],[17,R[426],E,E,N,N],[17,R[427],E,E,N,N],[17,R[428],E,E,N,N],[17,R[429],E,E,N,N],[17,R[430],E,E,N,N],[17,R[431],E,E,N,N],[17,R[432],E,E,N,N],[17,R[433],E,E,N,N],[17,R[434],E,E,N,N],[17,R[435],E,E,N,N],[17,R[436],E,E,N,N],[17,R[437],E,E,N,N],[17,R[438],E,E,N,N],[17,R[439],E,E,N,N],[17,R[440],E,E,N,N],[17,R[441],E,E,N,N],[17,R[442],E,E,N,N],[17,R[443],E,E,N,N],[17,R[444],E,E,N,N],[17,R[445],E,E,N,N],[17,R[446],E,E,N,N],[17,R[447],E,E,N,N],[17,R[448],E,E,N,N],[17,R[449],E,E,N,N],[17,R[450],E,E,N,N],[17,R[451],E,E,N,N],[17,R[452],E,E,N,N],[17,R[453],E,E,N,N],[17,R[454],E,E,N,N],[17,R[455],E,E,N,N],[17,R[456],E,E,N,N],[17,R[457],E,E,N,N],[17,R[458],E,E,N,N],[17,R[459],E,E,N,N],[17,R[460],E,E,N,N],[17,R[461],E,E,N,N],[17,R[462],E,E,N,N],[17,R[463],E,E,N,N],[17,R[464],E,E,N,N],[17,R[465],E,E,N,N],[17,R[466],E,E,N,N],[17,R[467],E,E,N,N],[17,R[468],E,E,N,N],[17,R[469],E,E,N,N],[17,R[470],E,E,N,N],[17,R[471],E,E,N,N],[17,R[472],E,E,N,N],[17,R[473],E,E,N,N],[17,R[474],E,E,N,N],[17,R[475],E,E,N,N],[17,R[476],E,E,N,N],[17,R[477],E,E,N,N],[17,R[478],E,E,N,N],[17,R[479],E,E,N,N],[17,R[480],E,E,N,N],[17,R[481],E,E,N,N],[17,R[482],E,E,N,N],[17,R[483],E,E,N,N],[17,R[484],E,E,N,N],[17,R[485],E,E,N,N],[17,R[486],E,E,N,N],[17,R[487],E,E,N,N],[17,"SDL_PIXELFORMAT_RGBA32",E,E,N,N],[17,"SDL_PIXELFORMAT_ARGB32",E,E,N,N],[17,"SDL_PIXELFORMAT_BGRA32",E,E,N,N],[17,"SDL_PIXELFORMAT_ABGR32",E,E,N,N],[17,R[488],E,E,N,N],[17,R[489],E,E,N,N],[17,R[490],E,E,N,N],[17,R[491],E,E,N,N],[17,R[492],E,E,N,N],[17,R[493],E,E,N,N],[17,R[494],E,E,N,N],[17,R[495],E,E,N,N],[17,R[496],E,E,N,N],[17,R[497],E,E,N,N],[17,R[498],E,E,N,N],[17,R[499],E,E,N,N],[17,"SDLK_TAB",E,E,N,N],[17,R[500],E,E,N,N],[17,R[501],E,E,N,N],[17,R[502],E,E,N,N],[17,R[503],E,E,N,N],[17,R[504],E,E,N,N],[17,R[505],E,E,N,N],[17,R[506],E,E,N,N],[17,R[507],E,E,N,N],[17,R[508],E,E,N,N],[17,R[509],E,E,N,N],[17,R[510],E,E,N,N],[17,R[511],E,E,N,N],[17,R[512],E,E,N,N],[17,R[513],E,E,N,N],[17,R[514],E,E,N,N],[17,R[515],E,E,N,N],[17,"SDLK_0",E,E,N,N],[17,"SDLK_1",E,E,N,N],[17,"SDLK_2",E,E,N,N],[17,"SDLK_3",E,E,N,N],[17,"SDLK_4",E,E,N,N],[17,"SDLK_5",E,E,N,N],[17,"SDLK_6",E,E,N,N],[17,"SDLK_7",E,E,N,N],[17,"SDLK_8",E,E,N,N],[17,"SDLK_9",E,E,N,N],[17,R[516],E,E,N,N],[17,R[517],E,E,N,N],[17,R[518],E,E,N,N],[17,R[519],E,E,N,N],[17,R[520],E,E,N,N],[17,R[521],E,E,N,N],[17,"SDLK_AT",E,E,N,N],[17,R[522],E,E,N,N],[17,R[523],E,E,N,N],[17,R[524],E,E,N,N],[17,R[525],E,E,N,N],[17,R[526],E,E,N,N],[17,R[527],E,E,N,N],[17,"SDLK_a",E,E,N,N],[17,"SDLK_b",E,E,N,N],[17,"SDLK_c",E,E,N,N],[17,"SDLK_d",E,E,N,N],[17,"SDLK_e",E,E,N,N],[17,"SDLK_f",E,E,N,N],[17,"SDLK_g",E,E,N,N],[17,"SDLK_h",E,E,N,N],[17,"SDLK_i",E,E,N,N],[17,"SDLK_j",E,E,N,N],[17,"SDLK_k",E,E,N,N],[17,"SDLK_l",E,E,N,N],[17,"SDLK_m",E,E,N,N],[17,"SDLK_n",E,E,N,N],[17,"SDLK_o",E,E,N,N],[17,"SDLK_p",E,E,N,N],[17,"SDLK_q",E,E,N,N],[17,"SDLK_r",E,E,N,N],[17,"SDLK_s",E,E,N,N],[17,"SDLK_t",E,E,N,N],[17,"SDLK_u",E,E,N,N],[17,"SDLK_v",E,E,N,N],[17,"SDLK_w",E,E,N,N],[17,"SDLK_x",E,E,N,N],[17,"SDLK_y",E,E,N,N],[17,"SDLK_z",E,E,N,N],[17,R[528],E,E,N,N],[17,"SDLK_F1",E,E,N,N],[17,"SDLK_F2",E,E,N,N],[17,"SDLK_F3",E,E,N,N],[17,"SDLK_F4",E,E,N,N],[17,"SDLK_F5",E,E,N,N],[17,"SDLK_F6",E,E,N,N],[17,"SDLK_F7",E,E,N,N],[17,"SDLK_F8",E,E,N,N],[17,"SDLK_F9",E,E,N,N],[17,"SDLK_F10",E,E,N,N],[17,"SDLK_F11",E,E,N,N],[17,"SDLK_F12",E,E,N,N],[17,R[529],E,E,N,N],[17,R[530],E,E,N,N],[17,R[531],E,E,N,N],[17,R[532],E,E,N,N],[17,R[533],E,E,N,N],[17,R[534],E,E,N,N],[17,R[535],E,E,N,N],[17,"SDLK_END",E,E,N,N],[17,R[536],E,E,N,N],[17,R[537],E,E,N,N],[17,R[538],E,E,N,N],[17,R[539],E,E,N,N],[17,"SDLK_UP",E,E,N,N],[17,R[540],E,E,N,N],[17,R[541],E,E,N,N],[17,R[542],E,E,N,N],[17,R[543],E,E,N,N],[17,R[544],E,E,N,N],[17,R[545],E,E,N,N],[17,R[546],E,E,N,N],[17,R[547],E,E,N,N],[17,R[548],E,E,N,N],[17,R[549],E,E,N,N],[17,R[550],E,E,N,N],[17,R[551],E,E,N,N],[17,R[552],E,E,N,N],[17,R[553],E,E,N,N],[17,R[554],E,E,N,N],[17,R[555],E,E,N,N],[17,R[556],E,E,N,N],[17,R[557],E,E,N,N],[17,R[558],E,E,N,N],[17,R[559],E,E,N,N],[17,"SDLK_F13",E,E,N,N],[17,"SDLK_F14",E,E,N,N],[17,"SDLK_F15",E,E,N,N],[17,"SDLK_F16",E,E,N,N],[17,"SDLK_F17",E,E,N,N],[17,"SDLK_F18",E,E,N,N],[17,"SDLK_F19",E,E,N,N],[17,"SDLK_F20",E,E,N,N],[17,"SDLK_F21",E,E,N,N],[17,"SDLK_F22",E,E,N,N],[17,"SDLK_F23",E,E,N,N],[17,"SDLK_F24",E,E,N,N],[17,R[560],E,E,N,N],[17,R[561],E,E,N,N],[17,R[562],E,E,N,N],[17,R[563],E,E,N,N],[17,R[564],E,E,N,N],[17,R[565],E,E,N,N],[17,R[566],E,E,N,N],[17,"SDLK_CUT",E,E,N,N],[17,R[567],E,E,N,N],[17,R[568],E,E,N,N],[17,R[569],E,E,N,N],[17,R[570],E,E,N,N],[17,R[571],E,E,N,N],[17,R[572],E,E,N,N],[17,R[573],E,E,N,N],[17,R[574],E,E,N,N],[17,R[575],E,E,N,N],[17,R[576],E,E,N,N],[17,R[577],E,E,N,N],[17,R[578],E,E,N,N],[17,R[579],E,E,N,N],[17,R[580],E,E,N,N],[17,R[581],E,E,N,N],[17,"SDLK_OUT",E,E,N,N],[17,R[582],E,E,N,N],[17,R[583],E,E,N,N],[17,R[584],E,E,N,N],[17,R[585],E,E,N,N],[17,R[586],E,E,N,N],[17,R[587],E,E,N,N],[17,R[588],E,E,N,N],[17,R[589],E,E,N,N],[17,R[590],E,E,N,N],[17,R[591],E,E,N,N],[17,R[592],E,E,N,N],[17,R[593],E,E,N,N],[17,R[594],E,E,N,N],[17,R[595],E,E,N,N],[17,R[596],E,E,N,N],[17,R[597],E,E,N,N],[17,R[598],E,E,N,N],[17,R[599],E,E,N,N],[17,R[600],E,E,N,N],[17,R[601],E,E,N,N],[17,R[602],E,E,N,N],[17,R[603],E,E,N,N],[17,R[604],E,E,N,N],[17,R[605],E,E,N,N],[17,R[606],E,E,N,N],[17,R[607],E,E,N,N],[17,R[608],E,E,N,N],[17,R[609],E,E,N,N],[17,R[610],E,E,N,N],[17,R[611],E,E,N,N],[17,R[612],E,E,N,N],[17,R[613],E,E,N,N],[17,R[614],E,E,N,N],[17,R[615],E,E,N,N],[17,R[616],E,E,N,N],[17,R[617],E,E,N,N],[17,R[618],E,E,N,N],[17,R[619],E,E,N,N],[17,R[620],E,E,N,N],[17,R[621],E,E,N,N],[17,R[622],E,E,N,N],[17,R[623],E,E,N,N],[17,R[624],E,E,N,N],[17,R[625],E,E,N,N],[17,R[626],E,E,N,N],[17,R[627],E,E,N,N],[17,R[628],E,E,N,N],[17,R[629],E,E,N,N],[17,R[630],E,E,N,N],[17,R[631],E,E,N,N],[17,R[632],E,E,N,N],[17,R[633],E,E,N,N],[17,R[634],E,E,N,N],[17,R[635],E,E,N,N],[17,R[636],E,E,N,N],[17,R[637],E,E,N,N],[17,R[638],E,E,N,N],[17,R[639],E,E,N,N],[17,R[640],E,E,N,N],[17,R[641],E,E,N,N],[17,R[642],E,E,N,N],[17,R[643],E,E,N,N],[17,R[644],E,E,N,N],[17,R[645],E,E,N,N],[17,R[646],E,E,N,N],[17,"SDLK_WWW",E,E,N,N],[17,R[647],E,E,N,N],[17,R[648],E,E,N,N],[17,R[649],E,E,N,N],[17,R[650],E,E,N,N],[17,R[651],E,E,N,N],[17,R[652],E,E,N,N],[17,R[653],E,E,N,N],[17,R[654],E,E,N,N],[17,R[655],E,E,N,N],[17,R[656],E,E,N,N],[17,R[657],E,E,N,N],[17,R[658],E,E,N,N],[17,R[659],E,E,N,N],[17,R[660],E,E,N,N],[17,R[661],E,E,N,N],[17,R[662],E,E,N,N],[17,R[663],E,E,N,N],[17,R[664],E,E,N,N],[17,R[665],E,E,N,N],[17,R[666],E,E,N,N],[17,R[667],E,E,N,N],[17,R[668],E,E,N,N],[17,R[669],E,E,N,N],[17,R[670],E,E,N,N],[17,R[671],E,E,N,N],[17,R[672],E,E,N,N],[17,R[673],E,E,N,N],[17,R[674],E,E,N,N],[17,R[675],E,E,N,N],[17,R[676],E,E,N,N],[17,R[677],E,E,N,N],[17,R[678],E,E,N,N],[17,R[679],E,E,N,N],[17,R[680],E,E,N,N],[17,R[681],E,E,N,N],[17,R[682],E,E,N,N],[17,R[683],E,E,N,N],[17,R[684],E,E,N,N],[17,R[685],E,E,N,N],[17,R[686],E,E,N,N],[17,R[687],E,E,N,N],[17,R[688],E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[47]]]],[11,"from",E,E,251,[[[T]],[T]]],[11,R[11],E,E,251,[[[U]],[R[14]]]],[11,R[13],E,E,251,[[["self"]],[R[14]]]],[11,"into",E,E,251,[[["self"]],[U]]],[11,R[46],E,E,251,[[["self"]],[T]]],[11,R[12],E,E,251,[[["self"]],[T]]],[11,R[18],E,E,251,[[["self"]],[R[47]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[47]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[47]]]],[11,"from",E,E,252,[[[T]],[T]]],[11,R[11],E,E,252,[[[U]],[R[14]]]],[11,R[13],E,E,252,[[["self"]],[R[14]]]],[11,"into",E,E,252,[[["self"]],[U]]],[11,R[46],E,E,252,[[["self"]],[T]]],[11,R[12],E,E,252,[[["self"]],[T]]],[11,R[18],E,E,252,[[["self"]],[R[47]]]],[11,"from",E,E,253,[[[T]],[T]]],[11,R[11],E,E,253,[[[U]],[R[14]]]],[11,R[13],E,E,253,[[["self"]],[R[14]]]],[11,"into",E,E,253,[[["self"]],[U]]],[11,R[46],E,E,253,[[["self"]],[T]]],[11,R[12],E,E,253,[[["self"]],[T]]],[11,R[18],E,E,253,[[["self"]],[R[47]]]],[11,"from",E,E,254,[[[T]],[T]]],[11,R[11],E,E,254,[[[U]],[R[14]]]],[11,R[13],E,E,254,[[["self"]],[R[14]]]],[11,"into",E,E,254,[[["self"]],[U]]],[11,R[46],E,E,254,[[["self"]],[T]]],[11,R[12],E,E,254,[[["self"]],[T]]],[11,R[18],E,E,254,[[["self"]],[R[47]]]],[11,"from",E,E,255,[[[T]],[T]]],[11,R[11],E,E,255,[[[U]],[R[14]]]],[11,R[13],E,E,255,[[["self"]],[R[14]]]],[11,"into",E,E,255,[[["self"]],[U]]],[11,R[46],E,E,255,[[["self"]],[T]]],[11,R[12],E,E,255,[[["self"]],[T]]],[11,R[18],E,E,255,[[["self"]],[R[47]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[47]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[13],E,E,4,[[["self"]],[R[14]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[47]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[14]]]],[11,R[13],E,E,5,[[["self"]],[R[14]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[47]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[14]]]],[11,R[13],E,E,6,[[["self"]],[R[14]]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[47]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[14]]]],[11,R[13],E,E,7,[[["self"]],[R[14]]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[47]]]],[11,"from",E,E,256,[[[T]],[T]]],[11,R[11],E,E,256,[[[U]],[R[14]]]],[11,R[13],E,E,256,[[["self"]],[R[14]]]],[11,"into",E,E,256,[[["self"]],[U]]],[11,R[46],E,E,256,[[["self"]],[T]]],[11,R[12],E,E,256,[[["self"]],[T]]],[11,R[18],E,E,256,[[["self"]],[R[47]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[14]]]],[11,R[13],E,E,8,[[["self"]],[R[14]]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[47]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[14]]]],[11,R[13],E,E,9,[[["self"]],[R[14]]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[47]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[14]]]],[11,R[13],E,E,10,[[["self"]],[R[14]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[47]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[14]]]],[11,R[13],E,E,11,[[["self"]],[R[14]]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[47]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[14]]]],[11,R[13],E,E,12,[[["self"]],[R[14]]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[47]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[14]]]],[11,R[13],E,E,13,[[["self"]],[R[14]]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[47]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[[U]],[R[14]]]],[11,R[13],E,E,14,[[["self"]],[R[14]]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[47]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[11],E,E,15,[[[U]],[R[14]]]],[11,R[13],E,E,15,[[["self"]],[R[14]]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[47]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[14]]]],[11,R[13],E,E,16,[[["self"]],[R[14]]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[47]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[14]]]],[11,R[13],E,E,17,[[["self"]],[R[14]]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[47]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[14]]]],[11,R[13],E,E,18,[[["self"]],[R[14]]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[47]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[14]]]],[11,R[13],E,E,19,[[["self"]],[R[14]]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[47]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[14]]]],[11,R[13],E,E,20,[[["self"]],[R[14]]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[47]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[14]]]],[11,R[13],E,E,21,[[["self"]],[R[14]]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[47]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[14]]]],[11,R[13],E,E,22,[[["self"]],[R[14]]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[12],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[47]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[14]]]],[11,R[13],E,E,23,[[["self"]],[R[14]]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[47]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[14]]]],[11,R[13],E,E,24,[[["self"]],[R[14]]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[47]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[14]]]],[11,R[13],E,E,25,[[["self"]],[R[14]]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[12],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[47]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[14]]]],[11,R[13],E,E,26,[[["self"]],[R[14]]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[12],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[47]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[14]]]],[11,R[13],E,E,27,[[["self"]],[R[14]]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[12],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[47]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[14]]]],[11,R[13],E,E,28,[[["self"]],[R[14]]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[12],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[47]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[14]]]],[11,R[13],E,E,29,[[["self"]],[R[14]]]],[11,"into",E,E,29,[[["self"]],[U]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[12],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[47]]]],[11,"from",E,E,257,[[[T]],[T]]],[11,R[11],E,E,257,[[[U]],[R[14]]]],[11,R[13],E,E,257,[[["self"]],[R[14]]]],[11,"into",E,E,257,[[["self"]],[U]]],[11,R[46],E,E,257,[[["self"]],[T]]],[11,R[12],E,E,257,[[["self"]],[T]]],[11,R[18],E,E,257,[[["self"]],[R[47]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[14]]]],[11,R[13],E,E,30,[[["self"]],[R[14]]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[12],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[47]]]],[11,"from",E,E,258,[[[T]],[T]]],[11,R[11],E,E,258,[[[U]],[R[14]]]],[11,R[13],E,E,258,[[["self"]],[R[14]]]],[11,"into",E,E,258,[[["self"]],[U]]],[11,R[46],E,E,258,[[["self"]],[T]]],[11,R[12],E,E,258,[[["self"]],[T]]],[11,R[18],E,E,258,[[["self"]],[R[47]]]],[11,"from",E,E,259,[[[T]],[T]]],[11,R[11],E,E,259,[[[U]],[R[14]]]],[11,R[13],E,E,259,[[["self"]],[R[14]]]],[11,"into",E,E,259,[[["self"]],[U]]],[11,R[46],E,E,259,[[["self"]],[T]]],[11,R[12],E,E,259,[[["self"]],[T]]],[11,R[18],E,E,259,[[["self"]],[R[47]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[11],E,E,31,[[[U]],[R[14]]]],[11,R[13],E,E,31,[[["self"]],[R[14]]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[12],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[47]]]],[11,"from",E,E,260,[[[T]],[T]]],[11,R[11],E,E,260,[[[U]],[R[14]]]],[11,R[13],E,E,260,[[["self"]],[R[14]]]],[11,"into",E,E,260,[[["self"]],[U]]],[11,R[46],E,E,260,[[["self"]],[T]]],[11,R[12],E,E,260,[[["self"]],[T]]],[11,R[18],E,E,260,[[["self"]],[R[47]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[11],E,E,32,[[[U]],[R[14]]]],[11,R[13],E,E,32,[[["self"]],[R[14]]]],[11,"into",E,E,32,[[["self"]],[U]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[12],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[47]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[11],E,E,33,[[[U]],[R[14]]]],[11,R[13],E,E,33,[[["self"]],[R[14]]]],[11,"into",E,E,33,[[["self"]],[U]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[12],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[47]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[11],E,E,34,[[[U]],[R[14]]]],[11,R[13],E,E,34,[[["self"]],[R[14]]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[12],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[47]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[14]]]],[11,R[13],E,E,35,[[["self"]],[R[14]]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[12],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[47]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[11],E,E,36,[[[U]],[R[14]]]],[11,R[13],E,E,36,[[["self"]],[R[14]]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[12],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[47]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[11],E,E,37,[[[U]],[R[14]]]],[11,R[13],E,E,37,[[["self"]],[R[14]]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[12],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[["self"]],[R[47]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[11],E,E,38,[[[U]],[R[14]]]],[11,R[13],E,E,38,[[["self"]],[R[14]]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[12],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[["self"]],[R[47]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[11],E,E,39,[[[U]],[R[14]]]],[11,R[13],E,E,39,[[["self"]],[R[14]]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[12],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[["self"]],[R[47]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[11],E,E,40,[[[U]],[R[14]]]],[11,R[13],E,E,40,[[["self"]],[R[14]]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[12],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[["self"]],[R[47]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[11],E,E,41,[[[U]],[R[14]]]],[11,R[13],E,E,41,[[["self"]],[R[14]]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[12],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[["self"]],[R[47]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[[U]],[R[14]]]],[11,R[13],E,E,42,[[["self"]],[R[14]]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[12],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[47]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[11],E,E,43,[[[U]],[R[14]]]],[11,R[13],E,E,43,[[["self"]],[R[14]]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[12],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[47]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[11],E,E,44,[[[U]],[R[14]]]],[11,R[13],E,E,44,[[["self"]],[R[14]]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[12],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[47]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[11],E,E,45,[[[U]],[R[14]]]],[11,R[13],E,E,45,[[["self"]],[R[14]]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[12],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[47]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[[U]],[R[14]]]],[11,R[13],E,E,46,[[["self"]],[R[14]]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[12],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[47]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[11],E,E,47,[[[U]],[R[14]]]],[11,R[13],E,E,47,[[["self"]],[R[14]]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[12],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[47]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[11],E,E,48,[[[U]],[R[14]]]],[11,R[13],E,E,48,[[["self"]],[R[14]]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[12],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[47]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[11],E,E,49,[[[U]],[R[14]]]],[11,R[13],E,E,49,[[["self"]],[R[14]]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[12],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[R[47]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[11],E,E,50,[[[U]],[R[14]]]],[11,R[13],E,E,50,[[["self"]],[R[14]]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[12],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[R[47]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[11],E,E,51,[[[U]],[R[14]]]],[11,R[13],E,E,51,[[["self"]],[R[14]]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[12],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[R[47]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[11],E,E,52,[[[U]],[R[14]]]],[11,R[13],E,E,52,[[["self"]],[R[14]]]],[11,"into",E,E,52,[[["self"]],[U]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[12],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[R[47]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[11],E,E,53,[[[U]],[R[14]]]],[11,R[13],E,E,53,[[["self"]],[R[14]]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[12],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[47]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[11],E,E,54,[[[U]],[R[14]]]],[11,R[13],E,E,54,[[["self"]],[R[14]]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[12],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[47]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[11],E,E,55,[[[U]],[R[14]]]],[11,R[13],E,E,55,[[["self"]],[R[14]]]],[11,"into",E,E,55,[[["self"]],[U]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[12],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[47]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[11],E,E,56,[[[U]],[R[14]]]],[11,R[13],E,E,56,[[["self"]],[R[14]]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[12],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[47]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[11],E,E,57,[[[U]],[R[14]]]],[11,R[13],E,E,57,[[["self"]],[R[14]]]],[11,"into",E,E,57,[[["self"]],[U]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[12],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[47]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[11],E,E,58,[[[U]],[R[14]]]],[11,R[13],E,E,58,[[["self"]],[R[14]]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[12],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[["self"]],[R[47]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[11],E,E,59,[[[U]],[R[14]]]],[11,R[13],E,E,59,[[["self"]],[R[14]]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[12],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[["self"]],[R[47]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[11],E,E,60,[[[U]],[R[14]]]],[11,R[13],E,E,60,[[["self"]],[R[14]]]],[11,"into",E,E,60,[[["self"]],[U]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[12],E,E,60,[[["self"]],[T]]],[11,R[18],E,E,60,[[["self"]],[R[47]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[11],E,E,61,[[[U]],[R[14]]]],[11,R[13],E,E,61,[[["self"]],[R[14]]]],[11,"into",E,E,61,[[["self"]],[U]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[12],E,E,61,[[["self"]],[T]]],[11,R[18],E,E,61,[[["self"]],[R[47]]]],[11,"from",E,E,261,[[[T]],[T]]],[11,R[11],E,E,261,[[[U]],[R[14]]]],[11,R[13],E,E,261,[[["self"]],[R[14]]]],[11,"into",E,E,261,[[["self"]],[U]]],[11,R[46],E,E,261,[[["self"]],[T]]],[11,R[12],E,E,261,[[["self"]],[T]]],[11,R[18],E,E,261,[[["self"]],[R[47]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[11],E,E,62,[[[U]],[R[14]]]],[11,R[13],E,E,62,[[["self"]],[R[14]]]],[11,"into",E,E,62,[[["self"]],[U]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[12],E,E,62,[[["self"]],[T]]],[11,R[18],E,E,62,[[["self"]],[R[47]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[11],E,E,63,[[[U]],[R[14]]]],[11,R[13],E,E,63,[[["self"]],[R[14]]]],[11,"into",E,E,63,[[["self"]],[U]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[12],E,E,63,[[["self"]],[T]]],[11,R[18],E,E,63,[[["self"]],[R[47]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[11],E,E,64,[[[U]],[R[14]]]],[11,R[13],E,E,64,[[["self"]],[R[14]]]],[11,"into",E,E,64,[[["self"]],[U]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[12],E,E,64,[[["self"]],[T]]],[11,R[18],E,E,64,[[["self"]],[R[47]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[11],E,E,65,[[[U]],[R[14]]]],[11,R[13],E,E,65,[[["self"]],[R[14]]]],[11,"into",E,E,65,[[["self"]],[U]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[12],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[["self"]],[R[47]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[11],E,E,66,[[[U]],[R[14]]]],[11,R[13],E,E,66,[[["self"]],[R[14]]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[12],E,E,66,[[["self"]],[T]]],[11,R[18],E,E,66,[[["self"]],[R[47]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[11],E,E,67,[[[U]],[R[14]]]],[11,R[13],E,E,67,[[["self"]],[R[14]]]],[11,"into",E,E,67,[[["self"]],[U]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[12],E,E,67,[[["self"]],[T]]],[11,R[18],E,E,67,[[["self"]],[R[47]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[11],E,E,68,[[[U]],[R[14]]]],[11,R[13],E,E,68,[[["self"]],[R[14]]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[12],E,E,68,[[["self"]],[T]]],[11,R[18],E,E,68,[[["self"]],[R[47]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[11],E,E,69,[[[U]],[R[14]]]],[11,R[13],E,E,69,[[["self"]],[R[14]]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[12],E,E,69,[[["self"]],[T]]],[11,R[18],E,E,69,[[["self"]],[R[47]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[11],E,E,70,[[[U]],[R[14]]]],[11,R[13],E,E,70,[[["self"]],[R[14]]]],[11,"into",E,E,70,[[["self"]],[U]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[12],E,E,70,[[["self"]],[T]]],[11,R[18],E,E,70,[[["self"]],[R[47]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[11],E,E,71,[[[U]],[R[14]]]],[11,R[13],E,E,71,[[["self"]],[R[14]]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[12],E,E,71,[[["self"]],[T]]],[11,R[18],E,E,71,[[["self"]],[R[47]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[11],E,E,72,[[[U]],[R[14]]]],[11,R[13],E,E,72,[[["self"]],[R[14]]]],[11,"into",E,E,72,[[["self"]],[U]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[12],E,E,72,[[["self"]],[T]]],[11,R[18],E,E,72,[[["self"]],[R[47]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[11],E,E,73,[[[U]],[R[14]]]],[11,R[13],E,E,73,[[["self"]],[R[14]]]],[11,"into",E,E,73,[[["self"]],[U]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[12],E,E,73,[[["self"]],[T]]],[11,R[18],E,E,73,[[["self"]],[R[47]]]],[11,"from",E,E,262,[[[T]],[T]]],[11,R[11],E,E,262,[[[U]],[R[14]]]],[11,R[13],E,E,262,[[["self"]],[R[14]]]],[11,"into",E,E,262,[[["self"]],[U]]],[11,R[46],E,E,262,[[["self"]],[T]]],[11,R[12],E,E,262,[[["self"]],[T]]],[11,R[18],E,E,262,[[["self"]],[R[47]]]],[11,"from",E,E,263,[[[T]],[T]]],[11,R[11],E,E,263,[[[U]],[R[14]]]],[11,R[13],E,E,263,[[["self"]],[R[14]]]],[11,"into",E,E,263,[[["self"]],[U]]],[11,R[46],E,E,263,[[["self"]],[T]]],[11,R[12],E,E,263,[[["self"]],[T]]],[11,R[18],E,E,263,[[["self"]],[R[47]]]],[11,"from",E,E,264,[[[T]],[T]]],[11,R[11],E,E,264,[[[U]],[R[14]]]],[11,R[13],E,E,264,[[["self"]],[R[14]]]],[11,"into",E,E,264,[[["self"]],[U]]],[11,R[46],E,E,264,[[["self"]],[T]]],[11,R[12],E,E,264,[[["self"]],[T]]],[11,R[18],E,E,264,[[["self"]],[R[47]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[11],E,E,74,[[[U]],[R[14]]]],[11,R[13],E,E,74,[[["self"]],[R[14]]]],[11,"into",E,E,74,[[["self"]],[U]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[12],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[["self"]],[R[47]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[11],E,E,75,[[[U]],[R[14]]]],[11,R[13],E,E,75,[[["self"]],[R[14]]]],[11,"into",E,E,75,[[["self"]],[U]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[12],E,E,75,[[["self"]],[T]]],[11,R[18],E,E,75,[[["self"]],[R[47]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[11],E,E,76,[[[U]],[R[14]]]],[11,R[13],E,E,76,[[["self"]],[R[14]]]],[11,"into",E,E,76,[[["self"]],[U]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[12],E,E,76,[[["self"]],[T]]],[11,R[18],E,E,76,[[["self"]],[R[47]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[11],E,E,77,[[[U]],[R[14]]]],[11,R[13],E,E,77,[[["self"]],[R[14]]]],[11,"into",E,E,77,[[["self"]],[U]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[12],E,E,77,[[["self"]],[T]]],[11,R[18],E,E,77,[[["self"]],[R[47]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[11],E,E,78,[[[U]],[R[14]]]],[11,R[13],E,E,78,[[["self"]],[R[14]]]],[11,"into",E,E,78,[[["self"]],[U]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[12],E,E,78,[[["self"]],[T]]],[11,R[18],E,E,78,[[["self"]],[R[47]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[11],E,E,79,[[[U]],[R[14]]]],[11,R[13],E,E,79,[[["self"]],[R[14]]]],[11,"into",E,E,79,[[["self"]],[U]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[12],E,E,79,[[["self"]],[T]]],[11,R[18],E,E,79,[[["self"]],[R[47]]]],[11,"from",E,E,265,[[[T]],[T]]],[11,R[11],E,E,265,[[[U]],[R[14]]]],[11,R[13],E,E,265,[[["self"]],[R[14]]]],[11,"into",E,E,265,[[["self"]],[U]]],[11,R[46],E,E,265,[[["self"]],[T]]],[11,R[12],E,E,265,[[["self"]],[T]]],[11,R[18],E,E,265,[[["self"]],[R[47]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[11],E,E,80,[[[U]],[R[14]]]],[11,R[13],E,E,80,[[["self"]],[R[14]]]],[11,"into",E,E,80,[[["self"]],[U]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[12],E,E,80,[[["self"]],[T]]],[11,R[18],E,E,80,[[["self"]],[R[47]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[11],E,E,81,[[[U]],[R[14]]]],[11,R[13],E,E,81,[[["self"]],[R[14]]]],[11,"into",E,E,81,[[["self"]],[U]]],[11,R[46],E,E,81,[[["self"]],[T]]],[11,R[12],E,E,81,[[["self"]],[T]]],[11,R[18],E,E,81,[[["self"]],[R[47]]]],[11,"from",E,E,266,[[[T]],[T]]],[11,R[11],E,E,266,[[[U]],[R[14]]]],[11,R[13],E,E,266,[[["self"]],[R[14]]]],[11,"into",E,E,266,[[["self"]],[U]]],[11,R[46],E,E,266,[[["self"]],[T]]],[11,R[12],E,E,266,[[["self"]],[T]]],[11,R[18],E,E,266,[[["self"]],[R[47]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[11],E,E,82,[[[U]],[R[14]]]],[11,R[13],E,E,82,[[["self"]],[R[14]]]],[11,"into",E,E,82,[[["self"]],[U]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[12],E,E,82,[[["self"]],[T]]],[11,R[18],E,E,82,[[["self"]],[R[47]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[11],E,E,83,[[[U]],[R[14]]]],[11,R[13],E,E,83,[[["self"]],[R[14]]]],[11,"into",E,E,83,[[["self"]],[U]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[12],E,E,83,[[["self"]],[T]]],[11,R[18],E,E,83,[[["self"]],[R[47]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[11],E,E,84,[[[U]],[R[14]]]],[11,R[13],E,E,84,[[["self"]],[R[14]]]],[11,"into",E,E,84,[[["self"]],[U]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[12],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[["self"]],[R[47]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[11],E,E,85,[[[U]],[R[14]]]],[11,R[13],E,E,85,[[["self"]],[R[14]]]],[11,"into",E,E,85,[[["self"]],[U]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[12],E,E,85,[[["self"]],[T]]],[11,R[18],E,E,85,[[["self"]],[R[47]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[11],E,E,86,[[[U]],[R[14]]]],[11,R[13],E,E,86,[[["self"]],[R[14]]]],[11,"into",E,E,86,[[["self"]],[U]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[12],E,E,86,[[["self"]],[T]]],[11,R[18],E,E,86,[[["self"]],[R[47]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[11],E,E,87,[[[U]],[R[14]]]],[11,R[13],E,E,87,[[["self"]],[R[14]]]],[11,"into",E,E,87,[[["self"]],[U]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[12],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[["self"]],[R[47]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[11],E,E,88,[[[U]],[R[14]]]],[11,R[13],E,E,88,[[["self"]],[R[14]]]],[11,"into",E,E,88,[[["self"]],[U]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[12],E,E,88,[[["self"]],[T]]],[11,R[18],E,E,88,[[["self"]],[R[47]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[11],E,E,89,[[[U]],[R[14]]]],[11,R[13],E,E,89,[[["self"]],[R[14]]]],[11,"into",E,E,89,[[["self"]],[U]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[12],E,E,89,[[["self"]],[T]]],[11,R[18],E,E,89,[[["self"]],[R[47]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[11],E,E,90,[[[U]],[R[14]]]],[11,R[13],E,E,90,[[["self"]],[R[14]]]],[11,"into",E,E,90,[[["self"]],[U]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[12],E,E,90,[[["self"]],[T]]],[11,R[18],E,E,90,[[["self"]],[R[47]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[11],E,E,91,[[[U]],[R[14]]]],[11,R[13],E,E,91,[[["self"]],[R[14]]]],[11,"into",E,E,91,[[["self"]],[U]]],[11,R[46],E,E,91,[[["self"]],[T]]],[11,R[12],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[["self"]],[R[47]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[11],E,E,92,[[[U]],[R[14]]]],[11,R[13],E,E,92,[[["self"]],[R[14]]]],[11,"into",E,E,92,[[["self"]],[U]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[12],E,E,92,[[["self"]],[T]]],[11,R[18],E,E,92,[[["self"]],[R[47]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[11],E,E,93,[[[U]],[R[14]]]],[11,R[13],E,E,93,[[["self"]],[R[14]]]],[11,"into",E,E,93,[[["self"]],[U]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[12],E,E,93,[[["self"]],[T]]],[11,R[18],E,E,93,[[["self"]],[R[47]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[11],E,E,94,[[[U]],[R[14]]]],[11,R[13],E,E,94,[[["self"]],[R[14]]]],[11,"into",E,E,94,[[["self"]],[U]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[12],E,E,94,[[["self"]],[T]]],[11,R[18],E,E,94,[[["self"]],[R[47]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[11],E,E,95,[[[U]],[R[14]]]],[11,R[13],E,E,95,[[["self"]],[R[14]]]],[11,"into",E,E,95,[[["self"]],[U]]],[11,R[46],E,E,95,[[["self"]],[T]]],[11,R[12],E,E,95,[[["self"]],[T]]],[11,R[18],E,E,95,[[["self"]],[R[47]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[11],E,E,96,[[[U]],[R[14]]]],[11,R[13],E,E,96,[[["self"]],[R[14]]]],[11,"into",E,E,96,[[["self"]],[U]]],[11,R[46],E,E,96,[[["self"]],[T]]],[11,R[12],E,E,96,[[["self"]],[T]]],[11,R[18],E,E,96,[[["self"]],[R[47]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[11],E,E,97,[[[U]],[R[14]]]],[11,R[13],E,E,97,[[["self"]],[R[14]]]],[11,"into",E,E,97,[[["self"]],[U]]],[11,R[46],E,E,97,[[["self"]],[T]]],[11,R[12],E,E,97,[[["self"]],[T]]],[11,R[18],E,E,97,[[["self"]],[R[47]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[11],E,E,98,[[[U]],[R[14]]]],[11,R[13],E,E,98,[[["self"]],[R[14]]]],[11,"into",E,E,98,[[["self"]],[U]]],[11,R[46],E,E,98,[[["self"]],[T]]],[11,R[12],E,E,98,[[["self"]],[T]]],[11,R[18],E,E,98,[[["self"]],[R[47]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[11],E,E,99,[[[U]],[R[14]]]],[11,R[13],E,E,99,[[["self"]],[R[14]]]],[11,"into",E,E,99,[[["self"]],[U]]],[11,R[46],E,E,99,[[["self"]],[T]]],[11,R[12],E,E,99,[[["self"]],[T]]],[11,R[18],E,E,99,[[["self"]],[R[47]]]],[11,"from",E,E,267,[[[T]],[T]]],[11,R[11],E,E,267,[[[U]],[R[14]]]],[11,R[13],E,E,267,[[["self"]],[R[14]]]],[11,"into",E,E,267,[[["self"]],[U]]],[11,R[46],E,E,267,[[["self"]],[T]]],[11,R[12],E,E,267,[[["self"]],[T]]],[11,R[18],E,E,267,[[["self"]],[R[47]]]],[11,"from",E,E,268,[[[T]],[T]]],[11,R[11],E,E,268,[[[U]],[R[14]]]],[11,R[13],E,E,268,[[["self"]],[R[14]]]],[11,"into",E,E,268,[[["self"]],[U]]],[11,R[46],E,E,268,[[["self"]],[T]]],[11,R[12],E,E,268,[[["self"]],[T]]],[11,R[18],E,E,268,[[["self"]],[R[47]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[11],E,E,100,[[[U]],[R[14]]]],[11,R[13],E,E,100,[[["self"]],[R[14]]]],[11,"into",E,E,100,[[["self"]],[U]]],[11,R[46],E,E,100,[[["self"]],[T]]],[11,R[12],E,E,100,[[["self"]],[T]]],[11,R[18],E,E,100,[[["self"]],[R[47]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[11],E,E,101,[[[U]],[R[14]]]],[11,R[13],E,E,101,[[["self"]],[R[14]]]],[11,"into",E,E,101,[[["self"]],[U]]],[11,R[46],E,E,101,[[["self"]],[T]]],[11,R[12],E,E,101,[[["self"]],[T]]],[11,R[18],E,E,101,[[["self"]],[R[47]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[11],E,E,102,[[[U]],[R[14]]]],[11,R[13],E,E,102,[[["self"]],[R[14]]]],[11,"into",E,E,102,[[["self"]],[U]]],[11,R[46],E,E,102,[[["self"]],[T]]],[11,R[12],E,E,102,[[["self"]],[T]]],[11,R[18],E,E,102,[[["self"]],[R[47]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[11],E,E,103,[[[U]],[R[14]]]],[11,R[13],E,E,103,[[["self"]],[R[14]]]],[11,"into",E,E,103,[[["self"]],[U]]],[11,R[46],E,E,103,[[["self"]],[T]]],[11,R[12],E,E,103,[[["self"]],[T]]],[11,R[18],E,E,103,[[["self"]],[R[47]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[11],E,E,104,[[[U]],[R[14]]]],[11,R[13],E,E,104,[[["self"]],[R[14]]]],[11,"into",E,E,104,[[["self"]],[U]]],[11,R[46],E,E,104,[[["self"]],[T]]],[11,R[12],E,E,104,[[["self"]],[T]]],[11,R[18],E,E,104,[[["self"]],[R[47]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[11],E,E,105,[[[U]],[R[14]]]],[11,R[13],E,E,105,[[["self"]],[R[14]]]],[11,"into",E,E,105,[[["self"]],[U]]],[11,R[46],E,E,105,[[["self"]],[T]]],[11,R[12],E,E,105,[[["self"]],[T]]],[11,R[18],E,E,105,[[["self"]],[R[47]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[11],E,E,106,[[[U]],[R[14]]]],[11,R[13],E,E,106,[[["self"]],[R[14]]]],[11,"into",E,E,106,[[["self"]],[U]]],[11,R[46],E,E,106,[[["self"]],[T]]],[11,R[12],E,E,106,[[["self"]],[T]]],[11,R[18],E,E,106,[[["self"]],[R[47]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[11],E,E,107,[[[U]],[R[14]]]],[11,R[13],E,E,107,[[["self"]],[R[14]]]],[11,"into",E,E,107,[[["self"]],[U]]],[11,R[46],E,E,107,[[["self"]],[T]]],[11,R[12],E,E,107,[[["self"]],[T]]],[11,R[18],E,E,107,[[["self"]],[R[47]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[11],E,E,108,[[[U]],[R[14]]]],[11,R[13],E,E,108,[[["self"]],[R[14]]]],[11,"into",E,E,108,[[["self"]],[U]]],[11,R[46],E,E,108,[[["self"]],[T]]],[11,R[12],E,E,108,[[["self"]],[T]]],[11,R[18],E,E,108,[[["self"]],[R[47]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[11],E,E,109,[[[U]],[R[14]]]],[11,R[13],E,E,109,[[["self"]],[R[14]]]],[11,"into",E,E,109,[[["self"]],[U]]],[11,R[46],E,E,109,[[["self"]],[T]]],[11,R[12],E,E,109,[[["self"]],[T]]],[11,R[18],E,E,109,[[["self"]],[R[47]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[11],E,E,110,[[[U]],[R[14]]]],[11,R[13],E,E,110,[[["self"]],[R[14]]]],[11,"into",E,E,110,[[["self"]],[U]]],[11,R[46],E,E,110,[[["self"]],[T]]],[11,R[12],E,E,110,[[["self"]],[T]]],[11,R[18],E,E,110,[[["self"]],[R[47]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[11],E,E,111,[[[U]],[R[14]]]],[11,R[13],E,E,111,[[["self"]],[R[14]]]],[11,"into",E,E,111,[[["self"]],[U]]],[11,R[46],E,E,111,[[["self"]],[T]]],[11,R[12],E,E,111,[[["self"]],[T]]],[11,R[18],E,E,111,[[["self"]],[R[47]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[11],E,E,112,[[[U]],[R[14]]]],[11,R[13],E,E,112,[[["self"]],[R[14]]]],[11,"into",E,E,112,[[["self"]],[U]]],[11,R[46],E,E,112,[[["self"]],[T]]],[11,R[12],E,E,112,[[["self"]],[T]]],[11,R[18],E,E,112,[[["self"]],[R[47]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[11],E,E,113,[[[U]],[R[14]]]],[11,R[13],E,E,113,[[["self"]],[R[14]]]],[11,"into",E,E,113,[[["self"]],[U]]],[11,R[46],E,E,113,[[["self"]],[T]]],[11,R[12],E,E,113,[[["self"]],[T]]],[11,R[18],E,E,113,[[["self"]],[R[47]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[11],E,E,114,[[[U]],[R[14]]]],[11,R[13],E,E,114,[[["self"]],[R[14]]]],[11,"into",E,E,114,[[["self"]],[U]]],[11,R[46],E,E,114,[[["self"]],[T]]],[11,R[12],E,E,114,[[["self"]],[T]]],[11,R[18],E,E,114,[[["self"]],[R[47]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[11],E,E,115,[[[U]],[R[14]]]],[11,R[13],E,E,115,[[["self"]],[R[14]]]],[11,"into",E,E,115,[[["self"]],[U]]],[11,R[46],E,E,115,[[["self"]],[T]]],[11,R[12],E,E,115,[[["self"]],[T]]],[11,R[18],E,E,115,[[["self"]],[R[47]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[11],E,E,116,[[[U]],[R[14]]]],[11,R[13],E,E,116,[[["self"]],[R[14]]]],[11,"into",E,E,116,[[["self"]],[U]]],[11,R[46],E,E,116,[[["self"]],[T]]],[11,R[12],E,E,116,[[["self"]],[T]]],[11,R[18],E,E,116,[[["self"]],[R[47]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[11],E,E,117,[[[U]],[R[14]]]],[11,R[13],E,E,117,[[["self"]],[R[14]]]],[11,"into",E,E,117,[[["self"]],[U]]],[11,R[46],E,E,117,[[["self"]],[T]]],[11,R[12],E,E,117,[[["self"]],[T]]],[11,R[18],E,E,117,[[["self"]],[R[47]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[11],E,E,118,[[[U]],[R[14]]]],[11,R[13],E,E,118,[[["self"]],[R[14]]]],[11,"into",E,E,118,[[["self"]],[U]]],[11,R[46],E,E,118,[[["self"]],[T]]],[11,R[12],E,E,118,[[["self"]],[T]]],[11,R[18],E,E,118,[[["self"]],[R[47]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[11],E,E,119,[[[U]],[R[14]]]],[11,R[13],E,E,119,[[["self"]],[R[14]]]],[11,"into",E,E,119,[[["self"]],[U]]],[11,R[46],E,E,119,[[["self"]],[T]]],[11,R[12],E,E,119,[[["self"]],[T]]],[11,R[18],E,E,119,[[["self"]],[R[47]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[11],E,E,120,[[[U]],[R[14]]]],[11,R[13],E,E,120,[[["self"]],[R[14]]]],[11,"into",E,E,120,[[["self"]],[U]]],[11,R[46],E,E,120,[[["self"]],[T]]],[11,R[12],E,E,120,[[["self"]],[T]]],[11,R[18],E,E,120,[[["self"]],[R[47]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[11],E,E,121,[[[U]],[R[14]]]],[11,R[13],E,E,121,[[["self"]],[R[14]]]],[11,"into",E,E,121,[[["self"]],[U]]],[11,R[46],E,E,121,[[["self"]],[T]]],[11,R[12],E,E,121,[[["self"]],[T]]],[11,R[18],E,E,121,[[["self"]],[R[47]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[11],E,E,122,[[[U]],[R[14]]]],[11,R[13],E,E,122,[[["self"]],[R[14]]]],[11,"into",E,E,122,[[["self"]],[U]]],[11,R[46],E,E,122,[[["self"]],[T]]],[11,R[12],E,E,122,[[["self"]],[T]]],[11,R[18],E,E,122,[[["self"]],[R[47]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[11],E,E,123,[[[U]],[R[14]]]],[11,R[13],E,E,123,[[["self"]],[R[14]]]],[11,"into",E,E,123,[[["self"]],[U]]],[11,R[46],E,E,123,[[["self"]],[T]]],[11,R[12],E,E,123,[[["self"]],[T]]],[11,R[18],E,E,123,[[["self"]],[R[47]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[11],E,E,124,[[[U]],[R[14]]]],[11,R[13],E,E,124,[[["self"]],[R[14]]]],[11,"into",E,E,124,[[["self"]],[U]]],[11,R[46],E,E,124,[[["self"]],[T]]],[11,R[12],E,E,124,[[["self"]],[T]]],[11,R[18],E,E,124,[[["self"]],[R[47]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[11],E,E,125,[[[U]],[R[14]]]],[11,R[13],E,E,125,[[["self"]],[R[14]]]],[11,"into",E,E,125,[[["self"]],[U]]],[11,R[46],E,E,125,[[["self"]],[T]]],[11,R[12],E,E,125,[[["self"]],[T]]],[11,R[18],E,E,125,[[["self"]],[R[47]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[11],E,E,126,[[[U]],[R[14]]]],[11,R[13],E,E,126,[[["self"]],[R[14]]]],[11,"into",E,E,126,[[["self"]],[U]]],[11,R[46],E,E,126,[[["self"]],[T]]],[11,R[12],E,E,126,[[["self"]],[T]]],[11,R[18],E,E,126,[[["self"]],[R[47]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[11],E,E,127,[[[U]],[R[14]]]],[11,R[13],E,E,127,[[["self"]],[R[14]]]],[11,"into",E,E,127,[[["self"]],[U]]],[11,R[46],E,E,127,[[["self"]],[T]]],[11,R[12],E,E,127,[[["self"]],[T]]],[11,R[18],E,E,127,[[["self"]],[R[47]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[11],E,E,128,[[[U]],[R[14]]]],[11,R[13],E,E,128,[[["self"]],[R[14]]]],[11,"into",E,E,128,[[["self"]],[U]]],[11,R[46],E,E,128,[[["self"]],[T]]],[11,R[12],E,E,128,[[["self"]],[T]]],[11,R[18],E,E,128,[[["self"]],[R[47]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[11],E,E,129,[[[U]],[R[14]]]],[11,R[13],E,E,129,[[["self"]],[R[14]]]],[11,"into",E,E,129,[[["self"]],[U]]],[11,R[46],E,E,129,[[["self"]],[T]]],[11,R[12],E,E,129,[[["self"]],[T]]],[11,R[18],E,E,129,[[["self"]],[R[47]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[11],E,E,130,[[[U]],[R[14]]]],[11,R[13],E,E,130,[[["self"]],[R[14]]]],[11,"into",E,E,130,[[["self"]],[U]]],[11,R[46],E,E,130,[[["self"]],[T]]],[11,R[12],E,E,130,[[["self"]],[T]]],[11,R[18],E,E,130,[[["self"]],[R[47]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[11],E,E,131,[[[U]],[R[14]]]],[11,R[13],E,E,131,[[["self"]],[R[14]]]],[11,"into",E,E,131,[[["self"]],[U]]],[11,R[46],E,E,131,[[["self"]],[T]]],[11,R[12],E,E,131,[[["self"]],[T]]],[11,R[18],E,E,131,[[["self"]],[R[47]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[11],E,E,132,[[[U]],[R[14]]]],[11,R[13],E,E,132,[[["self"]],[R[14]]]],[11,"into",E,E,132,[[["self"]],[U]]],[11,R[46],E,E,132,[[["self"]],[T]]],[11,R[12],E,E,132,[[["self"]],[T]]],[11,R[18],E,E,132,[[["self"]],[R[47]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[11],E,E,133,[[[U]],[R[14]]]],[11,R[13],E,E,133,[[["self"]],[R[14]]]],[11,"into",E,E,133,[[["self"]],[U]]],[11,R[46],E,E,133,[[["self"]],[T]]],[11,R[12],E,E,133,[[["self"]],[T]]],[11,R[18],E,E,133,[[["self"]],[R[47]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[11],E,E,134,[[[U]],[R[14]]]],[11,R[13],E,E,134,[[["self"]],[R[14]]]],[11,"into",E,E,134,[[["self"]],[U]]],[11,R[46],E,E,134,[[["self"]],[T]]],[11,R[12],E,E,134,[[["self"]],[T]]],[11,R[18],E,E,134,[[["self"]],[R[47]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[11],E,E,135,[[[U]],[R[14]]]],[11,R[13],E,E,135,[[["self"]],[R[14]]]],[11,"into",E,E,135,[[["self"]],[U]]],[11,R[46],E,E,135,[[["self"]],[T]]],[11,R[12],E,E,135,[[["self"]],[T]]],[11,R[18],E,E,135,[[["self"]],[R[47]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[11],E,E,136,[[[U]],[R[14]]]],[11,R[13],E,E,136,[[["self"]],[R[14]]]],[11,"into",E,E,136,[[["self"]],[U]]],[11,R[46],E,E,136,[[["self"]],[T]]],[11,R[12],E,E,136,[[["self"]],[T]]],[11,R[18],E,E,136,[[["self"]],[R[47]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[11],E,E,137,[[[U]],[R[14]]]],[11,R[13],E,E,137,[[["self"]],[R[14]]]],[11,"into",E,E,137,[[["self"]],[U]]],[11,R[46],E,E,137,[[["self"]],[T]]],[11,R[12],E,E,137,[[["self"]],[T]]],[11,R[18],E,E,137,[[["self"]],[R[47]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[11],E,E,138,[[[U]],[R[14]]]],[11,R[13],E,E,138,[[["self"]],[R[14]]]],[11,"into",E,E,138,[[["self"]],[U]]],[11,R[46],E,E,138,[[["self"]],[T]]],[11,R[12],E,E,138,[[["self"]],[T]]],[11,R[18],E,E,138,[[["self"]],[R[47]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[11],E,E,139,[[[U]],[R[14]]]],[11,R[13],E,E,139,[[["self"]],[R[14]]]],[11,"into",E,E,139,[[["self"]],[U]]],[11,R[46],E,E,139,[[["self"]],[T]]],[11,R[12],E,E,139,[[["self"]],[T]]],[11,R[18],E,E,139,[[["self"]],[R[47]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[11],E,E,140,[[[U]],[R[14]]]],[11,R[13],E,E,140,[[["self"]],[R[14]]]],[11,"into",E,E,140,[[["self"]],[U]]],[11,R[46],E,E,140,[[["self"]],[T]]],[11,R[12],E,E,140,[[["self"]],[T]]],[11,R[18],E,E,140,[[["self"]],[R[47]]]],[11,"from",E,E,269,[[[T]],[T]]],[11,R[11],E,E,269,[[[U]],[R[14]]]],[11,R[13],E,E,269,[[["self"]],[R[14]]]],[11,"into",E,E,269,[[["self"]],[U]]],[11,R[46],E,E,269,[[["self"]],[T]]],[11,R[12],E,E,269,[[["self"]],[T]]],[11,R[18],E,E,269,[[["self"]],[R[47]]]],[11,"from",E,E,270,[[[T]],[T]]],[11,R[11],E,E,270,[[[U]],[R[14]]]],[11,R[13],E,E,270,[[["self"]],[R[14]]]],[11,"into",E,E,270,[[["self"]],[U]]],[11,R[46],E,E,270,[[["self"]],[T]]],[11,R[12],E,E,270,[[["self"]],[T]]],[11,R[18],E,E,270,[[["self"]],[R[47]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[11],E,E,141,[[[U]],[R[14]]]],[11,R[13],E,E,141,[[["self"]],[R[14]]]],[11,"into",E,E,141,[[["self"]],[U]]],[11,R[46],E,E,141,[[["self"]],[T]]],[11,R[12],E,E,141,[[["self"]],[T]]],[11,R[18],E,E,141,[[["self"]],[R[47]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[11],E,E,142,[[[U]],[R[14]]]],[11,R[13],E,E,142,[[["self"]],[R[14]]]],[11,"into",E,E,142,[[["self"]],[U]]],[11,R[46],E,E,142,[[["self"]],[T]]],[11,R[12],E,E,142,[[["self"]],[T]]],[11,R[18],E,E,142,[[["self"]],[R[47]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[11],E,E,143,[[[U]],[R[14]]]],[11,R[13],E,E,143,[[["self"]],[R[14]]]],[11,"into",E,E,143,[[["self"]],[U]]],[11,R[46],E,E,143,[[["self"]],[T]]],[11,R[12],E,E,143,[[["self"]],[T]]],[11,R[18],E,E,143,[[["self"]],[R[47]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[11],E,E,144,[[[U]],[R[14]]]],[11,R[13],E,E,144,[[["self"]],[R[14]]]],[11,"into",E,E,144,[[["self"]],[U]]],[11,R[46],E,E,144,[[["self"]],[T]]],[11,R[12],E,E,144,[[["self"]],[T]]],[11,R[18],E,E,144,[[["self"]],[R[47]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[11],E,E,145,[[[U]],[R[14]]]],[11,R[13],E,E,145,[[["self"]],[R[14]]]],[11,"into",E,E,145,[[["self"]],[U]]],[11,R[46],E,E,145,[[["self"]],[T]]],[11,R[12],E,E,145,[[["self"]],[T]]],[11,R[18],E,E,145,[[["self"]],[R[47]]]],[11,"from",E,E,271,[[[T]],[T]]],[11,R[11],E,E,271,[[[U]],[R[14]]]],[11,R[13],E,E,271,[[["self"]],[R[14]]]],[11,"into",E,E,271,[[["self"]],[U]]],[11,R[46],E,E,271,[[["self"]],[T]]],[11,R[12],E,E,271,[[["self"]],[T]]],[11,R[18],E,E,271,[[["self"]],[R[47]]]],[11,"from",E,E,272,[[[T]],[T]]],[11,R[11],E,E,272,[[[U]],[R[14]]]],[11,R[13],E,E,272,[[["self"]],[R[14]]]],[11,"into",E,E,272,[[["self"]],[U]]],[11,R[46],E,E,272,[[["self"]],[T]]],[11,R[12],E,E,272,[[["self"]],[T]]],[11,R[18],E,E,272,[[["self"]],[R[47]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[11],E,E,146,[[[U]],[R[14]]]],[11,R[13],E,E,146,[[["self"]],[R[14]]]],[11,"into",E,E,146,[[["self"]],[U]]],[11,R[46],E,E,146,[[["self"]],[T]]],[11,R[12],E,E,146,[[["self"]],[T]]],[11,R[18],E,E,146,[[["self"]],[R[47]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[11],E,E,147,[[[U]],[R[14]]]],[11,R[13],E,E,147,[[["self"]],[R[14]]]],[11,"into",E,E,147,[[["self"]],[U]]],[11,R[46],E,E,147,[[["self"]],[T]]],[11,R[12],E,E,147,[[["self"]],[T]]],[11,R[18],E,E,147,[[["self"]],[R[47]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[11],E,E,148,[[[U]],[R[14]]]],[11,R[13],E,E,148,[[["self"]],[R[14]]]],[11,"into",E,E,148,[[["self"]],[U]]],[11,R[46],E,E,148,[[["self"]],[T]]],[11,R[12],E,E,148,[[["self"]],[T]]],[11,R[18],E,E,148,[[["self"]],[R[47]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[11],E,E,149,[[[U]],[R[14]]]],[11,R[13],E,E,149,[[["self"]],[R[14]]]],[11,"into",E,E,149,[[["self"]],[U]]],[11,R[46],E,E,149,[[["self"]],[T]]],[11,R[12],E,E,149,[[["self"]],[T]]],[11,R[18],E,E,149,[[["self"]],[R[47]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[11],E,E,150,[[[U]],[R[14]]]],[11,R[13],E,E,150,[[["self"]],[R[14]]]],[11,"into",E,E,150,[[["self"]],[U]]],[11,R[46],E,E,150,[[["self"]],[T]]],[11,R[12],E,E,150,[[["self"]],[T]]],[11,R[18],E,E,150,[[["self"]],[R[47]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[11],E,E,151,[[[U]],[R[14]]]],[11,R[13],E,E,151,[[["self"]],[R[14]]]],[11,"into",E,E,151,[[["self"]],[U]]],[11,R[46],E,E,151,[[["self"]],[T]]],[11,R[12],E,E,151,[[["self"]],[T]]],[11,R[18],E,E,151,[[["self"]],[R[47]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[11],E,E,152,[[[U]],[R[14]]]],[11,R[13],E,E,152,[[["self"]],[R[14]]]],[11,"into",E,E,152,[[["self"]],[U]]],[11,R[46],E,E,152,[[["self"]],[T]]],[11,R[12],E,E,152,[[["self"]],[T]]],[11,R[18],E,E,152,[[["self"]],[R[47]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[11],E,E,153,[[[U]],[R[14]]]],[11,R[13],E,E,153,[[["self"]],[R[14]]]],[11,"into",E,E,153,[[["self"]],[U]]],[11,R[46],E,E,153,[[["self"]],[T]]],[11,R[12],E,E,153,[[["self"]],[T]]],[11,R[18],E,E,153,[[["self"]],[R[47]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[11],E,E,154,[[[U]],[R[14]]]],[11,R[13],E,E,154,[[["self"]],[R[14]]]],[11,"into",E,E,154,[[["self"]],[U]]],[11,R[46],E,E,154,[[["self"]],[T]]],[11,R[12],E,E,154,[[["self"]],[T]]],[11,R[18],E,E,154,[[["self"]],[R[47]]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[11],E,E,155,[[[U]],[R[14]]]],[11,R[13],E,E,155,[[["self"]],[R[14]]]],[11,"into",E,E,155,[[["self"]],[U]]],[11,R[46],E,E,155,[[["self"]],[T]]],[11,R[12],E,E,155,[[["self"]],[T]]],[11,R[18],E,E,155,[[["self"]],[R[47]]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[11],E,E,156,[[[U]],[R[14]]]],[11,R[13],E,E,156,[[["self"]],[R[14]]]],[11,"into",E,E,156,[[["self"]],[U]]],[11,R[46],E,E,156,[[["self"]],[T]]],[11,R[12],E,E,156,[[["self"]],[T]]],[11,R[18],E,E,156,[[["self"]],[R[47]]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[11],E,E,157,[[[U]],[R[14]]]],[11,R[13],E,E,157,[[["self"]],[R[14]]]],[11,"into",E,E,157,[[["self"]],[U]]],[11,R[46],E,E,157,[[["self"]],[T]]],[11,R[12],E,E,157,[[["self"]],[T]]],[11,R[18],E,E,157,[[["self"]],[R[47]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[11],E,E,158,[[[U]],[R[14]]]],[11,R[13],E,E,158,[[["self"]],[R[14]]]],[11,"into",E,E,158,[[["self"]],[U]]],[11,R[46],E,E,158,[[["self"]],[T]]],[11,R[12],E,E,158,[[["self"]],[T]]],[11,R[18],E,E,158,[[["self"]],[R[47]]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[11],E,E,159,[[[U]],[R[14]]]],[11,R[13],E,E,159,[[["self"]],[R[14]]]],[11,"into",E,E,159,[[["self"]],[U]]],[11,R[46],E,E,159,[[["self"]],[T]]],[11,R[12],E,E,159,[[["self"]],[T]]],[11,R[18],E,E,159,[[["self"]],[R[47]]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[11],E,E,160,[[[U]],[R[14]]]],[11,R[13],E,E,160,[[["self"]],[R[14]]]],[11,"into",E,E,160,[[["self"]],[U]]],[11,R[46],E,E,160,[[["self"]],[T]]],[11,R[12],E,E,160,[[["self"]],[T]]],[11,R[18],E,E,160,[[["self"]],[R[47]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[11],E,E,161,[[[U]],[R[14]]]],[11,R[13],E,E,161,[[["self"]],[R[14]]]],[11,"into",E,E,161,[[["self"]],[U]]],[11,R[46],E,E,161,[[["self"]],[T]]],[11,R[12],E,E,161,[[["self"]],[T]]],[11,R[18],E,E,161,[[["self"]],[R[47]]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[11],E,E,162,[[[U]],[R[14]]]],[11,R[13],E,E,162,[[["self"]],[R[14]]]],[11,"into",E,E,162,[[["self"]],[U]]],[11,R[46],E,E,162,[[["self"]],[T]]],[11,R[12],E,E,162,[[["self"]],[T]]],[11,R[18],E,E,162,[[["self"]],[R[47]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[11],E,E,163,[[[U]],[R[14]]]],[11,R[13],E,E,163,[[["self"]],[R[14]]]],[11,"into",E,E,163,[[["self"]],[U]]],[11,R[46],E,E,163,[[["self"]],[T]]],[11,R[12],E,E,163,[[["self"]],[T]]],[11,R[18],E,E,163,[[["self"]],[R[47]]]],[11,"from",E,E,273,[[[T]],[T]]],[11,R[11],E,E,273,[[[U]],[R[14]]]],[11,R[13],E,E,273,[[["self"]],[R[14]]]],[11,"into",E,E,273,[[["self"]],[U]]],[11,R[46],E,E,273,[[["self"]],[T]]],[11,R[12],E,E,273,[[["self"]],[T]]],[11,R[18],E,E,273,[[["self"]],[R[47]]]],[11,"from",E,E,274,[[[T]],[T]]],[11,R[11],E,E,274,[[[U]],[R[14]]]],[11,R[13],E,E,274,[[["self"]],[R[14]]]],[11,"into",E,E,274,[[["self"]],[U]]],[11,R[46],E,E,274,[[["self"]],[T]]],[11,R[12],E,E,274,[[["self"]],[T]]],[11,R[18],E,E,274,[[["self"]],[R[47]]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[11],E,E,164,[[[U]],[R[14]]]],[11,R[13],E,E,164,[[["self"]],[R[14]]]],[11,"into",E,E,164,[[["self"]],[U]]],[11,R[46],E,E,164,[[["self"]],[T]]],[11,R[12],E,E,164,[[["self"]],[T]]],[11,R[18],E,E,164,[[["self"]],[R[47]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[11],E,E,165,[[[U]],[R[14]]]],[11,R[13],E,E,165,[[["self"]],[R[14]]]],[11,"into",E,E,165,[[["self"]],[U]]],[11,R[46],E,E,165,[[["self"]],[T]]],[11,R[12],E,E,165,[[["self"]],[T]]],[11,R[18],E,E,165,[[["self"]],[R[47]]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[11],E,E,166,[[[U]],[R[14]]]],[11,R[13],E,E,166,[[["self"]],[R[14]]]],[11,"into",E,E,166,[[["self"]],[U]]],[11,R[46],E,E,166,[[["self"]],[T]]],[11,R[12],E,E,166,[[["self"]],[T]]],[11,R[18],E,E,166,[[["self"]],[R[47]]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[11],E,E,167,[[[U]],[R[14]]]],[11,R[13],E,E,167,[[["self"]],[R[14]]]],[11,"into",E,E,167,[[["self"]],[U]]],[11,R[46],E,E,167,[[["self"]],[T]]],[11,R[12],E,E,167,[[["self"]],[T]]],[11,R[18],E,E,167,[[["self"]],[R[47]]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[11],E,E,168,[[[U]],[R[14]]]],[11,R[13],E,E,168,[[["self"]],[R[14]]]],[11,"into",E,E,168,[[["self"]],[U]]],[11,R[46],E,E,168,[[["self"]],[T]]],[11,R[12],E,E,168,[[["self"]],[T]]],[11,R[18],E,E,168,[[["self"]],[R[47]]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[11],E,E,169,[[[U]],[R[14]]]],[11,R[13],E,E,169,[[["self"]],[R[14]]]],[11,"into",E,E,169,[[["self"]],[U]]],[11,R[46],E,E,169,[[["self"]],[T]]],[11,R[12],E,E,169,[[["self"]],[T]]],[11,R[18],E,E,169,[[["self"]],[R[47]]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[11],E,E,170,[[[U]],[R[14]]]],[11,R[13],E,E,170,[[["self"]],[R[14]]]],[11,"into",E,E,170,[[["self"]],[U]]],[11,R[46],E,E,170,[[["self"]],[T]]],[11,R[12],E,E,170,[[["self"]],[T]]],[11,R[18],E,E,170,[[["self"]],[R[47]]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[11],E,E,171,[[[U]],[R[14]]]],[11,R[13],E,E,171,[[["self"]],[R[14]]]],[11,"into",E,E,171,[[["self"]],[U]]],[11,R[46],E,E,171,[[["self"]],[T]]],[11,R[12],E,E,171,[[["self"]],[T]]],[11,R[18],E,E,171,[[["self"]],[R[47]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[11],E,E,172,[[[U]],[R[14]]]],[11,R[13],E,E,172,[[["self"]],[R[14]]]],[11,"into",E,E,172,[[["self"]],[U]]],[11,R[46],E,E,172,[[["self"]],[T]]],[11,R[12],E,E,172,[[["self"]],[T]]],[11,R[18],E,E,172,[[["self"]],[R[47]]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[11],E,E,173,[[[U]],[R[14]]]],[11,R[13],E,E,173,[[["self"]],[R[14]]]],[11,"into",E,E,173,[[["self"]],[U]]],[11,R[46],E,E,173,[[["self"]],[T]]],[11,R[12],E,E,173,[[["self"]],[T]]],[11,R[18],E,E,173,[[["self"]],[R[47]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[11],E,E,174,[[[U]],[R[14]]]],[11,R[13],E,E,174,[[["self"]],[R[14]]]],[11,"into",E,E,174,[[["self"]],[U]]],[11,R[46],E,E,174,[[["self"]],[T]]],[11,R[12],E,E,174,[[["self"]],[T]]],[11,R[18],E,E,174,[[["self"]],[R[47]]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[11],E,E,175,[[[U]],[R[14]]]],[11,R[13],E,E,175,[[["self"]],[R[14]]]],[11,"into",E,E,175,[[["self"]],[U]]],[11,R[46],E,E,175,[[["self"]],[T]]],[11,R[12],E,E,175,[[["self"]],[T]]],[11,R[18],E,E,175,[[["self"]],[R[47]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[11],E,E,176,[[[U]],[R[14]]]],[11,R[13],E,E,176,[[["self"]],[R[14]]]],[11,"into",E,E,176,[[["self"]],[U]]],[11,R[46],E,E,176,[[["self"]],[T]]],[11,R[12],E,E,176,[[["self"]],[T]]],[11,R[18],E,E,176,[[["self"]],[R[47]]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[11],E,E,177,[[[U]],[R[14]]]],[11,R[13],E,E,177,[[["self"]],[R[14]]]],[11,"into",E,E,177,[[["self"]],[U]]],[11,R[46],E,E,177,[[["self"]],[T]]],[11,R[12],E,E,177,[[["self"]],[T]]],[11,R[18],E,E,177,[[["self"]],[R[47]]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[11],E,E,178,[[[U]],[R[14]]]],[11,R[13],E,E,178,[[["self"]],[R[14]]]],[11,"into",E,E,178,[[["self"]],[U]]],[11,R[46],E,E,178,[[["self"]],[T]]],[11,R[12],E,E,178,[[["self"]],[T]]],[11,R[18],E,E,178,[[["self"]],[R[47]]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[11],E,E,179,[[[U]],[R[14]]]],[11,R[13],E,E,179,[[["self"]],[R[14]]]],[11,"into",E,E,179,[[["self"]],[U]]],[11,R[46],E,E,179,[[["self"]],[T]]],[11,R[12],E,E,179,[[["self"]],[T]]],[11,R[18],E,E,179,[[["self"]],[R[47]]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[11],E,E,180,[[[U]],[R[14]]]],[11,R[13],E,E,180,[[["self"]],[R[14]]]],[11,"into",E,E,180,[[["self"]],[U]]],[11,R[46],E,E,180,[[["self"]],[T]]],[11,R[12],E,E,180,[[["self"]],[T]]],[11,R[18],E,E,180,[[["self"]],[R[47]]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[11],E,E,181,[[[U]],[R[14]]]],[11,R[13],E,E,181,[[["self"]],[R[14]]]],[11,"into",E,E,181,[[["self"]],[U]]],[11,R[46],E,E,181,[[["self"]],[T]]],[11,R[12],E,E,181,[[["self"]],[T]]],[11,R[18],E,E,181,[[["self"]],[R[47]]]],[11,"from",E,E,182,[[[T]],[T]]],[11,R[11],E,E,182,[[[U]],[R[14]]]],[11,R[13],E,E,182,[[["self"]],[R[14]]]],[11,"into",E,E,182,[[["self"]],[U]]],[11,R[46],E,E,182,[[["self"]],[T]]],[11,R[12],E,E,182,[[["self"]],[T]]],[11,R[18],E,E,182,[[["self"]],[R[47]]]],[11,"from",E,E,183,[[[T]],[T]]],[11,R[11],E,E,183,[[[U]],[R[14]]]],[11,R[13],E,E,183,[[["self"]],[R[14]]]],[11,"into",E,E,183,[[["self"]],[U]]],[11,R[46],E,E,183,[[["self"]],[T]]],[11,R[12],E,E,183,[[["self"]],[T]]],[11,R[18],E,E,183,[[["self"]],[R[47]]]],[11,"from",E,E,184,[[[T]],[T]]],[11,R[11],E,E,184,[[[U]],[R[14]]]],[11,R[13],E,E,184,[[["self"]],[R[14]]]],[11,"into",E,E,184,[[["self"]],[U]]],[11,R[46],E,E,184,[[["self"]],[T]]],[11,R[12],E,E,184,[[["self"]],[T]]],[11,R[18],E,E,184,[[["self"]],[R[47]]]],[11,"from",E,E,185,[[[T]],[T]]],[11,R[11],E,E,185,[[[U]],[R[14]]]],[11,R[13],E,E,185,[[["self"]],[R[14]]]],[11,"into",E,E,185,[[["self"]],[U]]],[11,R[46],E,E,185,[[["self"]],[T]]],[11,R[12],E,E,185,[[["self"]],[T]]],[11,R[18],E,E,185,[[["self"]],[R[47]]]],[11,"from",E,E,186,[[[T]],[T]]],[11,R[11],E,E,186,[[[U]],[R[14]]]],[11,R[13],E,E,186,[[["self"]],[R[14]]]],[11,"into",E,E,186,[[["self"]],[U]]],[11,R[46],E,E,186,[[["self"]],[T]]],[11,R[12],E,E,186,[[["self"]],[T]]],[11,R[18],E,E,186,[[["self"]],[R[47]]]],[11,"from",E,E,187,[[[T]],[T]]],[11,R[11],E,E,187,[[[U]],[R[14]]]],[11,R[13],E,E,187,[[["self"]],[R[14]]]],[11,"into",E,E,187,[[["self"]],[U]]],[11,R[46],E,E,187,[[["self"]],[T]]],[11,R[12],E,E,187,[[["self"]],[T]]],[11,R[18],E,E,187,[[["self"]],[R[47]]]],[11,"from",E,E,188,[[[T]],[T]]],[11,R[11],E,E,188,[[[U]],[R[14]]]],[11,R[13],E,E,188,[[["self"]],[R[14]]]],[11,"into",E,E,188,[[["self"]],[U]]],[11,R[46],E,E,188,[[["self"]],[T]]],[11,R[12],E,E,188,[[["self"]],[T]]],[11,R[18],E,E,188,[[["self"]],[R[47]]]],[11,"from",E,E,189,[[[T]],[T]]],[11,R[11],E,E,189,[[[U]],[R[14]]]],[11,R[13],E,E,189,[[["self"]],[R[14]]]],[11,"into",E,E,189,[[["self"]],[U]]],[11,R[46],E,E,189,[[["self"]],[T]]],[11,R[12],E,E,189,[[["self"]],[T]]],[11,R[18],E,E,189,[[["self"]],[R[47]]]],[11,"from",E,E,190,[[[T]],[T]]],[11,R[11],E,E,190,[[[U]],[R[14]]]],[11,R[13],E,E,190,[[["self"]],[R[14]]]],[11,"into",E,E,190,[[["self"]],[U]]],[11,R[46],E,E,190,[[["self"]],[T]]],[11,R[12],E,E,190,[[["self"]],[T]]],[11,R[18],E,E,190,[[["self"]],[R[47]]]],[11,"from",E,E,191,[[[T]],[T]]],[11,R[11],E,E,191,[[[U]],[R[14]]]],[11,R[13],E,E,191,[[["self"]],[R[14]]]],[11,"into",E,E,191,[[["self"]],[U]]],[11,R[46],E,E,191,[[["self"]],[T]]],[11,R[12],E,E,191,[[["self"]],[T]]],[11,R[18],E,E,191,[[["self"]],[R[47]]]],[11,"from",E,E,192,[[[T]],[T]]],[11,R[11],E,E,192,[[[U]],[R[14]]]],[11,R[13],E,E,192,[[["self"]],[R[14]]]],[11,"into",E,E,192,[[["self"]],[U]]],[11,R[46],E,E,192,[[["self"]],[T]]],[11,R[12],E,E,192,[[["self"]],[T]]],[11,R[18],E,E,192,[[["self"]],[R[47]]]],[11,"from",E,E,193,[[[T]],[T]]],[11,R[11],E,E,193,[[[U]],[R[14]]]],[11,R[13],E,E,193,[[["self"]],[R[14]]]],[11,"into",E,E,193,[[["self"]],[U]]],[11,R[46],E,E,193,[[["self"]],[T]]],[11,R[12],E,E,193,[[["self"]],[T]]],[11,R[18],E,E,193,[[["self"]],[R[47]]]],[11,"from",E,E,194,[[[T]],[T]]],[11,R[11],E,E,194,[[[U]],[R[14]]]],[11,R[13],E,E,194,[[["self"]],[R[14]]]],[11,"into",E,E,194,[[["self"]],[U]]],[11,R[46],E,E,194,[[["self"]],[T]]],[11,R[12],E,E,194,[[["self"]],[T]]],[11,R[18],E,E,194,[[["self"]],[R[47]]]],[11,"from",E,E,195,[[[T]],[T]]],[11,R[11],E,E,195,[[[U]],[R[14]]]],[11,R[13],E,E,195,[[["self"]],[R[14]]]],[11,"into",E,E,195,[[["self"]],[U]]],[11,R[46],E,E,195,[[["self"]],[T]]],[11,R[12],E,E,195,[[["self"]],[T]]],[11,R[18],E,E,195,[[["self"]],[R[47]]]],[11,"from",E,E,196,[[[T]],[T]]],[11,R[11],E,E,196,[[[U]],[R[14]]]],[11,R[13],E,E,196,[[["self"]],[R[14]]]],[11,"into",E,E,196,[[["self"]],[U]]],[11,R[46],E,E,196,[[["self"]],[T]]],[11,R[12],E,E,196,[[["self"]],[T]]],[11,R[18],E,E,196,[[["self"]],[R[47]]]],[11,"from",E,E,197,[[[T]],[T]]],[11,R[11],E,E,197,[[[U]],[R[14]]]],[11,R[13],E,E,197,[[["self"]],[R[14]]]],[11,"into",E,E,197,[[["self"]],[U]]],[11,R[46],E,E,197,[[["self"]],[T]]],[11,R[12],E,E,197,[[["self"]],[T]]],[11,R[18],E,E,197,[[["self"]],[R[47]]]],[11,"from",E,E,198,[[[T]],[T]]],[11,R[11],E,E,198,[[[U]],[R[14]]]],[11,R[13],E,E,198,[[["self"]],[R[14]]]],[11,"into",E,E,198,[[["self"]],[U]]],[11,R[46],E,E,198,[[["self"]],[T]]],[11,R[12],E,E,198,[[["self"]],[T]]],[11,R[18],E,E,198,[[["self"]],[R[47]]]],[11,"from",E,E,199,[[[T]],[T]]],[11,R[11],E,E,199,[[[U]],[R[14]]]],[11,R[13],E,E,199,[[["self"]],[R[14]]]],[11,"into",E,E,199,[[["self"]],[U]]],[11,R[46],E,E,199,[[["self"]],[T]]],[11,R[12],E,E,199,[[["self"]],[T]]],[11,R[18],E,E,199,[[["self"]],[R[47]]]],[11,"from",E,E,200,[[[T]],[T]]],[11,R[11],E,E,200,[[[U]],[R[14]]]],[11,R[13],E,E,200,[[["self"]],[R[14]]]],[11,"into",E,E,200,[[["self"]],[U]]],[11,R[46],E,E,200,[[["self"]],[T]]],[11,R[12],E,E,200,[[["self"]],[T]]],[11,R[18],E,E,200,[[["self"]],[R[47]]]],[11,"from",E,E,201,[[[T]],[T]]],[11,R[11],E,E,201,[[[U]],[R[14]]]],[11,R[13],E,E,201,[[["self"]],[R[14]]]],[11,"into",E,E,201,[[["self"]],[U]]],[11,R[46],E,E,201,[[["self"]],[T]]],[11,R[12],E,E,201,[[["self"]],[T]]],[11,R[18],E,E,201,[[["self"]],[R[47]]]],[11,"from",E,E,202,[[[T]],[T]]],[11,R[11],E,E,202,[[[U]],[R[14]]]],[11,R[13],E,E,202,[[["self"]],[R[14]]]],[11,"into",E,E,202,[[["self"]],[U]]],[11,R[46],E,E,202,[[["self"]],[T]]],[11,R[12],E,E,202,[[["self"]],[T]]],[11,R[18],E,E,202,[[["self"]],[R[47]]]],[11,"from",E,E,203,[[[T]],[T]]],[11,R[11],E,E,203,[[[U]],[R[14]]]],[11,R[13],E,E,203,[[["self"]],[R[14]]]],[11,"into",E,E,203,[[["self"]],[U]]],[11,R[46],E,E,203,[[["self"]],[T]]],[11,R[12],E,E,203,[[["self"]],[T]]],[11,R[18],E,E,203,[[["self"]],[R[47]]]],[11,"from",E,E,204,[[[T]],[T]]],[11,R[11],E,E,204,[[[U]],[R[14]]]],[11,R[13],E,E,204,[[["self"]],[R[14]]]],[11,"into",E,E,204,[[["self"]],[U]]],[11,R[46],E,E,204,[[["self"]],[T]]],[11,R[12],E,E,204,[[["self"]],[T]]],[11,R[18],E,E,204,[[["self"]],[R[47]]]],[11,"from",E,E,205,[[[T]],[T]]],[11,R[11],E,E,205,[[[U]],[R[14]]]],[11,R[13],E,E,205,[[["self"]],[R[14]]]],[11,"into",E,E,205,[[["self"]],[U]]],[11,R[46],E,E,205,[[["self"]],[T]]],[11,R[12],E,E,205,[[["self"]],[T]]],[11,R[18],E,E,205,[[["self"]],[R[47]]]],[11,"from",E,E,206,[[[T]],[T]]],[11,R[11],E,E,206,[[[U]],[R[14]]]],[11,R[13],E,E,206,[[["self"]],[R[14]]]],[11,"into",E,E,206,[[["self"]],[U]]],[11,R[46],E,E,206,[[["self"]],[T]]],[11,R[12],E,E,206,[[["self"]],[T]]],[11,R[18],E,E,206,[[["self"]],[R[47]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,R[11],E,E,207,[[[U]],[R[14]]]],[11,R[13],E,E,207,[[["self"]],[R[14]]]],[11,"into",E,E,207,[[["self"]],[U]]],[11,R[46],E,E,207,[[["self"]],[T]]],[11,R[12],E,E,207,[[["self"]],[T]]],[11,R[18],E,E,207,[[["self"]],[R[47]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,R[11],E,E,208,[[[U]],[R[14]]]],[11,R[13],E,E,208,[[["self"]],[R[14]]]],[11,"into",E,E,208,[[["self"]],[U]]],[11,R[46],E,E,208,[[["self"]],[T]]],[11,R[12],E,E,208,[[["self"]],[T]]],[11,R[18],E,E,208,[[["self"]],[R[47]]]],[11,"from",E,E,209,[[[T]],[T]]],[11,R[11],E,E,209,[[[U]],[R[14]]]],[11,R[13],E,E,209,[[["self"]],[R[14]]]],[11,"into",E,E,209,[[["self"]],[U]]],[11,R[46],E,E,209,[[["self"]],[T]]],[11,R[12],E,E,209,[[["self"]],[T]]],[11,R[18],E,E,209,[[["self"]],[R[47]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,R[11],E,E,210,[[[U]],[R[14]]]],[11,R[13],E,E,210,[[["self"]],[R[14]]]],[11,"into",E,E,210,[[["self"]],[U]]],[11,R[46],E,E,210,[[["self"]],[T]]],[11,R[12],E,E,210,[[["self"]],[T]]],[11,R[18],E,E,210,[[["self"]],[R[47]]]],[11,"from",E,E,211,[[[T]],[T]]],[11,R[11],E,E,211,[[[U]],[R[14]]]],[11,R[13],E,E,211,[[["self"]],[R[14]]]],[11,"into",E,E,211,[[["self"]],[U]]],[11,R[46],E,E,211,[[["self"]],[T]]],[11,R[12],E,E,211,[[["self"]],[T]]],[11,R[18],E,E,211,[[["self"]],[R[47]]]],[11,"from",E,E,212,[[[T]],[T]]],[11,R[11],E,E,212,[[[U]],[R[14]]]],[11,R[13],E,E,212,[[["self"]],[R[14]]]],[11,"into",E,E,212,[[["self"]],[U]]],[11,R[46],E,E,212,[[["self"]],[T]]],[11,R[12],E,E,212,[[["self"]],[T]]],[11,R[18],E,E,212,[[["self"]],[R[47]]]],[11,"from",E,E,213,[[[T]],[T]]],[11,R[11],E,E,213,[[[U]],[R[14]]]],[11,R[13],E,E,213,[[["self"]],[R[14]]]],[11,"into",E,E,213,[[["self"]],[U]]],[11,R[46],E,E,213,[[["self"]],[T]]],[11,R[12],E,E,213,[[["self"]],[T]]],[11,R[18],E,E,213,[[["self"]],[R[47]]]],[11,"from",E,E,214,[[[T]],[T]]],[11,R[11],E,E,214,[[[U]],[R[14]]]],[11,R[13],E,E,214,[[["self"]],[R[14]]]],[11,"into",E,E,214,[[["self"]],[U]]],[11,R[46],E,E,214,[[["self"]],[T]]],[11,R[12],E,E,214,[[["self"]],[T]]],[11,R[18],E,E,214,[[["self"]],[R[47]]]],[11,"from",E,E,215,[[[T]],[T]]],[11,R[11],E,E,215,[[[U]],[R[14]]]],[11,R[13],E,E,215,[[["self"]],[R[14]]]],[11,"into",E,E,215,[[["self"]],[U]]],[11,R[46],E,E,215,[[["self"]],[T]]],[11,R[12],E,E,215,[[["self"]],[T]]],[11,R[18],E,E,215,[[["self"]],[R[47]]]],[11,"from",E,E,216,[[[T]],[T]]],[11,R[11],E,E,216,[[[U]],[R[14]]]],[11,R[13],E,E,216,[[["self"]],[R[14]]]],[11,"into",E,E,216,[[["self"]],[U]]],[11,R[46],E,E,216,[[["self"]],[T]]],[11,R[12],E,E,216,[[["self"]],[T]]],[11,R[18],E,E,216,[[["self"]],[R[47]]]],[11,"from",E,E,217,[[[T]],[T]]],[11,R[11],E,E,217,[[[U]],[R[14]]]],[11,R[13],E,E,217,[[["self"]],[R[14]]]],[11,"into",E,E,217,[[["self"]],[U]]],[11,R[46],E,E,217,[[["self"]],[T]]],[11,R[12],E,E,217,[[["self"]],[T]]],[11,R[18],E,E,217,[[["self"]],[R[47]]]],[11,"from",E,E,218,[[[T]],[T]]],[11,R[11],E,E,218,[[[U]],[R[14]]]],[11,R[13],E,E,218,[[["self"]],[R[14]]]],[11,"into",E,E,218,[[["self"]],[U]]],[11,R[46],E,E,218,[[["self"]],[T]]],[11,R[12],E,E,218,[[["self"]],[T]]],[11,R[18],E,E,218,[[["self"]],[R[47]]]],[11,"from",E,E,219,[[[T]],[T]]],[11,R[11],E,E,219,[[[U]],[R[14]]]],[11,R[13],E,E,219,[[["self"]],[R[14]]]],[11,"into",E,E,219,[[["self"]],[U]]],[11,R[46],E,E,219,[[["self"]],[T]]],[11,R[12],E,E,219,[[["self"]],[T]]],[11,R[18],E,E,219,[[["self"]],[R[47]]]],[11,"from",E,E,220,[[[T]],[T]]],[11,R[11],E,E,220,[[[U]],[R[14]]]],[11,R[13],E,E,220,[[["self"]],[R[14]]]],[11,"into",E,E,220,[[["self"]],[U]]],[11,R[46],E,E,220,[[["self"]],[T]]],[11,R[12],E,E,220,[[["self"]],[T]]],[11,R[18],E,E,220,[[["self"]],[R[47]]]],[11,"from",E,E,221,[[[T]],[T]]],[11,R[11],E,E,221,[[[U]],[R[14]]]],[11,R[13],E,E,221,[[["self"]],[R[14]]]],[11,"into",E,E,221,[[["self"]],[U]]],[11,R[46],E,E,221,[[["self"]],[T]]],[11,R[12],E,E,221,[[["self"]],[T]]],[11,R[18],E,E,221,[[["self"]],[R[47]]]],[11,"from",E,E,222,[[[T]],[T]]],[11,R[11],E,E,222,[[[U]],[R[14]]]],[11,R[13],E,E,222,[[["self"]],[R[14]]]],[11,"into",E,E,222,[[["self"]],[U]]],[11,R[46],E,E,222,[[["self"]],[T]]],[11,R[12],E,E,222,[[["self"]],[T]]],[11,R[18],E,E,222,[[["self"]],[R[47]]]],[11,"from",E,E,223,[[[T]],[T]]],[11,R[11],E,E,223,[[[U]],[R[14]]]],[11,R[13],E,E,223,[[["self"]],[R[14]]]],[11,"into",E,E,223,[[["self"]],[U]]],[11,R[46],E,E,223,[[["self"]],[T]]],[11,R[12],E,E,223,[[["self"]],[T]]],[11,R[18],E,E,223,[[["self"]],[R[47]]]],[11,"from",E,E,224,[[[T]],[T]]],[11,R[11],E,E,224,[[[U]],[R[14]]]],[11,R[13],E,E,224,[[["self"]],[R[14]]]],[11,"into",E,E,224,[[["self"]],[U]]],[11,R[46],E,E,224,[[["self"]],[T]]],[11,R[12],E,E,224,[[["self"]],[T]]],[11,R[18],E,E,224,[[["self"]],[R[47]]]],[11,"from",E,E,225,[[[T]],[T]]],[11,R[11],E,E,225,[[[U]],[R[14]]]],[11,R[13],E,E,225,[[["self"]],[R[14]]]],[11,"into",E,E,225,[[["self"]],[U]]],[11,R[46],E,E,225,[[["self"]],[T]]],[11,R[12],E,E,225,[[["self"]],[T]]],[11,R[18],E,E,225,[[["self"]],[R[47]]]],[11,"from",E,E,226,[[[T]],[T]]],[11,R[11],E,E,226,[[[U]],[R[14]]]],[11,R[13],E,E,226,[[["self"]],[R[14]]]],[11,"into",E,E,226,[[["self"]],[U]]],[11,R[46],E,E,226,[[["self"]],[T]]],[11,R[12],E,E,226,[[["self"]],[T]]],[11,R[18],E,E,226,[[["self"]],[R[47]]]],[11,"from",E,E,227,[[[T]],[T]]],[11,R[11],E,E,227,[[[U]],[R[14]]]],[11,R[13],E,E,227,[[["self"]],[R[14]]]],[11,"into",E,E,227,[[["self"]],[U]]],[11,R[46],E,E,227,[[["self"]],[T]]],[11,R[12],E,E,227,[[["self"]],[T]]],[11,R[18],E,E,227,[[["self"]],[R[47]]]],[11,"from",E,E,228,[[[T]],[T]]],[11,R[11],E,E,228,[[[U]],[R[14]]]],[11,R[13],E,E,228,[[["self"]],[R[14]]]],[11,"into",E,E,228,[[["self"]],[U]]],[11,R[46],E,E,228,[[["self"]],[T]]],[11,R[12],E,E,228,[[["self"]],[T]]],[11,R[18],E,E,228,[[["self"]],[R[47]]]],[11,"from",E,E,229,[[[T]],[T]]],[11,R[11],E,E,229,[[[U]],[R[14]]]],[11,R[13],E,E,229,[[["self"]],[R[14]]]],[11,"into",E,E,229,[[["self"]],[U]]],[11,R[46],E,E,229,[[["self"]],[T]]],[11,R[12],E,E,229,[[["self"]],[T]]],[11,R[18],E,E,229,[[["self"]],[R[47]]]],[11,"from",E,E,230,[[[T]],[T]]],[11,R[11],E,E,230,[[[U]],[R[14]]]],[11,R[13],E,E,230,[[["self"]],[R[14]]]],[11,"into",E,E,230,[[["self"]],[U]]],[11,R[46],E,E,230,[[["self"]],[T]]],[11,R[12],E,E,230,[[["self"]],[T]]],[11,R[18],E,E,230,[[["self"]],[R[47]]]],[11,"from",E,E,231,[[[T]],[T]]],[11,R[11],E,E,231,[[[U]],[R[14]]]],[11,R[13],E,E,231,[[["self"]],[R[14]]]],[11,"into",E,E,231,[[["self"]],[U]]],[11,R[46],E,E,231,[[["self"]],[T]]],[11,R[12],E,E,231,[[["self"]],[T]]],[11,R[18],E,E,231,[[["self"]],[R[47]]]],[11,"from",E,E,232,[[[T]],[T]]],[11,R[11],E,E,232,[[[U]],[R[14]]]],[11,R[13],E,E,232,[[["self"]],[R[14]]]],[11,"into",E,E,232,[[["self"]],[U]]],[11,R[46],E,E,232,[[["self"]],[T]]],[11,R[12],E,E,232,[[["self"]],[T]]],[11,R[18],E,E,232,[[["self"]],[R[47]]]],[11,"from",E,E,233,[[[T]],[T]]],[11,R[11],E,E,233,[[[U]],[R[14]]]],[11,R[13],E,E,233,[[["self"]],[R[14]]]],[11,"into",E,E,233,[[["self"]],[U]]],[11,R[46],E,E,233,[[["self"]],[T]]],[11,R[12],E,E,233,[[["self"]],[T]]],[11,R[18],E,E,233,[[["self"]],[R[47]]]],[11,"from",E,E,234,[[[T]],[T]]],[11,R[11],E,E,234,[[[U]],[R[14]]]],[11,R[13],E,E,234,[[["self"]],[R[14]]]],[11,"into",E,E,234,[[["self"]],[U]]],[11,R[46],E,E,234,[[["self"]],[T]]],[11,R[12],E,E,234,[[["self"]],[T]]],[11,R[18],E,E,234,[[["self"]],[R[47]]]],[11,"from",E,E,235,[[[T]],[T]]],[11,R[11],E,E,235,[[[U]],[R[14]]]],[11,R[13],E,E,235,[[["self"]],[R[14]]]],[11,"into",E,E,235,[[["self"]],[U]]],[11,R[46],E,E,235,[[["self"]],[T]]],[11,R[12],E,E,235,[[["self"]],[T]]],[11,R[18],E,E,235,[[["self"]],[R[47]]]],[11,"from",E,E,236,[[[T]],[T]]],[11,R[11],E,E,236,[[[U]],[R[14]]]],[11,R[13],E,E,236,[[["self"]],[R[14]]]],[11,"into",E,E,236,[[["self"]],[U]]],[11,R[46],E,E,236,[[["self"]],[T]]],[11,R[12],E,E,236,[[["self"]],[T]]],[11,R[18],E,E,236,[[["self"]],[R[47]]]],[11,"from",E,E,237,[[[T]],[T]]],[11,R[11],E,E,237,[[[U]],[R[14]]]],[11,R[13],E,E,237,[[["self"]],[R[14]]]],[11,"into",E,E,237,[[["self"]],[U]]],[11,R[46],E,E,237,[[["self"]],[T]]],[11,R[12],E,E,237,[[["self"]],[T]]],[11,R[18],E,E,237,[[["self"]],[R[47]]]],[11,"from",E,E,238,[[[T]],[T]]],[11,R[11],E,E,238,[[[U]],[R[14]]]],[11,R[13],E,E,238,[[["self"]],[R[14]]]],[11,"into",E,E,238,[[["self"]],[U]]],[11,R[46],E,E,238,[[["self"]],[T]]],[11,R[12],E,E,238,[[["self"]],[T]]],[11,R[18],E,E,238,[[["self"]],[R[47]]]],[11,"from",E,E,239,[[[T]],[T]]],[11,R[11],E,E,239,[[[U]],[R[14]]]],[11,R[13],E,E,239,[[["self"]],[R[14]]]],[11,"into",E,E,239,[[["self"]],[U]]],[11,R[46],E,E,239,[[["self"]],[T]]],[11,R[12],E,E,239,[[["self"]],[T]]],[11,R[18],E,E,239,[[["self"]],[R[47]]]],[11,"from",E,E,240,[[[T]],[T]]],[11,R[11],E,E,240,[[[U]],[R[14]]]],[11,R[13],E,E,240,[[["self"]],[R[14]]]],[11,"into",E,E,240,[[["self"]],[U]]],[11,R[46],E,E,240,[[["self"]],[T]]],[11,R[12],E,E,240,[[["self"]],[T]]],[11,R[18],E,E,240,[[["self"]],[R[47]]]],[11,"from",E,E,241,[[[T]],[T]]],[11,R[11],E,E,241,[[[U]],[R[14]]]],[11,R[13],E,E,241,[[["self"]],[R[14]]]],[11,"into",E,E,241,[[["self"]],[U]]],[11,R[46],E,E,241,[[["self"]],[T]]],[11,R[12],E,E,241,[[["self"]],[T]]],[11,R[18],E,E,241,[[["self"]],[R[47]]]],[11,"from",E,E,242,[[[T]],[T]]],[11,R[11],E,E,242,[[[U]],[R[14]]]],[11,R[13],E,E,242,[[["self"]],[R[14]]]],[11,"into",E,E,242,[[["self"]],[U]]],[11,R[46],E,E,242,[[["self"]],[T]]],[11,R[12],E,E,242,[[["self"]],[T]]],[11,R[18],E,E,242,[[["self"]],[R[47]]]],[11,"from",E,E,243,[[[T]],[T]]],[11,R[11],E,E,243,[[[U]],[R[14]]]],[11,R[13],E,E,243,[[["self"]],[R[14]]]],[11,"into",E,E,243,[[["self"]],[U]]],[11,R[46],E,E,243,[[["self"]],[T]]],[11,R[12],E,E,243,[[["self"]],[T]]],[11,R[18],E,E,243,[[["self"]],[R[47]]]],[11,"from",E,E,244,[[[T]],[T]]],[11,R[11],E,E,244,[[[U]],[R[14]]]],[11,R[13],E,E,244,[[["self"]],[R[14]]]],[11,"into",E,E,244,[[["self"]],[U]]],[11,R[46],E,E,244,[[["self"]],[T]]],[11,R[12],E,E,244,[[["self"]],[T]]],[11,R[18],E,E,244,[[["self"]],[R[47]]]],[11,"from",E,E,245,[[[T]],[T]]],[11,R[11],E,E,245,[[[U]],[R[14]]]],[11,R[13],E,E,245,[[["self"]],[R[14]]]],[11,"into",E,E,245,[[["self"]],[U]]],[11,R[46],E,E,245,[[["self"]],[T]]],[11,R[12],E,E,245,[[["self"]],[T]]],[11,R[18],E,E,245,[[["self"]],[R[47]]]],[11,"from",E,E,246,[[[T]],[T]]],[11,R[11],E,E,246,[[[U]],[R[14]]]],[11,R[13],E,E,246,[[["self"]],[R[14]]]],[11,"into",E,E,246,[[["self"]],[U]]],[11,R[46],E,E,246,[[["self"]],[T]]],[11,R[12],E,E,246,[[["self"]],[T]]],[11,R[18],E,E,246,[[["self"]],[R[47]]]],[11,"from",E,E,247,[[[T]],[T]]],[11,R[11],E,E,247,[[[U]],[R[14]]]],[11,R[13],E,E,247,[[["self"]],[R[14]]]],[11,"into",E,E,247,[[["self"]],[U]]],[11,R[46],E,E,247,[[["self"]],[T]]],[11,R[12],E,E,247,[[["self"]],[T]]],[11,R[18],E,E,247,[[["self"]],[R[47]]]],[11,"from",E,E,248,[[[T]],[T]]],[11,R[11],E,E,248,[[[U]],[R[14]]]],[11,R[13],E,E,248,[[["self"]],[R[14]]]],[11,"into",E,E,248,[[["self"]],[U]]],[11,R[46],E,E,248,[[["self"]],[T]]],[11,R[12],E,E,248,[[["self"]],[T]]],[11,R[18],E,E,248,[[["self"]],[R[47]]]],[11,"from",R[689],E,249,[[[T]],[T]]],[11,R[11],E,E,249,[[[U]],[R[14]]]],[11,R[13],E,E,249,[[["self"]],[R[14]]]],[11,"into",E,E,249,[[["self"]],[U]]],[11,R[46],E,E,249,[[["self"]],[T]]],[11,R[12],E,E,249,[[["self"]],[T]]],[11,R[18],E,E,249,[[["self"]],[R[47]]]],[11,"from",E,E,275,[[[T]],[T]]],[11,R[11],E,E,275,[[[U]],[R[14]]]],[11,R[13],E,E,275,[[["self"]],[R[14]]]],[11,"into",E,E,275,[[["self"]],[U]]],[11,R[46],E,E,275,[[["self"]],[T]]],[11,R[12],E,E,275,[[["self"]],[T]]],[11,R[18],E,E,275,[[["self"]],[R[47]]]],[11,"from",R[690],E,276,[[[T]],[T]]],[11,R[11],E,E,276,[[[U]],[R[14]]]],[11,R[13],E,E,276,[[["self"]],[R[14]]]],[11,"into",E,E,276,[[["self"]],[U]]],[11,R[46],E,E,276,[[["self"]],[T]]],[11,R[12],E,E,276,[[["self"]],[T]]],[11,R[18],E,E,276,[[["self"]],[R[47]]]],[11,"from",R[691],E,250,[[[T]],[T]]],[11,R[11],E,E,250,[[[U]],[R[14]]]],[11,R[13],E,E,250,[[["self"]],[R[14]]]],[11,"into",E,E,250,[[["self"]],[U]]],[11,R[46],E,E,250,[[["self"]],[T]]],[11,R[12],E,E,250,[[["self"]],[T]]],[11,R[18],E,E,250,[[["self"]],[R[47]]]],[11,"eq",R[396],E,193,[[["self"],["sdl_bool"]],["bool"]]],[11,"eq",E,E,194,[[["self"],[R[700]]],["bool"]]],[11,"eq",E,E,195,[[["self"],[R[701]]],["bool"]]],[11,"eq",E,E,196,[[["self"],[R[702]]],["bool"]]],[11,"eq",E,E,197,[[["self"],[R[703]]],["bool"]]],[11,"eq",E,E,198,[[["self"],[R[704]]],["bool"]]],[11,"eq",E,E,199,[[["self"],[R[692]]],["bool"]]],[11,"eq",E,E,200,[[["self"],[R[693]]],["bool"]]],[11,"eq",E,E,201,[[["self"],[R[694]]],["bool"]]],[11,"eq",E,E,202,[[["self"],[R[695]]],["bool"]]],[11,"eq",E,E,203,[[["self"],[R[696]]],["bool"]]],[11,"eq",E,E,204,[[["self"],[R[697]]],["bool"]]],[11,"eq",E,E,205,[[["self"],[R[718]]],["bool"]]],[11,"eq",E,E,206,[[["self"],[R[719]]],["bool"]]],[11,"eq",E,E,207,[[["self"],[R[720]]],["bool"]]],[11,"eq",E,E,208,[[["self"],[R[721]]],["bool"]]],[11,"eq",E,E,209,[[["self"],[R[722]]],["bool"]]],[11,"eq",E,E,210,[[["self"],[R[723]]],["bool"]]],[11,"eq",E,E,211,[[["self"],[R[724]]],["bool"]]],[11,"eq",E,E,212,[[["self"],[R[725]]],["bool"]]],[11,"eq",E,E,213,[[["self"],[R[726]]],["bool"]]],[11,"eq",E,E,214,[[["self"],[R[727]]],["bool"]]],[11,"eq",E,E,215,[[["self"],[R[728]]],["bool"]]],[11,"eq",E,E,216,[[["self"],[R[729]]],["bool"]]],[11,"eq",E,E,217,[[["self"],[R[730]]],["bool"]]],[11,"eq",E,E,218,[[["self"],[R[731]]],["bool"]]],[11,"eq",E,E,219,[[["self"],[R[732]]],["bool"]]],[11,"eq",E,E,220,[[["self"],[R[698]]],["bool"]]],[11,"eq",E,E,221,[[["self"],[R[733]]],["bool"]]],[11,"eq",E,E,222,[[["self"],[R[734]]],["bool"]]],[11,"eq",E,E,223,[[["self"],[R[735]]],["bool"]]],[11,"eq",E,E,224,[[["self"],[R[736]]],["bool"]]],[11,"eq",E,E,225,[[["self"],[R[737]]],["bool"]]],[11,"eq",E,E,226,[[["self"],[R[738]]],["bool"]]],[11,"eq",E,E,227,[[["self"],[R[739]]],["bool"]]],[11,"eq",E,E,228,[[["self"],[R[740]]],["bool"]]],[11,"eq",E,E,229,[[["self"],[R[741]]],["bool"]]],[11,"eq",E,E,230,[[["self"],[R[742]]],["bool"]]],[11,"eq",E,E,231,[[["self"],[R[743]]],["bool"]]],[11,"eq",E,E,232,[[["self"],[R[699]]],["bool"]]],[11,"eq",E,E,233,[[["self"],[R[744]]],["bool"]]],[11,"eq",E,E,234,[[["self"],[R[745]]],["bool"]]],[11,"eq",E,E,235,[[["self"],[R[746]]],["bool"]]],[11,"eq",E,E,236,[[["self"],[R[747]]],["bool"]]],[11,"eq",E,E,237,[[["self"],[R[748]]],["bool"]]],[11,"eq",E,E,238,[[["self"],[R[749]]],["bool"]]],[11,"eq",E,E,239,[[["self"],[R[750]]],["bool"]]],[11,"eq",E,E,240,[[["self"],[R[751]]],["bool"]]],[11,"eq",E,E,241,[[["self"],[R[752]]],["bool"]]],[11,"eq",E,E,242,[[["self"],[R[753]]],["bool"]]],[11,"eq",E,E,243,[[["self"],[R[754]]],["bool"]]],[11,"eq",E,E,244,[[["self"],[R[756]]],["bool"]]],[11,"eq",E,E,245,[[["self"],[R[757]]],["bool"]]],[11,"eq",E,E,246,[[["self"],[R[758]]],["bool"]]],[11,"eq",E,E,247,[[["self"],[R[759]]],["bool"]]],[11,"eq",E,E,248,[[["self"],[R[760]]],["bool"]]],[11,"fmt",E,E,193,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,194,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,195,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,196,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,197,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,198,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,199,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,200,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,201,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,202,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,203,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,204,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,205,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,206,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,207,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,208,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,209,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,210,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,211,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,212,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,213,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,214,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,215,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,216,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,217,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,218,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,219,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,220,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,221,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,222,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,223,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,224,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,225,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,226,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,227,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,228,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,229,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,230,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,231,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,232,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,233,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,234,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,235,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,236,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,237,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,238,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,239,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,240,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,241,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,242,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,243,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,244,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,245,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,246,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,247,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,248,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[689],E,249,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,275,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[690],E,276,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[691],E,250,[[["self"],[R[28]]],[R[14]]]],[11,"hash",R[396],E,193,N],[11,"hash",E,E,194,N],[11,"hash",E,E,195,N],[11,"hash",E,E,196,N],[11,"hash",E,E,197,N],[11,"hash",E,E,198,N],[11,"hash",E,E,199,N],[11,"hash",E,E,200,N],[11,"hash",E,E,201,N],[11,"hash",E,E,202,N],[11,"hash",E,E,203,N],[11,"hash",E,E,204,N],[11,"hash",E,E,205,N],[11,"hash",E,E,206,N],[11,"hash",E,E,207,N],[11,"hash",E,E,208,N],[11,"hash",E,E,209,N],[11,"hash",E,E,210,N],[11,"hash",E,E,211,N],[11,"hash",E,E,212,N],[11,"hash",E,E,213,N],[11,"hash",E,E,214,N],[11,"hash",E,E,215,N],[11,"hash",E,E,216,N],[11,"hash",E,E,217,N],[11,"hash",E,E,218,N],[11,"hash",E,E,219,N],[11,"hash",E,E,220,N],[11,"hash",E,E,221,N],[11,"hash",E,E,222,N],[11,"hash",E,E,223,N],[11,"hash",E,E,224,N],[11,"hash",E,E,225,N],[11,"hash",E,E,226,N],[11,"hash",E,E,227,N],[11,"hash",E,E,228,N],[11,"hash",E,E,229,N],[11,"hash",E,E,230,N],[11,"hash",E,E,231,N],[11,"hash",E,E,232,N],[11,"hash",E,E,233,N],[11,"hash",E,E,234,N],[11,"hash",E,E,235,N],[11,"hash",E,E,236,N],[11,"hash",E,E,237,N],[11,"hash",E,E,238,N],[11,"hash",E,E,239,N],[11,"hash",E,E,240,N],[11,"hash",E,E,241,N],[11,"hash",E,E,242,N],[11,"hash",E,E,243,N],[11,"hash",E,E,244,N],[11,"hash",E,E,245,N],[11,"hash",E,E,246,N],[11,"hash",E,E,247,N],[11,"hash",E,E,248,N],[11,"clone",E,E,0,[[["self"]],[R[765]]]],[11,"clone",E,E,193,[[["self"]],["sdl_bool"]]],[11,"clone",E,E,194,[[["self"]],[R[700]]]],[11,"clone",E,E,251,[[["self"]],["_sdl_iconv_t"]]],[11,"clone",E,E,195,[[["self"]],[R[701]]]],[11,"clone",E,E,1,[[["self"]],["sdl_assertdata"]]],[11,"clone",E,E,2,[[["self"]],["sdl_atomic_t"]]],[11,"clone",E,E,196,[[["self"]],[R[702]]]],[11,"clone",E,E,252,[[["self"]],["sdl_mutex"]]],[11,"clone",E,E,253,[[["self"]],["sdl_semaphore"]]],[11,"clone",E,E,254,[[["self"]],["sdl_cond"]]],[11,"clone",E,E,255,[[["self"]],["sdl_thread"]]],[11,"clone",E,E,197,[[["self"]],[R[703]]]],[11,"clone",E,E,3,[[["self"]],["sdl_rwops"]]],[11,"clone",E,E,169,[[["self"]],["sdl_rwops__bindgen_ty_1"]]],[11,"clone",E,E,4,[[["self"]],["sdl_rwops__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone",E,E,5,[[["self"]],["sdl_rwops__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone",E,E,6,[[["self"]],["sdl_audiospec"]]],[11,"clone",E,E,7,[[["self"]],["sdl_audiocvt"]]],[11,"clone",E,E,198,[[["self"]],[R[704]]]],[11,"clone",E,E,256,[[["self"]],["_sdl_audiostream"]]],[11,"clone",E,E,8,[[["self"]],["div_t"]]],[11,"clone",E,E,9,[[["self"]],["ldiv_t"]]],[11,"clone",E,E,10,[[["self"]],["lldiv_t"]]],[11,"clone",E,E,11,[[["self"]],[R[705]]]],[11,"clone",E,E,12,[[["self"]],[R[773]]]],[11,"clone",E,E,13,[[["self"]],[R[150]]]],[11,"clone",E,E,14,[[["self"]],["fd_set"]]],[11,"clone",E,E,15,[[["self"]],[R[706]]]],[11,"clone",E,E,16,[[["self"]],[R[707]]]],[11,"clone",E,E,17,[[["self"]],[R[708]]]],[11,"clone",E,E,18,[[["self"]],[R[709]]]],[11,"clone",E,E,170,[[["self"]],[R[710]]]],[11,"clone",E,E,19,[[["self"]],[R[711]]]],[11,"clone",E,E,171,[[["self"]],[R[712]]]],[11,"clone",E,E,20,[[["self"]],[R[713]]]],[11,"clone",E,E,172,[[["self"]],[R[121]]]],[11,"clone",E,E,173,[[["self"]],[R[122]]]],[11,"clone",E,E,174,[[["self"]],[R[149]]]],[11,"clone",E,E,175,[[["self"]],[R[145]]]],[11,"clone",E,E,176,[[["self"]],[R[146]]]],[11,"clone",E,E,177,[[["self"]],[R[144]]]],[11,"clone",E,E,178,[[["self"]],[R[123]]]],[11,"clone",E,E,179,[[["self"]],[R[714]]]],[11,"clone",E,E,180,[[["self"]],[R[715]]]],[11,"clone",E,E,21,[[["self"]],[R[716]]]],[11,"clone",E,E,22,[[["self"]],[R[717]]]],[11,"clone",E,E,199,[[["self"]],[R[692]]]],[11,"clone",E,E,200,[[["self"]],[R[693]]]],[11,"clone",E,E,201,[[["self"]],[R[694]]]],[11,"clone",E,E,202,[[["self"]],[R[695]]]],[11,"clone",E,E,203,[[["self"]],[R[696]]]],[11,"clone",E,E,204,[[["self"]],[R[697]]]],[11,"clone",E,E,23,[[["self"]],["sdl_color"]]],[11,"clone",E,E,24,[[["self"]],["sdl_palette"]]],[11,"clone",E,E,25,[[["self"]],["sdl_pixelformat"]]],[11,"clone",E,E,26,[[["self"]],[R[1556]]]],[11,"clone",E,E,27,[[["self"]],[R[1573]]]],[11,"clone",E,E,205,[[["self"]],[R[718]]]],[11,"clone",E,E,206,[[["self"]],[R[719]]]],[11,"clone",E,E,207,[[["self"]],[R[720]]]],[11,"clone",E,E,28,[[["self"]],["sdl_surface"]]],[11,"clone",E,E,208,[[["self"]],[R[721]]]],[11,"clone",E,E,29,[[["self"]],[R[1423]]]],[11,"clone",E,E,257,[[["self"]],["sdl_window"]]],[11,"clone",E,E,209,[[["self"]],[R[722]]]],[11,"clone",E,E,210,[[["self"]],[R[723]]]],[11,"clone",E,E,211,[[["self"]],[R[724]]]],[11,"clone",E,E,212,[[["self"]],[R[725]]]],[11,"clone",E,E,213,[[["self"]],[R[726]]]],[11,"clone",E,E,214,[[["self"]],[R[727]]]],[11,"clone",E,E,215,[[["self"]],[R[728]]]],[11,"clone",E,E,216,[[["self"]],[R[729]]]],[11,"clone",E,E,217,[[["self"]],[R[730]]]],[11,"clone",E,E,218,[[["self"]],[R[731]]]],[11,"clone",E,E,219,[[["self"]],[R[732]]]],[11,"clone",E,E,220,[[["self"]],[R[698]]]],[11,"clone",E,E,221,[[["self"]],[R[733]]]],[11,"clone",E,E,30,[[["self"]],["sdl_keysym"]]],[11,"clone",E,E,258,[[["self"]],["sdl_cursor"]]],[11,"clone",E,E,222,[[["self"]],[R[734]]]],[11,"clone",E,E,223,[[["self"]],[R[735]]]],[11,"clone",E,E,259,[[["self"]],["_sdl_joystick"]]],[11,"clone",E,E,31,[[["self"]],[R[1672]]]],[11,"clone",E,E,224,[[["self"]],[R[736]]]],[11,"clone",E,E,225,[[["self"]],[R[737]]]],[11,"clone",E,E,260,[[["self"]],["_sdl_gamecontroller"]]],[11,"clone",E,E,226,[[["self"]],[R[738]]]],[11,"clone",E,E,32,[[["self"]],["sdl_gamecontrollerbuttonbind"]]],[11,"clone",E,E,181,[[["self"]],["sdl_gamecontrollerbuttonbind__bindgen_ty_1"]]],[11,"clone",E,E,33,[[["self"]],["sdl_gamecontrollerbuttonbind__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone",E,E,227,[[["self"]],[R[739]]]],[11,"clone",E,E,228,[[["self"]],[R[740]]]],[11,"clone",E,E,34,[[["self"]],["sdl_finger"]]],[11,"clone",E,E,229,[[["self"]],[R[741]]]],[11,"clone",E,E,35,[[["self"]],["sdl_commonevent"]]],[11,"clone",E,E,36,[[["self"]],["sdl_displayevent"]]],[11,"clone",E,E,37,[[["self"]],["sdl_windowevent"]]],[11,"clone",E,E,38,[[["self"]],["sdl_keyboardevent"]]],[11,"clone",E,E,39,[[["self"]],["sdl_texteditingevent"]]],[11,"clone",E,E,40,[[["self"]],["sdl_textinputevent"]]],[11,"clone",E,E,41,[[["self"]],["sdl_mousemotionevent"]]],[11,"clone",E,E,42,[[["self"]],["sdl_mousebuttonevent"]]],[11,"clone",E,E,43,[[["self"]],["sdl_mousewheelevent"]]],[11,"clone",E,E,44,[[["self"]],["sdl_joyaxisevent"]]],[11,"clone",E,E,45,[[["self"]],["sdl_joyballevent"]]],[11,"clone",E,E,46,[[["self"]],["sdl_joyhatevent"]]],[11,"clone",E,E,47,[[["self"]],["sdl_joybuttonevent"]]],[11,"clone",E,E,48,[[["self"]],["sdl_joydeviceevent"]]],[11,"clone",E,E,49,[[["self"]],["sdl_controlleraxisevent"]]],[11,"clone",E,E,50,[[["self"]],["sdl_controllerbuttonevent"]]],[11,"clone",E,E,51,[[["self"]],["sdl_controllerdeviceevent"]]],[11,"clone",E,E,52,[[["self"]],["sdl_audiodeviceevent"]]],[11,"clone",E,E,53,[[["self"]],["sdl_touchfingerevent"]]],[11,"clone",E,E,54,[[["self"]],["sdl_multigestureevent"]]],[11,"clone",E,E,55,[[["self"]],["sdl_dollargestureevent"]]],[11,"clone",E,E,56,[[["self"]],["sdl_dropevent"]]],[11,"clone",E,E,57,[[["self"]],["sdl_sensorevent"]]],[11,"clone",E,E,58,[[["self"]],["sdl_quitevent"]]],[11,"clone",E,E,59,[[["self"]],["sdl_osevent"]]],[11,"clone",E,E,60,[[["self"]],["sdl_userevent"]]],[11,"clone",E,E,61,[[["self"]],["sdl_syswmevent"]]],[11,"clone",E,E,182,[[["self"]],["sdl_event"]]],[11,"clone",E,E,230,[[["self"]],[R[742]]]],[11,"clone",E,E,261,[[["self"]],["_sdl_haptic"]]],[11,"clone",E,E,62,[[["self"]],["sdl_hapticdirection"]]],[11,"clone",E,E,63,[[["self"]],["sdl_hapticconstant"]]],[11,"clone",E,E,64,[[["self"]],["sdl_hapticperiodic"]]],[11,"clone",E,E,65,[[["self"]],["sdl_hapticcondition"]]],[11,"clone",E,E,66,[[["self"]],["sdl_hapticramp"]]],[11,"clone",E,E,67,[[["self"]],["sdl_hapticleftright"]]],[11,"clone",E,E,68,[[["self"]],["sdl_hapticcustom"]]],[11,"clone",E,E,183,[[["self"]],["sdl_hapticeffect"]]],[11,"clone",E,E,231,[[["self"]],[R[743]]]],[11,"clone",E,E,232,[[["self"]],[R[699]]]],[11,"clone",E,E,233,[[["self"]],[R[744]]]],[11,"clone",E,E,234,[[["self"]],[R[745]]]],[11,"clone",E,E,235,[[["self"]],[R[746]]]],[11,"clone",E,E,69,[[["self"]],["sdl_messageboxbuttondata"]]],[11,"clone",E,E,70,[[["self"]],["sdl_messageboxcolor"]]],[11,"clone",E,E,236,[[["self"]],[R[747]]]],[11,"clone",E,E,71,[[["self"]],[R[1557]]]],[11,"clone",E,E,72,[[["self"]],["sdl_messageboxdata"]]],[11,"clone",E,E,237,[[["self"]],[R[748]]]],[11,"clone",E,E,238,[[["self"]],[R[749]]]],[11,"clone",E,E,73,[[["self"]],[R[1673]]]],[11,"clone",E,E,239,[[["self"]],[R[750]]]],[11,"clone",E,E,240,[[["self"]],[R[751]]]],[11,"clone",E,E,241,[[["self"]],[R[752]]]],[11,"clone",E,E,262,[[["self"]],["sdl_renderer"]]],[11,"clone",E,E,263,[[["self"]],["sdl_texture"]]],[11,"clone",E,E,264,[[["self"]],["_sdl_sensor"]]],[11,"clone",E,E,242,[[["self"]],[R[753]]]],[11,"clone",E,E,243,[[["self"]],[R[754]]]],[11,"clone",E,E,184,[[["self"]],["sdl_windowshapeparams"]]],[11,"clone",E,E,74,[[["self"]],["sdl_windowshapemode"]]],[11,"clone",E,E,75,[[["self"]],[R[1674]]]],[11,"clone",E,E,76,[[["self"]],["_xextdata"]]],[11,"clone",E,E,77,[[["self"]],["xextcodes"]]],[11,"clone",E,E,78,[[["self"]],["xpixmapformatvalues"]]],[11,"clone",E,E,79,[[["self"]],["xgcvalues"]]],[11,"clone",E,E,265,[[["self"]],["_xgc"]]],[11,"clone",E,E,80,[[["self"]],["visual"]]],[11,"clone",E,E,81,[[["self"]],["depth"]]],[11,"clone",E,E,266,[[["self"]],["_xdisplay"]]],[11,"clone",E,E,82,[[["self"]],["screen"]]],[11,"clone",E,E,83,[[["self"]],["screenformat"]]],[11,"clone",E,E,84,[[["self"]],["xsetwindowattributes"]]],[11,"clone",E,E,85,[[["self"]],["xwindowattributes"]]],[11,"clone",E,E,86,[[["self"]],["xhostaddress"]]],[11,"clone",E,E,87,[[["self"]],["xserverinterpretedaddress"]]],[11,"clone",E,E,88,[[["self"]],["_ximage"]]],[11,"clone",E,E,89,[[["self"]],["_ximage_funcs"]]],[11,"clone",E,E,90,[[["self"]],["xwindowchanges"]]],[11,"clone",E,E,91,[[["self"]],["xcolor"]]],[11,"clone",E,E,92,[[["self"]],["xsegment"]]],[11,"clone",E,E,93,[[["self"]],["xpoint"]]],[11,"clone",E,E,94,[[["self"]],["xrectangle"]]],[11,"clone",E,E,95,[[["self"]],["xarc"]]],[11,"clone",E,E,96,[[["self"]],["xkeyboardcontrol"]]],[11,"clone",E,E,97,[[["self"]],["xkeyboardstate"]]],[11,"clone",E,E,98,[[["self"]],["xtimecoord"]]],[11,"clone",E,E,99,[[["self"]],["xmodifierkeymap"]]],[11,"clone",E,E,267,[[["self"]],["_xprivate"]]],[11,"clone",E,E,268,[[["self"]],["_xrmhashbucketrec"]]],[11,"clone",E,E,100,[[["self"]],[R[755]]]],[11,"clone",E,E,101,[[["self"]],["xkeyevent"]]],[11,"clone",E,E,102,[[["self"]],["xbuttonevent"]]],[11,"clone",E,E,103,[[["self"]],["xmotionevent"]]],[11,"clone",E,E,104,[[["self"]],["xcrossingevent"]]],[11,"clone",E,E,105,[[["self"]],["xfocuschangeevent"]]],[11,"clone",E,E,106,[[["self"]],["xkeymapevent"]]],[11,"clone",E,E,107,[[["self"]],["xexposeevent"]]],[11,"clone",E,E,108,[[["self"]],["xgraphicsexposeevent"]]],[11,"clone",E,E,109,[[["self"]],["xnoexposeevent"]]],[11,"clone",E,E,110,[[["self"]],["xvisibilityevent"]]],[11,"clone",E,E,111,[[["self"]],["xcreatewindowevent"]]],[11,"clone",E,E,112,[[["self"]],["xdestroywindowevent"]]],[11,"clone",E,E,113,[[["self"]],["xunmapevent"]]],[11,"clone",E,E,114,[[["self"]],["xmapevent"]]],[11,"clone",E,E,115,[[["self"]],["xmaprequestevent"]]],[11,"clone",E,E,116,[[["self"]],["xreparentevent"]]],[11,"clone",E,E,117,[[["self"]],["xconfigureevent"]]],[11,"clone",E,E,118,[[["self"]],["xgravityevent"]]],[11,"clone",E,E,119,[[["self"]],["xresizerequestevent"]]],[11,"clone",E,E,120,[[["self"]],["xconfigurerequestevent"]]],[11,"clone",E,E,121,[[["self"]],["xcirculateevent"]]],[11,"clone",E,E,122,[[["self"]],["xcirculaterequestevent"]]],[11,"clone",E,E,123,[[["self"]],["xpropertyevent"]]],[11,"clone",E,E,124,[[["self"]],["xselectionclearevent"]]],[11,"clone",E,E,125,[[["self"]],["xselectionrequestevent"]]],[11,"clone",E,E,126,[[["self"]],["xselectionevent"]]],[11,"clone",E,E,127,[[["self"]],["xcolormapevent"]]],[11,"clone",E,E,128,[[["self"]],["xclientmessageevent"]]],[11,"clone",E,E,185,[[["self"]],["xclientmessageevent__bindgen_ty_1"]]],[11,"clone",E,E,129,[[["self"]],["xmappingevent"]]],[11,"clone",E,E,130,[[["self"]],["xerrorevent"]]],[11,"clone",E,E,131,[[["self"]],["xanyevent"]]],[11,"clone",E,E,132,[[["self"]],["xgenericevent"]]],[11,"clone",E,E,133,[[["self"]],["xgenericeventcookie"]]],[11,"clone",E,E,186,[[["self"]],["_xevent"]]],[11,"clone",E,E,134,[[["self"]],["xcharstruct"]]],[11,"clone",E,E,135,[[["self"]],["xfontprop"]]],[11,"clone",E,E,136,[[["self"]],["xfontstruct"]]],[11,"clone",E,E,137,[[["self"]],["xtextitem"]]],[11,"clone",E,E,138,[[["self"]],["xchar2b"]]],[11,"clone",E,E,139,[[["self"]],["xtextitem16"]]],[11,"clone",E,E,187,[[["self"]],["xedataobject"]]],[11,"clone",E,E,140,[[["self"]],["xfontsetextents"]]],[11,"clone",E,E,269,[[["self"]],["_xom"]]],[11,"clone",E,E,270,[[["self"]],["_xoc"]]],[11,"clone",E,E,141,[[["self"]],["xmbtextitem"]]],[11,"clone",E,E,142,[[["self"]],["xwctextitem"]]],[11,"clone",E,E,143,[[["self"]],["xomcharsetlist"]]],[11,"clone",E,E,244,[[["self"]],[R[756]]]],[11,"clone",E,E,144,[[["self"]],["xomorientation"]]],[11,"clone",E,E,145,[[["self"]],["xomfontinfo"]]],[11,"clone",E,E,271,[[["self"]],["_xim"]]],[11,"clone",E,E,272,[[["self"]],["_xic"]]],[11,"clone",E,E,146,[[["self"]],["ximstyles"]]],[11,"clone",E,E,147,[[["self"]],["ximcallback"]]],[11,"clone",E,E,148,[[["self"]],["xiccallback"]]],[11,"clone",E,E,149,[[["self"]],["_ximtext"]]],[11,"clone",E,E,188,[[["self"]],["_ximtext__bindgen_ty_1"]]],[11,"clone",E,E,150,[[["self"]],["_ximpreeditstatenotifycallbackstruct"]]],[11,"clone",E,E,151,[[["self"]],["_ximstringconversiontext"]]],[11,"clone",E,E,189,[[["self"]],["_ximstringconversiontext__bindgen_ty_1"]]],[11,"clone",E,E,245,[[["self"]],[R[757]]]],[11,"clone",E,E,152,[[["self"]],["_ximstringconversioncallbackstruct"]]],[11,"clone",E,E,153,[[["self"]],["_ximpreeditdrawcallbackstruct"]]],[11,"clone",E,E,246,[[["self"]],[R[758]]]],[11,"clone",E,E,154,[[["self"]],["_ximpreeditcaretcallbackstruct"]]],[11,"clone",E,E,247,[[["self"]],[R[759]]]],[11,"clone",E,E,155,[[["self"]],["_ximstatusdrawcallbackstruct"]]],[11,"clone",E,E,190,[[["self"]],["_ximstatusdrawcallbackstruct__bindgen_ty_1"]]],[11,"clone",E,E,156,[[["self"]],["_ximhotkeytrigger"]]],[11,"clone",E,E,157,[[["self"]],["_ximhotkeytriggers"]]],[11,"clone",E,E,158,[[["self"]],["ximvalueslist"]]],[11,"clone",E,E,248,[[["self"]],[R[760]]]],[11,"clone",E,E,159,[[["self"]],["sdl_syswmmsg"]]],[11,"clone",E,E,191,[[["self"]],["sdl_syswmmsg__bindgen_ty_1"]]],[11,"clone",E,E,160,[[["self"]],["sdl_syswmmsg__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone",E,E,161,[[["self"]],["sdl_syswminfo"]]],[11,"clone",E,E,192,[[["self"]],["sdl_syswminfo__bindgen_ty_1"]]],[11,"clone",E,E,162,[[["self"]],["sdl_syswminfo__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone",E,E,163,[[["self"]],["sdl_syswminfo__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone",E,E,273,[[["self"]],["vkinstance_t"]]],[11,"clone",E,E,274,[[["self"]],["vksurfacekhr_t"]]],[11,"clone",E,E,164,[[["self"]],[R[761]]]],[11,"clone",E,E,165,[[["self"]],["sdl_blitmap"]]],[11,"clone",E,E,166,[[["self"]],[R[762]]]],[11,"clone",E,E,167,[[["self"]],[R[763]]]],[11,"clone",E,E,168,[[["self"]],[R[764]]]],[11,"clone",R[689],E,249,[[["self"]],["mix_chunk"]]],[11,"clone",E,E,275,[[["self"]],["_mix_music"]]],[11,"clone",R[690],E,276,[[["self"]],["_ttf_font"]]],[11,"clone",R[691],E,250,[[["self"]],["fpsmanager"]]]],"p":[[3,R[765]],[3,R[766]],[3,R[767]],[3,R[768]],[3,R[769]],[3,R[770]],[3,R[771]],[3,R[772]],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,R[705]],[3,R[773]],[3,R[150]],[3,"fd_set"],[3,R[706]],[3,R[707]],[3,R[708]],[3,R[709]],[3,R[711]],[3,R[713]],[3,R[716]],[3,R[717]],[3,R[774]],[3,R[775]],[3,R[776]],[3,R[777]],[3,"SDL_Rect"],[3,R[778]],[3,R[779]],[3,R[780]],[3,R[781]],[3,R[782]],[3,R[783]],[3,R[784]],[3,R[785]],[3,R[786]],[3,R[787]],[3,R[788]],[3,R[789]],[3,R[790]],[3,R[791]],[3,R[792]],[3,R[793]],[3,R[794]],[3,R[795]],[3,R[796]],[3,R[797]],[3,R[798]],[3,R[799]],[3,R[800]],[3,R[801]],[3,R[802]],[3,R[803]],[3,R[804]],[3,R[805]],[3,R[806]],[3,R[807]],[3,R[808]],[3,R[809]],[3,R[810]],[3,R[811]],[3,R[812]],[3,R[813]],[3,R[814]],[3,R[815]],[3,R[816]],[3,R[817]],[3,R[818]],[3,R[819]],[3,R[820]],[3,R[821]],[3,R[822]],[3,R[823]],[3,R[824]],[3,R[825]],[3,R[826]],[3,R[827]],[3,R[828]],[3,R[829]],[3,"Visual"],[3,"Depth"],[3,"Screen"],[3,R[830]],[3,R[831]],[3,R[832]],[3,R[833]],[3,R[834]],[3,"_XImage"],[3,R[835]],[3,R[836]],[3,"XColor"],[3,"XSegment"],[3,"XPoint"],[3,R[837]],[3,"XArc"],[3,R[838]],[3,R[839]],[3,R[840]],[3,R[841]],[3,R[755]],[3,R[842]],[3,R[843]],[3,R[844]],[3,R[845]],[3,R[846]],[3,R[847]],[3,R[848]],[3,R[849]],[3,R[850]],[3,R[851]],[3,R[852]],[3,R[853]],[3,R[854]],[3,R[855]],[3,R[856]],[3,R[857]],[3,R[858]],[3,R[859]],[3,R[860]],[3,R[861]],[3,R[862]],[3,R[863]],[3,R[864]],[3,R[865]],[3,R[866]],[3,R[867]],[3,R[868]],[3,R[869]],[3,R[870]],[3,R[871]],[3,R[872]],[3,R[873]],[3,R[874]],[3,R[875]],[3,R[876]],[3,R[877]],[3,R[878]],[3,"XChar2b"],[3,R[879]],[3,R[880]],[3,R[881]],[3,R[882]],[3,R[883]],[3,R[884]],[3,R[885]],[3,R[886]],[3,R[887]],[3,R[888]],[3,"_XIMText"],[3,R[889]],[3,R[890]],[3,R[891]],[3,R[892]],[3,R[893]],[3,R[894]],[3,R[895]],[3,R[896]],[3,R[897]],[3,R[898]],[3,R[899]],[3,R[900]],[3,R[901]],[3,R[902]],[3,R[761]],[3,R[903]],[3,R[762]],[3,R[763]],[3,R[764]],[19,R[904]],[19,R[710]],[19,R[712]],[19,R[121]],[19,R[122]],[19,R[149]],[19,R[145]],[19,R[146]],[19,R[144]],[19,R[123]],[19,R[714]],[19,R[715]],[19,R[905]],[19,R[906]],[19,R[907]],[19,R[908]],[19,R[909]],[19,"_XEvent"],[19,R[910]],[19,R[911]],[19,R[912]],[19,R[913]],[19,R[914]],[19,R[915]],[4,"SDL_bool"],[4,R[916]],[4,R[917]],[4,R[918]],[4,R[919]],[4,R[920]],[4,R[692]],[4,R[693]],[4,R[694]],[4,R[695]],[4,R[696]],[4,R[697]],[4,R[921]],[4,R[922]],[4,R[923]],[4,R[924]],[4,R[925]],[4,R[926]],[4,R[927]],[4,R[928]],[4,R[929]],[4,R[930]],[4,R[931]],[4,R[932]],[4,R[933]],[4,R[934]],[4,R[935]],[4,R[698]],[4,R[936]],[4,R[937]],[4,R[938]],[4,R[939]],[4,R[940]],[4,R[941]],[4,R[942]],[4,R[943]],[4,R[944]],[4,R[945]],[4,R[946]],[4,R[699]],[4,R[947]],[4,R[948]],[4,R[949]],[4,R[950]],[4,R[951]],[4,R[952]],[4,R[953]],[4,R[954]],[4,R[955]],[4,R[956]],[4,R[957]],[4,R[958]],[4,R[959]],[4,R[960]],[4,R[961]],[4,R[962]],[3,R[963]],[3,R[964]],[3,R[965]],[3,R[966]],[3,R[967]],[3,"SDL_cond"],[3,R[968]],[3,R[969]],[3,R[970]],[3,R[971]],[3,R[972]],[3,R[973]],[3,R[974]],[3,R[975]],[3,R[976]],[3,R[977]],[3,"_XGC"],[3,R[978]],[3,R[979]],[3,R[980]],[3,"_XOM"],[3,"_XOC"],[3,"_XIM"],[3,"_XIC"],[3,R[981]],[3,R[982]],[3,R[983]],[3,R[984]]]};
searchIndex[R[48]]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,R[48],R[48],"The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex[R[49]]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize",R[49],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[49],E,E,N,N]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);